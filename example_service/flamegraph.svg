<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1894" onload="init(evt)" viewBox="0 0 1200 1894" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1894" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1877.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1877.00"> </text><svg id="frames" x="10" width="1180" total_samples="2207"><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.09%)</title><rect x="0.0000%" y="1781" width="0.0906%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1791.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.09%)</title><rect x="0.0000%" y="1765" width="0.0906%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1775.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.05%)</title><rect x="0.0453%" y="1749" width="0.0453%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.2953%" y="1759.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.05%)</title><rect x="0.0453%" y="1733" width="0.0453%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2953%" y="1743.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.05%)</title><rect x="0.0453%" y="1717" width="0.0453%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.2953%" y="1727.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.05%)</title><rect x="0.0453%" y="1701" width="0.0453%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.2953%" y="1711.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.05%)</title><rect x="0.0453%" y="1685" width="0.0453%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.2953%" y="1695.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.05%)</title><rect x="0.0453%" y="1669" width="0.0453%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.2953%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.0453%" y="1653" width="0.0453%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.2953%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.0453%" y="1637" width="0.0453%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.2953%" y="1647.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.0453%" y="1621" width="0.0453%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="0.2953%" y="1631.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.27%)</title><rect x="0.0000%" y="1797" width="0.2719%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="6"/><text x="0.2500%" y="1807.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="0.0906%" y="1781" width="0.1812%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="4"/><text x="0.3406%" y="1791.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="0.0906%" y="1765" width="0.1812%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="4"/><text x="0.3406%" y="1775.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="0.0906%" y="1749" width="0.1812%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="4"/><text x="0.3406%" y="1759.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="0.0906%" y="1733" width="0.1812%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="4"/><text x="0.3406%" y="1743.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="0.0906%" y="1717" width="0.1812%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="4"/><text x="0.3406%" y="1727.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="0.1359%" y="1701" width="0.1359%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="3"/><text x="0.3859%" y="1711.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="0.1359%" y="1685" width="0.1359%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="3"/><text x="0.3859%" y="1695.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="0.1359%" y="1669" width="0.1359%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="3"/><text x="0.3859%" y="1679.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="0.1812%" y="1653" width="0.0906%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="2"/><text x="0.4312%" y="1663.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="0.1812%" y="1637" width="0.0906%" height="15" fill="rgb(235,183,28)" fg:x="4" fg:w="2"/><text x="0.4312%" y="1647.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="0.1812%" y="1621" width="0.0906%" height="15" fill="rgb(221,5,38)" fg:x="4" fg:w="2"/><text x="0.4312%" y="1631.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.32%)</title><rect x="0.0000%" y="1813" width="0.3172%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="7"/><text x="0.2500%" y="1823.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.2719%" y="1797" width="0.0453%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="1"/><text x="0.5219%" y="1807.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.2719%" y="1781" width="0.0453%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="1"/><text x="0.5219%" y="1791.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.2719%" y="1765" width="0.0453%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="1"/><text x="0.5219%" y="1775.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.2719%" y="1749" width="0.0453%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="1"/><text x="0.5219%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.2719%" y="1733" width="0.0453%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="1"/><text x="0.5219%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.2719%" y="1717" width="0.0453%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="1"/><text x="0.5219%" y="1727.50"></text></g><g><title>[libc.so.6] (6 samples, 0.27%)</title><rect x="0.3172%" y="1781" width="0.2719%" height="15" fill="rgb(209,103,24)" fg:x="7" fg:w="6"/><text x="0.5672%" y="1791.50"></text></g><g><title>snprintf (5 samples, 0.23%)</title><rect x="0.3625%" y="1765" width="0.2266%" height="15" fill="rgb(229,88,8)" fg:x="8" fg:w="5"/><text x="0.6125%" y="1775.50"></text></g><g><title>[libc.so.6] (5 samples, 0.23%)</title><rect x="0.3625%" y="1749" width="0.2266%" height="15" fill="rgb(213,181,19)" fg:x="8" fg:w="5"/><text x="0.6125%" y="1759.50"></text></g><g><title>[libc.so.6] (5 samples, 0.23%)</title><rect x="0.3625%" y="1733" width="0.2266%" height="15" fill="rgb(254,191,54)" fg:x="8" fg:w="5"/><text x="0.6125%" y="1743.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="0.4984%" y="1717" width="0.0906%" height="15" fill="rgb(241,83,37)" fg:x="11" fg:w="2"/><text x="0.7484%" y="1727.50"></text></g><g><title>[unknown] (8 samples, 0.36%)</title><rect x="0.5890%" y="1781" width="0.3625%" height="15" fill="rgb(233,36,39)" fg:x="13" fg:w="8"/><text x="0.8390%" y="1791.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="0.8156%" y="1765" width="0.1359%" height="15" fill="rgb(226,3,54)" fg:x="18" fg:w="3"/><text x="1.0656%" y="1775.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="0.8156%" y="1749" width="0.1359%" height="15" fill="rgb(245,192,40)" fg:x="18" fg:w="3"/><text x="1.0656%" y="1759.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="0.8609%" y="1733" width="0.0906%" height="15" fill="rgb(238,167,29)" fg:x="19" fg:w="2"/><text x="1.1109%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="0.9062%" y="1717" width="0.0453%" height="15" fill="rgb(232,182,51)" fg:x="20" fg:w="1"/><text x="1.1562%" y="1727.50"></text></g><g><title>__sigsetjmp (1 samples, 0.05%)</title><rect x="0.9515%" y="1781" width="0.0453%" height="15" fill="rgb(231,60,39)" fg:x="21" fg:w="1"/><text x="1.2015%" y="1791.50"></text></g><g><title>_setjmp (1 samples, 0.05%)</title><rect x="0.9968%" y="1781" width="0.0453%" height="15" fill="rgb(208,69,12)" fg:x="22" fg:w="1"/><text x="1.2468%" y="1791.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.23%)</title><rect x="1.0421%" y="1765" width="0.2266%" height="15" fill="rgb(235,93,37)" fg:x="23" fg:w="5"/><text x="1.2921%" y="1775.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.23%)</title><rect x="1.0421%" y="1749" width="0.2266%" height="15" fill="rgb(213,116,39)" fg:x="23" fg:w="5"/><text x="1.2921%" y="1759.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.23%)</title><rect x="1.0421%" y="1733" width="0.2266%" height="15" fill="rgb(222,207,29)" fg:x="23" fg:w="5"/><text x="1.2921%" y="1743.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (5 samples, 0.23%)</title><rect x="1.0421%" y="1717" width="0.2266%" height="15" fill="rgb(206,96,30)" fg:x="23" fg:w="5"/><text x="1.2921%" y="1727.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::set_name (5 samples, 0.23%)</title><rect x="1.0421%" y="1701" width="0.2266%" height="15" fill="rgb(218,138,4)" fg:x="23" fg:w="5"/><text x="1.2921%" y="1711.50"></text></g><g><title>pthread_setname_np (5 samples, 0.23%)</title><rect x="1.0421%" y="1685" width="0.2266%" height="15" fill="rgb(250,191,14)" fg:x="23" fg:w="5"/><text x="1.2921%" y="1695.50"></text></g><g><title>prctl (5 samples, 0.23%)</title><rect x="1.0421%" y="1669" width="0.2266%" height="15" fill="rgb(239,60,40)" fg:x="23" fg:w="5"/><text x="1.2921%" y="1679.50"></text></g><g><title>[unknown] (5 samples, 0.23%)</title><rect x="1.0421%" y="1653" width="0.2266%" height="15" fill="rgb(206,27,48)" fg:x="23" fg:w="5"/><text x="1.2921%" y="1663.50"></text></g><g><title>[unknown] (5 samples, 0.23%)</title><rect x="1.0421%" y="1637" width="0.2266%" height="15" fill="rgb(225,35,8)" fg:x="23" fg:w="5"/><text x="1.2921%" y="1647.50"></text></g><g><title>[unknown] (5 samples, 0.23%)</title><rect x="1.0421%" y="1621" width="0.2266%" height="15" fill="rgb(250,213,24)" fg:x="23" fg:w="5"/><text x="1.2921%" y="1631.50"></text></g><g><title>[unknown] (5 samples, 0.23%)</title><rect x="1.0421%" y="1605" width="0.2266%" height="15" fill="rgb(247,123,22)" fg:x="23" fg:w="5"/><text x="1.2921%" y="1615.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="1.0874%" y="1589" width="0.1812%" height="15" fill="rgb(231,138,38)" fg:x="24" fg:w="4"/><text x="1.3374%" y="1599.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="1.0874%" y="1573" width="0.1812%" height="15" fill="rgb(231,145,46)" fg:x="24" fg:w="4"/><text x="1.3374%" y="1583.50"></text></g><g><title>sigaltstack (3 samples, 0.14%)</title><rect x="1.2687%" y="1733" width="0.1359%" height="15" fill="rgb(251,118,11)" fg:x="28" fg:w="3"/><text x="1.5187%" y="1743.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="1.2687%" y="1717" width="0.1359%" height="15" fill="rgb(217,147,25)" fg:x="28" fg:w="3"/><text x="1.5187%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="1.3593%" y="1701" width="0.0453%" height="15" fill="rgb(247,81,37)" fg:x="30" fg:w="1"/><text x="1.6093%" y="1711.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="1.3593%" y="1685" width="0.0453%" height="15" fill="rgb(209,12,38)" fg:x="30" fg:w="1"/><text x="1.6093%" y="1695.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="1.3593%" y="1669" width="0.0453%" height="15" fill="rgb(227,1,9)" fg:x="30" fg:w="1"/><text x="1.6093%" y="1679.50"></text></g><g><title>__mmap (13 samples, 0.59%)</title><rect x="1.4046%" y="1701" width="0.5890%" height="15" fill="rgb(248,47,43)" fg:x="31" fg:w="13"/><text x="1.6546%" y="1711.50"></text></g><g><title>[unknown] (13 samples, 0.59%)</title><rect x="1.4046%" y="1685" width="0.5890%" height="15" fill="rgb(221,10,30)" fg:x="31" fg:w="13"/><text x="1.6546%" y="1695.50"></text></g><g><title>[unknown] (13 samples, 0.59%)</title><rect x="1.4046%" y="1669" width="0.5890%" height="15" fill="rgb(210,229,1)" fg:x="31" fg:w="13"/><text x="1.6546%" y="1679.50"></text></g><g><title>[unknown] (13 samples, 0.59%)</title><rect x="1.4046%" y="1653" width="0.5890%" height="15" fill="rgb(222,148,37)" fg:x="31" fg:w="13"/><text x="1.6546%" y="1663.50"></text></g><g><title>[unknown] (12 samples, 0.54%)</title><rect x="1.4499%" y="1637" width="0.5437%" height="15" fill="rgb(234,67,33)" fg:x="32" fg:w="12"/><text x="1.6999%" y="1647.50"></text></g><g><title>[unknown] (8 samples, 0.36%)</title><rect x="1.6312%" y="1621" width="0.3625%" height="15" fill="rgb(247,98,35)" fg:x="36" fg:w="8"/><text x="1.8812%" y="1631.50"></text></g><g><title>[unknown] (6 samples, 0.27%)</title><rect x="1.7218%" y="1605" width="0.2719%" height="15" fill="rgb(247,138,52)" fg:x="38" fg:w="6"/><text x="1.9718%" y="1615.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="1.9030%" y="1589" width="0.0906%" height="15" fill="rgb(213,79,30)" fg:x="42" fg:w="2"/><text x="2.1530%" y="1599.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="1.9030%" y="1573" width="0.0906%" height="15" fill="rgb(246,177,23)" fg:x="42" fg:w="2"/><text x="2.1530%" y="1583.50"></text></g><g><title>__mprotect (8 samples, 0.36%)</title><rect x="1.9937%" y="1701" width="0.3625%" height="15" fill="rgb(230,62,27)" fg:x="44" fg:w="8"/><text x="2.2437%" y="1711.50"></text></g><g><title>[unknown] (8 samples, 0.36%)</title><rect x="1.9937%" y="1685" width="0.3625%" height="15" fill="rgb(216,154,8)" fg:x="44" fg:w="8"/><text x="2.2437%" y="1695.50"></text></g><g><title>[unknown] (8 samples, 0.36%)</title><rect x="1.9937%" y="1669" width="0.3625%" height="15" fill="rgb(244,35,45)" fg:x="44" fg:w="8"/><text x="2.2437%" y="1679.50"></text></g><g><title>[unknown] (8 samples, 0.36%)</title><rect x="1.9937%" y="1653" width="0.3625%" height="15" fill="rgb(251,115,12)" fg:x="44" fg:w="8"/><text x="2.2437%" y="1663.50"></text></g><g><title>[unknown] (8 samples, 0.36%)</title><rect x="1.9937%" y="1637" width="0.3625%" height="15" fill="rgb(240,54,50)" fg:x="44" fg:w="8"/><text x="2.2437%" y="1647.50"></text></g><g><title>[unknown] (8 samples, 0.36%)</title><rect x="1.9937%" y="1621" width="0.3625%" height="15" fill="rgb(233,84,52)" fg:x="44" fg:w="8"/><text x="2.2437%" y="1631.50"></text></g><g><title>[unknown] (8 samples, 0.36%)</title><rect x="1.9937%" y="1605" width="0.3625%" height="15" fill="rgb(207,117,47)" fg:x="44" fg:w="8"/><text x="2.2437%" y="1615.50"></text></g><g><title>[unknown] (8 samples, 0.36%)</title><rect x="1.9937%" y="1589" width="0.3625%" height="15" fill="rgb(249,43,39)" fg:x="44" fg:w="8"/><text x="2.2437%" y="1599.50"></text></g><g><title>[unknown] (5 samples, 0.23%)</title><rect x="2.1296%" y="1573" width="0.2266%" height="15" fill="rgb(209,38,44)" fg:x="47" fg:w="5"/><text x="2.3796%" y="1583.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="2.2202%" y="1557" width="0.1359%" height="15" fill="rgb(236,212,23)" fg:x="49" fg:w="3"/><text x="2.4702%" y="1567.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="2.3108%" y="1541" width="0.0453%" height="15" fill="rgb(242,79,21)" fg:x="51" fg:w="1"/><text x="2.5608%" y="1551.50"></text></g><g><title>[libc.so.6] (46 samples, 2.08%)</title><rect x="0.3172%" y="1813" width="2.0843%" height="15" fill="rgb(211,96,35)" fg:x="7" fg:w="46"/><text x="0.5672%" y="1823.50">[..</text></g><g><title>[libc.so.6] (46 samples, 2.08%)</title><rect x="0.3172%" y="1797" width="2.0843%" height="15" fill="rgb(253,215,40)" fg:x="7" fg:w="46"/><text x="0.5672%" y="1807.50">[..</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (30 samples, 1.36%)</title><rect x="1.0421%" y="1781" width="1.3593%" height="15" fill="rgb(211,81,21)" fg:x="23" fg:w="30"/><text x="1.2921%" y="1791.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (25 samples, 1.13%)</title><rect x="1.2687%" y="1765" width="1.1328%" height="15" fill="rgb(208,190,38)" fg:x="28" fg:w="25"/><text x="1.5187%" y="1775.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (25 samples, 1.13%)</title><rect x="1.2687%" y="1749" width="1.1328%" height="15" fill="rgb(235,213,38)" fg:x="28" fg:w="25"/><text x="1.5187%" y="1759.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack (22 samples, 1.00%)</title><rect x="1.4046%" y="1733" width="0.9968%" height="15" fill="rgb(237,122,38)" fg:x="31" fg:w="22"/><text x="1.6546%" y="1743.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stackp (22 samples, 1.00%)</title><rect x="1.4046%" y="1717" width="0.9968%" height="15" fill="rgb(244,218,35)" fg:x="31" fg:w="22"/><text x="1.6546%" y="1727.50"></text></g><g><title>std::sys::pal::unix::os::page_size (1 samples, 0.05%)</title><rect x="2.3561%" y="1701" width="0.0453%" height="15" fill="rgb(240,68,47)" fg:x="52" fg:w="1"/><text x="2.6061%" y="1711.50"></text></g><g><title>__sysconf (1 samples, 0.05%)</title><rect x="2.3561%" y="1685" width="0.0453%" height="15" fill="rgb(210,16,53)" fg:x="52" fg:w="1"/><text x="2.6061%" y="1695.50"></text></g><g><title>[unknown] (16 samples, 0.72%)</title><rect x="2.4014%" y="1813" width="0.7250%" height="15" fill="rgb(235,124,12)" fg:x="53" fg:w="16"/><text x="2.6514%" y="1823.50"></text></g><g><title>[unknown] (13 samples, 0.59%)</title><rect x="2.5374%" y="1797" width="0.5890%" height="15" fill="rgb(224,169,11)" fg:x="56" fg:w="13"/><text x="2.7874%" y="1807.50"></text></g><g><title>[unknown] (13 samples, 0.59%)</title><rect x="2.5374%" y="1781" width="0.5890%" height="15" fill="rgb(250,166,2)" fg:x="56" fg:w="13"/><text x="2.7874%" y="1791.50"></text></g><g><title>[unknown] (13 samples, 0.59%)</title><rect x="2.5374%" y="1765" width="0.5890%" height="15" fill="rgb(242,216,29)" fg:x="56" fg:w="13"/><text x="2.7874%" y="1775.50"></text></g><g><title>[unknown] (8 samples, 0.36%)</title><rect x="2.7639%" y="1749" width="0.3625%" height="15" fill="rgb(230,116,27)" fg:x="61" fg:w="8"/><text x="3.0139%" y="1759.50"></text></g><g><title>[unknown] (5 samples, 0.23%)</title><rect x="2.8999%" y="1733" width="0.2266%" height="15" fill="rgb(228,99,48)" fg:x="64" fg:w="5"/><text x="3.1499%" y="1743.50"></text></g><g><title>[unknown] (5 samples, 0.23%)</title><rect x="2.8999%" y="1717" width="0.2266%" height="15" fill="rgb(253,11,6)" fg:x="64" fg:w="5"/><text x="3.1499%" y="1727.50"></text></g><g><title>[unknown] (5 samples, 0.23%)</title><rect x="2.8999%" y="1701" width="0.2266%" height="15" fill="rgb(247,143,39)" fg:x="64" fg:w="5"/><text x="3.1499%" y="1711.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="2.9452%" y="1685" width="0.1812%" height="15" fill="rgb(236,97,10)" fg:x="65" fg:w="4"/><text x="3.1952%" y="1695.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="2.9905%" y="1669" width="0.1359%" height="15" fill="rgb(233,208,19)" fg:x="66" fg:w="3"/><text x="3.2405%" y="1679.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="3.0358%" y="1653" width="0.0906%" height="15" fill="rgb(216,164,2)" fg:x="67" fg:w="2"/><text x="3.2858%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="3.0811%" y="1637" width="0.0453%" height="15" fill="rgb(220,129,5)" fg:x="68" fg:w="1"/><text x="3.3311%" y="1647.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (3 samples, 0.14%)</title><rect x="3.7155%" y="1557" width="0.1359%" height="15" fill="rgb(242,17,10)" fg:x="82" fg:w="3"/><text x="3.9655%" y="1567.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (3 samples, 0.14%)</title><rect x="3.7155%" y="1541" width="0.1359%" height="15" fill="rgb(242,107,0)" fg:x="82" fg:w="3"/><text x="3.9655%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::poll::Poll&lt;tokio::runtime::coop::RestoreOnPending&gt;&gt; (3 samples, 0.14%)</title><rect x="3.7155%" y="1525" width="0.1359%" height="15" fill="rgb(251,28,31)" fg:x="82" fg:w="3"/><text x="3.9655%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::RestoreOnPending&gt; (3 samples, 0.14%)</title><rect x="3.7155%" y="1509" width="0.1359%" height="15" fill="rgb(233,223,10)" fg:x="82" fg:w="3"/><text x="3.9655%" y="1519.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (3 samples, 0.14%)</title><rect x="3.7155%" y="1493" width="0.1359%" height="15" fill="rgb(215,21,27)" fg:x="82" fg:w="3"/><text x="3.9655%" y="1503.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::take_output (36 samples, 1.63%)</title><rect x="3.9873%" y="1541" width="1.6312%" height="15" fill="rgb(232,23,21)" fg:x="88" fg:w="36"/><text x="4.2373%" y="1551.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (36 samples, 1.63%)</title><rect x="3.9873%" y="1525" width="1.6312%" height="15" fill="rgb(244,5,23)" fg:x="88" fg:w="36"/><text x="4.2373%" y="1535.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::take_output::_{{closure}} (36 samples, 1.63%)</title><rect x="3.9873%" y="1509" width="1.6312%" height="15" fill="rgb(226,81,46)" fg:x="88" fg:w="36"/><text x="4.2373%" y="1519.50"></text></g><g><title>core::mem::replace (35 samples, 1.59%)</title><rect x="4.0326%" y="1493" width="1.5859%" height="15" fill="rgb(247,70,30)" fg:x="89" fg:w="35"/><text x="4.2826%" y="1503.50"></text></g><g><title>core::ptr::read (35 samples, 1.59%)</title><rect x="4.0326%" y="1477" width="1.5859%" height="15" fill="rgb(212,68,19)" fg:x="89" fg:w="35"/><text x="4.2826%" y="1487.50"></text></g><g><title>[libc.so.6] (35 samples, 1.59%)</title><rect x="4.0326%" y="1461" width="1.5859%" height="15" fill="rgb(240,187,13)" fg:x="89" fg:w="35"/><text x="4.2826%" y="1471.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="5.6185%" y="1525" width="0.0906%" height="15" fill="rgb(223,113,26)" fg:x="124" fg:w="2"/><text x="5.8685%" y="1535.50"></text></g><g><title>futures_task::waker::clone_arc_raw (2 samples, 0.09%)</title><rect x="5.6185%" y="1509" width="0.0906%" height="15" fill="rgb(206,192,2)" fg:x="124" fg:w="2"/><text x="5.8685%" y="1519.50"></text></g><g><title>futures_task::waker::increase_refcount (2 samples, 0.09%)</title><rect x="5.6185%" y="1493" width="0.0906%" height="15" fill="rgb(241,108,4)" fg:x="124" fg:w="2"/><text x="5.8685%" y="1503.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="5.6185%" y="1477" width="0.0906%" height="15" fill="rgb(247,173,49)" fg:x="124" fg:w="2"/><text x="5.8685%" y="1487.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="5.6185%" y="1461" width="0.0906%" height="15" fill="rgb(224,114,35)" fg:x="124" fg:w="2"/><text x="5.8685%" y="1471.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.05%)</title><rect x="5.6638%" y="1445" width="0.0453%" height="15" fill="rgb(245,159,27)" fg:x="125" fg:w="1"/><text x="5.9138%" y="1455.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.05%)</title><rect x="5.6638%" y="1429" width="0.0453%" height="15" fill="rgb(245,172,44)" fg:x="125" fg:w="1"/><text x="5.9138%" y="1439.50"></text></g><g><title>tokio::runtime::task::core::Trailer::set_waker (2 samples, 0.09%)</title><rect x="5.7091%" y="1509" width="0.0906%" height="15" fill="rgb(236,23,11)" fg:x="126" fg:w="2"/><text x="5.9591%" y="1519.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.09%)</title><rect x="5.7091%" y="1493" width="0.0906%" height="15" fill="rgb(205,117,38)" fg:x="126" fg:w="2"/><text x="5.9591%" y="1503.50"></text></g><g><title>tokio::runtime::task::core::Trailer::set_waker::_{{closure}} (2 samples, 0.09%)</title><rect x="5.7091%" y="1477" width="0.0906%" height="15" fill="rgb(237,72,25)" fg:x="126" fg:w="2"/><text x="5.9591%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (2 samples, 0.09%)</title><rect x="5.7091%" y="1461" width="0.0906%" height="15" fill="rgb(244,70,9)" fg:x="126" fg:w="2"/><text x="5.9591%" y="1471.50"></text></g><g><title>tokio::runtime::task::harness::set_join_waker (3 samples, 0.14%)</title><rect x="5.7091%" y="1525" width="0.1359%" height="15" fill="rgb(217,125,39)" fg:x="126" fg:w="3"/><text x="5.9591%" y="1535.50"></text></g><g><title>tokio::runtime::task::state::State::set_join_waker (1 samples, 0.05%)</title><rect x="5.7997%" y="1509" width="0.0453%" height="15" fill="rgb(235,36,10)" fg:x="128" fg:w="1"/><text x="6.0497%" y="1519.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (1 samples, 0.05%)</title><rect x="5.7997%" y="1493" width="0.0453%" height="15" fill="rgb(251,123,47)" fg:x="128" fg:w="1"/><text x="6.0497%" y="1503.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.05%)</title><rect x="5.7997%" y="1477" width="0.0453%" height="15" fill="rgb(221,13,13)" fg:x="128" fg:w="1"/><text x="6.0497%" y="1487.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.05%)</title><rect x="5.7997%" y="1461" width="0.0453%" height="15" fill="rgb(238,131,9)" fg:x="128" fg:w="1"/><text x="6.0497%" y="1471.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (48 samples, 2.17%)</title><rect x="3.8514%" y="1557" width="2.1749%" height="15" fill="rgb(211,50,8)" fg:x="85" fg:w="48"/><text x="4.1014%" y="1567.50">t..</text></g><g><title>tokio::runtime::task::harness::can_read_output (9 samples, 0.41%)</title><rect x="5.6185%" y="1541" width="0.4078%" height="15" fill="rgb(245,182,24)" fg:x="124" fg:w="9"/><text x="5.8685%" y="1551.50"></text></g><g><title>tokio::runtime::task::state::State::load (4 samples, 0.18%)</title><rect x="5.8450%" y="1525" width="0.1812%" height="15" fill="rgb(242,14,37)" fg:x="129" fg:w="4"/><text x="6.0950%" y="1535.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.18%)</title><rect x="5.8450%" y="1509" width="0.1812%" height="15" fill="rgb(246,228,12)" fg:x="129" fg:w="4"/><text x="6.0950%" y="1519.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.18%)</title><rect x="5.8450%" y="1493" width="0.1812%" height="15" fill="rgb(213,55,15)" fg:x="129" fg:w="4"/><text x="6.0950%" y="1503.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (57 samples, 2.58%)</title><rect x="3.6701%" y="1573" width="2.5827%" height="15" fill="rgb(209,9,3)" fg:x="81" fg:w="57"/><text x="3.9201%" y="1583.50">&lt;t..</text></g><g><title>tokio::runtime::task::raw::RawTask::try_read_output (5 samples, 0.23%)</title><rect x="6.0263%" y="1557" width="0.2266%" height="15" fill="rgb(230,59,30)" fg:x="133" fg:w="5"/><text x="6.2763%" y="1567.50"></text></g><g><title>cfree (15 samples, 0.68%)</title><rect x="6.2528%" y="1573" width="0.6797%" height="15" fill="rgb(209,121,21)" fg:x="138" fg:w="15"/><text x="6.5028%" y="1583.50"></text></g><g><title>[libc.so.6] (6 samples, 0.27%)</title><rect x="6.6606%" y="1557" width="0.2719%" height="15" fill="rgb(220,109,13)" fg:x="147" fg:w="6"/><text x="6.9106%" y="1567.50"></text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project (1 samples, 0.05%)</title><rect x="6.9325%" y="1573" width="0.0453%" height="15" fill="rgb(232,18,1)" fg:x="153" fg:w="1"/><text x="7.1825%" y="1583.50"></text></g><g><title>cfree (33 samples, 1.50%)</title><rect x="7.0231%" y="1477" width="1.4952%" height="15" fill="rgb(215,41,42)" fg:x="155" fg:w="33"/><text x="7.2731%" y="1487.50"></text></g><g><title>[libc.so.6] (33 samples, 1.50%)</title><rect x="7.0231%" y="1461" width="1.4952%" height="15" fill="rgb(224,123,36)" fg:x="155" fg:w="33"/><text x="7.2731%" y="1471.50"></text></g><g><title>[libc.so.6] (30 samples, 1.36%)</title><rect x="7.1590%" y="1445" width="1.3593%" height="15" fill="rgb(240,125,3)" fg:x="158" fg:w="30"/><text x="7.4090%" y="1455.50"></text></g><g><title>[libc.so.6] (28 samples, 1.27%)</title><rect x="7.2497%" y="1429" width="1.2687%" height="15" fill="rgb(205,98,50)" fg:x="160" fg:w="28"/><text x="7.4997%" y="1439.50"></text></g><g><title>[libc.so.6] (22 samples, 1.00%)</title><rect x="7.5215%" y="1413" width="0.9968%" height="15" fill="rgb(205,185,37)" fg:x="166" fg:w="22"/><text x="7.7715%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt; (2 samples, 0.09%)</title><rect x="8.5184%" y="1397" width="0.0906%" height="15" fill="rgb(238,207,15)" fg:x="188" fg:w="2"/><text x="8.7684%" y="1407.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="8.5184%" y="1381" width="0.0906%" height="15" fill="rgb(213,199,42)" fg:x="188" fg:w="2"/><text x="8.7684%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;client::main::{{closure}}::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (4 samples, 0.18%)</title><rect x="8.5184%" y="1413" width="0.1812%" height="15" fill="rgb(235,201,11)" fg:x="188" fg:w="4"/><text x="8.7684%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::CoreStage&lt;client::main::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (2 samples, 0.09%)</title><rect x="8.6090%" y="1397" width="0.0906%" height="15" fill="rgb(207,46,11)" fg:x="190" fg:w="2"/><text x="8.8590%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;tokio::runtime::task::core::Stage&lt;client::main::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt; (2 samples, 0.09%)</title><rect x="8.6090%" y="1381" width="0.0906%" height="15" fill="rgb(241,35,35)" fg:x="190" fg:w="2"/><text x="8.8590%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;tokio::runtime::task::core::Stage&lt;client::main::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt; (2 samples, 0.09%)</title><rect x="8.6090%" y="1365" width="0.0906%" height="15" fill="rgb(243,32,47)" fg:x="190" fg:w="2"/><text x="8.8590%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;client::main::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (2 samples, 0.09%)</title><rect x="8.6090%" y="1349" width="0.0906%" height="15" fill="rgb(247,202,23)" fg:x="190" fg:w="2"/><text x="8.8590%" y="1359.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (6 samples, 0.27%)</title><rect x="8.5184%" y="1477" width="0.2719%" height="15" fill="rgb(219,102,11)" fg:x="188" fg:w="6"/><text x="8.7684%" y="1487.50"></text></g><g><title>core::mem::drop (6 samples, 0.27%)</title><rect x="8.5184%" y="1461" width="0.2719%" height="15" fill="rgb(243,110,44)" fg:x="188" fg:w="6"/><text x="8.7684%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;client::main::{{closure}}::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (6 samples, 0.27%)</title><rect x="8.5184%" y="1445" width="0.2719%" height="15" fill="rgb(222,74,54)" fg:x="188" fg:w="6"/><text x="8.7684%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;client::main::{{closure}}::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (6 samples, 0.27%)</title><rect x="8.5184%" y="1429" width="0.2719%" height="15" fill="rgb(216,99,12)" fg:x="188" fg:w="6"/><text x="8.7684%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Trailer&gt; (2 samples, 0.09%)</title><rect x="8.6996%" y="1413" width="0.0906%" height="15" fill="rgb(226,22,26)" fg:x="192" fg:w="2"/><text x="8.9496%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (2 samples, 0.09%)</title><rect x="8.6996%" y="1397" width="0.0906%" height="15" fill="rgb(217,163,10)" fg:x="192" fg:w="2"/><text x="8.9496%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (2 samples, 0.09%)</title><rect x="8.6996%" y="1381" width="0.0906%" height="15" fill="rgb(213,25,53)" fg:x="192" fg:w="2"/><text x="8.9496%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (2 samples, 0.09%)</title><rect x="8.6996%" y="1365" width="0.0906%" height="15" fill="rgb(252,105,26)" fg:x="192" fg:w="2"/><text x="8.9496%" y="1375.50"></text></g><g><title>[libc.so.6] (5 samples, 0.23%)</title><rect x="8.8355%" y="1333" width="0.2266%" height="15" fill="rgb(220,39,43)" fg:x="195" fg:w="5"/><text x="9.0855%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (3 samples, 0.14%)</title><rect x="9.0621%" y="1333" width="0.1359%" height="15" fill="rgb(229,68,48)" fg:x="200" fg:w="3"/><text x="9.3121%" y="1343.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (3 samples, 0.14%)</title><rect x="9.0621%" y="1317" width="0.1359%" height="15" fill="rgb(252,8,32)" fg:x="200" fg:w="3"/><text x="9.3121%" y="1327.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (2 samples, 0.09%)</title><rect x="9.1074%" y="1301" width="0.0906%" height="15" fill="rgb(223,20,43)" fg:x="201" fg:w="2"/><text x="9.3574%" y="1311.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.09%)</title><rect x="9.1074%" y="1285" width="0.0906%" height="15" fill="rgb(229,81,49)" fg:x="201" fg:w="2"/><text x="9.3574%" y="1295.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (2 samples, 0.09%)</title><rect x="9.1074%" y="1269" width="0.0906%" height="15" fill="rgb(236,28,36)" fg:x="201" fg:w="2"/><text x="9.3574%" y="1279.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.09%)</title><rect x="9.1074%" y="1253" width="0.0906%" height="15" fill="rgb(249,185,26)" fg:x="201" fg:w="2"/><text x="9.3574%" y="1263.50"></text></g><g><title>core::mem::replace (2 samples, 0.09%)</title><rect x="9.1074%" y="1237" width="0.0906%" height="15" fill="rgb(249,174,33)" fg:x="201" fg:w="2"/><text x="9.3574%" y="1247.50"></text></g><g><title>core::ptr::write (2 samples, 0.09%)</title><rect x="9.1074%" y="1221" width="0.0906%" height="15" fill="rgb(233,201,37)" fg:x="201" fg:w="2"/><text x="9.3574%" y="1231.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 1.00%)</title><rect x="8.8355%" y="1461" width="0.9968%" height="15" fill="rgb(221,78,26)" fg:x="195" fg:w="22"/><text x="9.0855%" y="1471.50"></text></g><g><title>std::panicking::try (22 samples, 1.00%)</title><rect x="8.8355%" y="1445" width="0.9968%" height="15" fill="rgb(250,127,30)" fg:x="195" fg:w="22"/><text x="9.0855%" y="1455.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 1.00%)</title><rect x="8.8355%" y="1429" width="0.9968%" height="15" fill="rgb(230,49,44)" fg:x="195" fg:w="22"/><text x="9.0855%" y="1439.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (22 samples, 1.00%)</title><rect x="8.8355%" y="1413" width="0.9968%" height="15" fill="rgb(229,67,23)" fg:x="195" fg:w="22"/><text x="9.0855%" y="1423.50"></text></g><g><title>core::ops::function::FnOnce::call_once (22 samples, 1.00%)</title><rect x="8.8355%" y="1397" width="0.9968%" height="15" fill="rgb(249,83,47)" fg:x="195" fg:w="22"/><text x="9.0855%" y="1407.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow::_{{closure}} (22 samples, 1.00%)</title><rect x="8.8355%" y="1381" width="0.9968%" height="15" fill="rgb(215,43,3)" fg:x="195" fg:w="22"/><text x="9.0855%" y="1391.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (22 samples, 1.00%)</title><rect x="8.8355%" y="1365" width="0.9968%" height="15" fill="rgb(238,154,13)" fg:x="195" fg:w="22"/><text x="9.0855%" y="1375.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (22 samples, 1.00%)</title><rect x="8.8355%" y="1349" width="0.9968%" height="15" fill="rgb(219,56,2)" fg:x="195" fg:w="22"/><text x="9.0855%" y="1359.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (14 samples, 0.63%)</title><rect x="9.1980%" y="1333" width="0.6343%" height="15" fill="rgb(233,0,4)" fg:x="203" fg:w="14"/><text x="9.4480%" y="1343.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::_{{closure}} (14 samples, 0.63%)</title><rect x="9.1980%" y="1317" width="0.6343%" height="15" fill="rgb(235,30,7)" fg:x="203" fg:w="14"/><text x="9.4480%" y="1327.50"></text></g><g><title>[libc.so.6] (14 samples, 0.63%)</title><rect x="9.1980%" y="1301" width="0.6343%" height="15" fill="rgb(250,79,13)" fg:x="203" fg:w="14"/><text x="9.4480%" y="1311.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (4 samples, 0.18%)</title><rect x="9.8324%" y="1461" width="0.1812%" height="15" fill="rgb(211,146,34)" fg:x="217" fg:w="4"/><text x="10.0824%" y="1471.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (4 samples, 0.18%)</title><rect x="9.8324%" y="1445" width="0.1812%" height="15" fill="rgb(228,22,38)" fg:x="217" fg:w="4"/><text x="10.0824%" y="1455.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (28 samples, 1.27%)</title><rect x="8.7902%" y="1477" width="1.2687%" height="15" fill="rgb(235,168,5)" fg:x="194" fg:w="28"/><text x="9.0402%" y="1487.50"></text></g><g><title>tokio::runtime::task::state::State::unset_join_interested (1 samples, 0.05%)</title><rect x="10.0136%" y="1461" width="0.0453%" height="15" fill="rgb(221,155,16)" fg:x="221" fg:w="1"/><text x="10.2636%" y="1471.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (1 samples, 0.05%)</title><rect x="10.0136%" y="1445" width="0.0453%" height="15" fill="rgb(215,215,53)" fg:x="221" fg:w="1"/><text x="10.2636%" y="1455.50"></text></g><g><title>tokio::runtime::task::state::State::load (1 samples, 0.05%)</title><rect x="10.0136%" y="1429" width="0.0453%" height="15" fill="rgb(223,4,10)" fg:x="221" fg:w="1"/><text x="10.2636%" y="1439.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.05%)</title><rect x="10.0136%" y="1413" width="0.0453%" height="15" fill="rgb(234,103,6)" fg:x="221" fg:w="1"/><text x="10.2636%" y="1423.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.05%)</title><rect x="10.0136%" y="1397" width="0.0453%" height="15" fill="rgb(227,97,0)" fg:x="221" fg:w="1"/><text x="10.2636%" y="1407.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::drop_join_handle_slow (2 samples, 0.09%)</title><rect x="10.0589%" y="1477" width="0.0906%" height="15" fill="rgb(234,150,53)" fg:x="222" fg:w="2"/><text x="10.3089%" y="1487.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (150 samples, 6.80%)</title><rect x="3.3983%" y="1605" width="6.7966%" height="15" fill="rgb(228,201,54)" fg:x="75" fg:w="150"/><text x="3.6483%" y="1615.50">&lt;futures_..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (150 samples, 6.80%)</title><rect x="3.3983%" y="1589" width="6.7966%" height="15" fill="rgb(222,22,37)" fg:x="75" fg:w="150"/><text x="3.6483%" y="1599.50">&lt;futures_..</text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project_replace (71 samples, 3.22%)</title><rect x="6.9778%" y="1573" width="3.2170%" height="15" fill="rgb(237,53,32)" fg:x="154" fg:w="71"/><text x="7.2278%" y="1583.50">fut..</text></g><g><title>core::ptr::drop_in_place&lt;(pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;tokio::runtime::task::join::JoinHandle&lt;core::result::Result&lt;alloc::string::String,tarpc::client::RpcError&gt;&gt;&gt;,())&gt; (71 samples, 3.22%)</title><rect x="6.9778%" y="1557" width="3.2170%" height="15" fill="rgb(233,25,53)" fg:x="154" fg:w="71"/><text x="7.2278%" y="1567.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;tokio::runtime::task::join::JoinHandle&lt;core::result::Result&lt;alloc::string::String,tarpc::client::RpcError&gt;&gt;&gt;&gt; (71 samples, 3.22%)</title><rect x="6.9778%" y="1541" width="3.2170%" height="15" fill="rgb(210,40,34)" fg:x="154" fg:w="71"/><text x="7.2278%" y="1551.50">cor..</text></g><g><title>&lt;pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (71 samples, 3.22%)</title><rect x="6.9778%" y="1525" width="3.2170%" height="15" fill="rgb(241,220,44)" fg:x="154" fg:w="71"/><text x="7.2278%" y="1535.50">&lt;pi..</text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;core::result::Result&lt;alloc::string::String,tarpc::client::RpcError&gt;&gt;&gt; (71 samples, 3.22%)</title><rect x="6.9778%" y="1509" width="3.2170%" height="15" fill="rgb(235,28,35)" fg:x="154" fg:w="71"/><text x="7.2278%" y="1519.50">cor..</text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (71 samples, 3.22%)</title><rect x="6.9778%" y="1493" width="3.2170%" height="15" fill="rgb(210,56,17)" fg:x="154" fg:w="71"/><text x="7.2278%" y="1503.50">&lt;to..</text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (1 samples, 0.05%)</title><rect x="10.1495%" y="1477" width="0.0453%" height="15" fill="rgb(224,130,29)" fg:x="224" fg:w="1"/><text x="10.3995%" y="1487.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.05%)</title><rect x="10.1495%" y="1461" width="0.0453%" height="15" fill="rgb(235,212,8)" fg:x="224" fg:w="1"/><text x="10.3995%" y="1471.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.05%)</title><rect x="10.1495%" y="1445" width="0.0453%" height="15" fill="rgb(223,33,50)" fg:x="224" fg:w="1"/><text x="10.3995%" y="1455.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.05%)</title><rect x="10.2401%" y="1573" width="0.0453%" height="15" fill="rgb(219,149,13)" fg:x="226" fg:w="1"/><text x="10.4901%" y="1583.50"></text></g><g><title>core::mem::replace (1 samples, 0.05%)</title><rect x="10.2401%" y="1557" width="0.0453%" height="15" fill="rgb(250,156,29)" fg:x="226" fg:w="1"/><text x="10.4901%" y="1567.50"></text></g><g><title>core::ptr::read (1 samples, 0.05%)</title><rect x="10.2401%" y="1541" width="0.0453%" height="15" fill="rgb(216,193,19)" fg:x="226" fg:w="1"/><text x="10.4901%" y="1551.50"></text></g><g><title>core::mem::drop (4 samples, 0.18%)</title><rect x="10.3761%" y="1509" width="0.1812%" height="15" fill="rgb(216,135,14)" fg:x="229" fg:w="4"/><text x="10.6261%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;futures_util::stream::futures_unordered::task::Task&lt;futures_util::future::future::Map&lt;tokio::runtime::task::join::JoinHandle&lt;core::result::Result&lt;alloc::string::String,tarpc::client::RpcError&gt;&gt;,client::main::{{closure}}::{{closure}}::{{closure}}&gt;&gt;,&amp;alloc::alloc::Global&gt;&gt; (4 samples, 0.18%)</title><rect x="10.3761%" y="1493" width="0.1812%" height="15" fill="rgb(241,47,5)" fg:x="229" fg:w="4"/><text x="10.6261%" y="1503.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.18%)</title><rect x="10.3761%" y="1477" width="0.1812%" height="15" fill="rgb(233,42,35)" fg:x="229" fg:w="4"/><text x="10.6261%" y="1487.50"></text></g><g><title>&lt;&amp;A as core::alloc::Allocator&gt;::deallocate (2 samples, 0.09%)</title><rect x="10.4667%" y="1461" width="0.0906%" height="15" fill="rgb(231,13,6)" fg:x="231" fg:w="2"/><text x="10.7167%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.09%)</title><rect x="10.4667%" y="1445" width="0.0906%" height="15" fill="rgb(207,181,40)" fg:x="231" fg:w="2"/><text x="10.7167%" y="1455.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.09%)</title><rect x="10.4667%" y="1429" width="0.0906%" height="15" fill="rgb(254,173,49)" fg:x="231" fg:w="2"/><text x="10.7167%" y="1439.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (7 samples, 0.32%)</title><rect x="10.3761%" y="1525" width="0.3172%" height="15" fill="rgb(221,1,38)" fg:x="229" fg:w="7"/><text x="10.6261%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::futures_unordered::task::Task&lt;futures_util::future::future::Map&lt;tokio::runtime::task::join::JoinHandle&lt;core::result::Result&lt;alloc::string::String,tarpc::client::RpcError&gt;&gt;,client::main::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt; (3 samples, 0.14%)</title><rect x="10.5573%" y="1509" width="0.1359%" height="15" fill="rgb(206,124,46)" fg:x="233" fg:w="3"/><text x="10.8073%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;futures_util::future::future::Map&lt;tokio::runtime::task::join::JoinHandle&lt;core::result::Result&lt;alloc::string::String,tarpc::client::RpcError&gt;&gt;,client::main::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (3 samples, 0.14%)</title><rect x="10.5573%" y="1493" width="0.1359%" height="15" fill="rgb(249,21,11)" fg:x="233" fg:w="3"/><text x="10.8073%" y="1503.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.14%)</title><rect x="10.5573%" y="1477" width="0.1359%" height="15" fill="rgb(222,201,40)" fg:x="233" fg:w="3"/><text x="10.8073%" y="1487.50"></text></g><g><title>&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.68%)</title><rect x="10.1948%" y="1589" width="0.6797%" height="15" fill="rgb(235,61,29)" fg:x="225" fg:w="15"/><text x="10.4448%" y="1599.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::release_task (13 samples, 0.59%)</title><rect x="10.2855%" y="1573" width="0.5890%" height="15" fill="rgb(219,207,3)" fg:x="227" fg:w="13"/><text x="10.5355%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::task::Task&lt;futures_util::future::future::Map&lt;tokio::runtime::task::join::JoinHandle&lt;core::result::Result&lt;alloc::string::String,tarpc::client::RpcError&gt;&gt;,client::main::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (13 samples, 0.59%)</title><rect x="10.2855%" y="1557" width="0.5890%" height="15" fill="rgb(222,56,46)" fg:x="227" fg:w="13"/><text x="10.5355%" y="1567.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.59%)</title><rect x="10.2855%" y="1541" width="0.5890%" height="15" fill="rgb(239,76,54)" fg:x="227" fg:w="13"/><text x="10.5355%" y="1551.50"></text></g><g><title>cfree (4 samples, 0.18%)</title><rect x="10.6932%" y="1525" width="0.1812%" height="15" fill="rgb(231,124,27)" fg:x="236" fg:w="4"/><text x="10.9432%" y="1535.50"></text></g><g><title>[libc.so.6] (3 samples, 0.14%)</title><rect x="10.7386%" y="1509" width="0.1359%" height="15" fill="rgb(249,195,6)" fg:x="237" fg:w="3"/><text x="10.9886%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;futures_util::future::future::Map&lt;tokio::runtime::task::join::JoinHandle&lt;core::result::Result&lt;alloc::string::String,tarpc::client::RpcError&gt;&gt;,client::main::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt; (16 samples, 0.72%)</title><rect x="10.1948%" y="1605" width="0.7250%" height="15" fill="rgb(237,174,47)" fg:x="225" fg:w="16"/><text x="10.4448%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::task::Task&lt;futures_util::future::future::Map&lt;tokio::runtime::task::join::JoinHandle&lt;core::result::Result&lt;alloc::string::String,tarpc::client::RpcError&gt;&gt;,client::main::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="10.8745%" y="1589" width="0.0453%" height="15" fill="rgb(206,201,31)" fg:x="240" fg:w="1"/><text x="11.1245%" y="1599.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (11 samples, 0.50%)</title><rect x="10.9198%" y="1605" width="0.4984%" height="15" fill="rgb(231,57,52)" fg:x="241" fg:w="11"/><text x="11.1698%" y="1615.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="11.3729%" y="1589" width="0.0453%" height="15" fill="rgb(248,177,22)" fg:x="251" fg:w="1"/><text x="11.6229%" y="1599.50"></text></g><g><title>tokio::runtime::park::clone (1 samples, 0.05%)</title><rect x="11.3729%" y="1573" width="0.0453%" height="15" fill="rgb(215,211,37)" fg:x="251" fg:w="1"/><text x="11.6229%" y="1583.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::increment_strong_count (1 samples, 0.05%)</title><rect x="11.3729%" y="1557" width="0.0453%" height="15" fill="rgb(241,128,51)" fg:x="251" fg:w="1"/><text x="11.6229%" y="1567.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::increment_strong_count_in (1 samples, 0.05%)</title><rect x="11.3729%" y="1541" width="0.0453%" height="15" fill="rgb(227,165,31)" fg:x="251" fg:w="1"/><text x="11.6229%" y="1551.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="11.3729%" y="1525" width="0.0453%" height="15" fill="rgb(228,167,24)" fg:x="251" fg:w="1"/><text x="11.6229%" y="1535.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="11.3729%" y="1509" width="0.0453%" height="15" fill="rgb(228,143,12)" fg:x="251" fg:w="1"/><text x="11.6229%" y="1519.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::len (4 samples, 0.18%)</title><rect x="11.4182%" y="1605" width="0.1812%" height="15" fill="rgb(249,149,8)" fg:x="252" fg:w="4"/><text x="11.6682%" y="1615.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::atomic_load_head_and_len_all (4 samples, 0.18%)</title><rect x="11.4182%" y="1589" width="0.1812%" height="15" fill="rgb(243,35,44)" fg:x="252" fg:w="4"/><text x="11.6682%" y="1599.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::pending_next_all (4 samples, 0.18%)</title><rect x="11.4182%" y="1573" width="0.1812%" height="15" fill="rgb(246,89,9)" fg:x="252" fg:w="4"/><text x="11.6682%" y="1583.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::as_ptr (4 samples, 0.18%)</title><rect x="11.4182%" y="1557" width="0.1812%" height="15" fill="rgb(233,213,13)" fg:x="252" fg:w="4"/><text x="11.6682%" y="1567.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::unlink (2 samples, 0.09%)</title><rect x="11.5995%" y="1605" width="0.0906%" height="15" fill="rgb(233,141,41)" fg:x="256" fg:w="2"/><text x="11.8495%" y="1615.50"></text></g><g><title>&lt;futures_util::stream::stream::collect::Collect&lt;St,C&gt; as core::future::future::Future&gt;::poll (199 samples, 9.02%)</title><rect x="3.1264%" y="1637" width="9.0168%" height="15" fill="rgb(239,167,4)" fg:x="69" fg:w="199"/><text x="3.3764%" y="1647.50">&lt;futures_util..</text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (199 samples, 9.02%)</title><rect x="3.1264%" y="1621" width="9.0168%" height="15" fill="rgb(209,217,16)" fg:x="69" fg:w="199"/><text x="3.3764%" y="1631.50">&lt;futures_util..</text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::dequeue (10 samples, 0.45%)</title><rect x="11.6901%" y="1605" width="0.4531%" height="15" fill="rgb(219,88,35)" fg:x="258" fg:w="10"/><text x="11.9401%" y="1615.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::stub (9 samples, 0.41%)</title><rect x="11.7354%" y="1589" width="0.4078%" height="15" fill="rgb(220,193,23)" fg:x="259" fg:w="9"/><text x="11.9854%" y="1599.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::as_ptr (9 samples, 0.41%)</title><rect x="11.7354%" y="1573" width="0.4078%" height="15" fill="rgb(230,90,52)" fg:x="259" fg:w="9"/><text x="11.9854%" y="1583.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::downgrade (2 samples, 0.09%)</title><rect x="12.2338%" y="1525" width="0.0906%" height="15" fill="rgb(252,106,19)" fg:x="270" fg:w="2"/><text x="12.4838%" y="1535.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="12.5057%" y="1397" width="0.0453%" height="15" fill="rgb(206,74,20)" fg:x="276" fg:w="1"/><text x="12.7557%" y="1407.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (6 samples, 0.27%)</title><rect x="12.3244%" y="1525" width="0.2719%" height="15" fill="rgb(230,138,44)" fg:x="272" fg:w="6"/><text x="12.5744%" y="1535.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.27%)</title><rect x="12.3244%" y="1509" width="0.2719%" height="15" fill="rgb(235,182,43)" fg:x="272" fg:w="6"/><text x="12.5744%" y="1519.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.18%)</title><rect x="12.4150%" y="1493" width="0.1812%" height="15" fill="rgb(242,16,51)" fg:x="274" fg:w="4"/><text x="12.6650%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.18%)</title><rect x="12.4150%" y="1477" width="0.1812%" height="15" fill="rgb(248,9,4)" fg:x="274" fg:w="4"/><text x="12.6650%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.18%)</title><rect x="12.4150%" y="1461" width="0.1812%" height="15" fill="rgb(210,31,22)" fg:x="274" fg:w="4"/><text x="12.6650%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.18%)</title><rect x="12.4150%" y="1445" width="0.1812%" height="15" fill="rgb(239,54,39)" fg:x="274" fg:w="4"/><text x="12.6650%" y="1455.50"></text></g><g><title>malloc (4 samples, 0.18%)</title><rect x="12.4150%" y="1429" width="0.1812%" height="15" fill="rgb(230,99,41)" fg:x="274" fg:w="4"/><text x="12.6650%" y="1439.50"></text></g><g><title>[libc.so.6] (4 samples, 0.18%)</title><rect x="12.4150%" y="1413" width="0.1812%" height="15" fill="rgb(253,106,12)" fg:x="274" fg:w="4"/><text x="12.6650%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.5510%" y="1397" width="0.0453%" height="15" fill="rgb(213,46,41)" fg:x="277" fg:w="1"/><text x="12.8010%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.5510%" y="1381" width="0.0453%" height="15" fill="rgb(215,133,35)" fg:x="277" fg:w="1"/><text x="12.8010%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.5510%" y="1365" width="0.0453%" height="15" fill="rgb(213,28,5)" fg:x="277" fg:w="1"/><text x="12.8010%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.5510%" y="1349" width="0.0453%" height="15" fill="rgb(215,77,49)" fg:x="277" fg:w="1"/><text x="12.8010%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.5510%" y="1333" width="0.0453%" height="15" fill="rgb(248,100,22)" fg:x="277" fg:w="1"/><text x="12.8010%" y="1343.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as core::iter::traits::collect::FromIterator&lt;Fut&gt;&gt;::from_iter::_{{closure}} (11 samples, 0.50%)</title><rect x="12.1432%" y="1557" width="0.4984%" height="15" fill="rgb(208,67,9)" fg:x="268" fg:w="11"/><text x="12.3932%" y="1567.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (9 samples, 0.41%)</title><rect x="12.2338%" y="1541" width="0.4078%" height="15" fill="rgb(219,133,21)" fg:x="270" fg:w="9"/><text x="12.4838%" y="1551.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::link (1 samples, 0.05%)</title><rect x="12.5963%" y="1525" width="0.0453%" height="15" fill="rgb(246,46,29)" fg:x="278" fg:w="1"/><text x="12.8463%" y="1535.50"></text></g><g><title>futures_util::stream::futures_unordered::task::Task&lt;Fut&gt;::spin_next_all (1 samples, 0.05%)</title><rect x="12.5963%" y="1509" width="0.0453%" height="15" fill="rgb(246,185,52)" fg:x="278" fg:w="1"/><text x="12.8463%" y="1519.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.5963%" y="1493" width="0.0453%" height="15" fill="rgb(252,136,11)" fg:x="278" fg:w="1"/><text x="12.8463%" y="1503.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.5963%" y="1477" width="0.0453%" height="15" fill="rgb(219,138,53)" fg:x="278" fg:w="1"/><text x="12.8463%" y="1487.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.5963%" y="1461" width="0.0453%" height="15" fill="rgb(211,51,23)" fg:x="278" fg:w="1"/><text x="12.8463%" y="1471.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.5963%" y="1445" width="0.0453%" height="15" fill="rgb(247,221,28)" fg:x="278" fg:w="1"/><text x="12.8463%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.5963%" y="1429" width="0.0453%" height="15" fill="rgb(251,222,45)" fg:x="278" fg:w="1"/><text x="12.8463%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.5963%" y="1413" width="0.0453%" height="15" fill="rgb(217,162,53)" fg:x="278" fg:w="1"/><text x="12.8463%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.5963%" y="1397" width="0.0453%" height="15" fill="rgb(229,93,14)" fg:x="278" fg:w="1"/><text x="12.8463%" y="1407.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="12.6416%" y="1541" width="0.0453%" height="15" fill="rgb(209,67,49)" fg:x="279" fg:w="1"/><text x="12.8916%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="12.6416%" y="1525" width="0.0453%" height="15" fill="rgb(213,87,29)" fg:x="279" fg:w="1"/><text x="12.8916%" y="1535.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.05%)</title><rect x="12.6416%" y="1509" width="0.0453%" height="15" fill="rgb(205,151,52)" fg:x="279" fg:w="1"/><text x="12.8916%" y="1519.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.05%)</title><rect x="12.6416%" y="1493" width="0.0453%" height="15" fill="rgb(253,215,39)" fg:x="279" fg:w="1"/><text x="12.8916%" y="1503.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.05%)</title><rect x="12.6416%" y="1477" width="0.0453%" height="15" fill="rgb(221,220,41)" fg:x="279" fg:w="1"/><text x="12.8916%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="12.6416%" y="1461" width="0.0453%" height="15" fill="rgb(218,133,21)" fg:x="279" fg:w="1"/><text x="12.8916%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="12.6416%" y="1445" width="0.0453%" height="15" fill="rgb(221,193,43)" fg:x="279" fg:w="1"/><text x="12.8916%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="12.6416%" y="1429" width="0.0453%" height="15" fill="rgb(240,128,52)" fg:x="279" fg:w="1"/><text x="12.8916%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="12.6416%" y="1413" width="0.0453%" height="15" fill="rgb(253,114,12)" fg:x="279" fg:w="1"/><text x="12.8916%" y="1423.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="12.6416%" y="1397" width="0.0453%" height="15" fill="rgb(215,223,47)" fg:x="279" fg:w="1"/><text x="12.8916%" y="1407.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="12.6416%" y="1381" width="0.0453%" height="15" fill="rgb(248,225,23)" fg:x="279" fg:w="1"/><text x="12.8916%" y="1391.50"></text></g><g><title>malloc (1 samples, 0.05%)</title><rect x="12.6416%" y="1365" width="0.0453%" height="15" fill="rgb(250,108,0)" fg:x="279" fg:w="1"/><text x="12.8916%" y="1375.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="12.6416%" y="1349" width="0.0453%" height="15" fill="rgb(228,208,7)" fg:x="279" fg:w="1"/><text x="12.8916%" y="1359.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="12.7322%" y="1509" width="0.0453%" height="15" fill="rgb(244,45,10)" fg:x="281" fg:w="1"/><text x="12.9822%" y="1519.50"></text></g><g><title>tokio::runtime::context::current::with_current (1 samples, 0.05%)</title><rect x="12.7775%" y="1509" width="0.0453%" height="15" fill="rgb(207,125,25)" fg:x="282" fg:w="1"/><text x="13.0275%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (16 samples, 0.72%)</title><rect x="12.1432%" y="1637" width="0.7250%" height="15" fill="rgb(210,195,18)" fg:x="268" fg:w="16"/><text x="12.3932%" y="1647.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as core::iter::traits::collect::FromIterator&lt;Fut&gt;&gt;::from_iter (16 samples, 0.72%)</title><rect x="12.1432%" y="1621" width="0.7250%" height="15" fill="rgb(249,80,12)" fg:x="268" fg:w="16"/><text x="12.3932%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.72%)</title><rect x="12.1432%" y="1605" width="0.7250%" height="15" fill="rgb(221,65,9)" fg:x="268" fg:w="16"/><text x="12.3932%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 0.72%)</title><rect x="12.1432%" y="1589" width="0.7250%" height="15" fill="rgb(235,49,36)" fg:x="268" fg:w="16"/><text x="12.3932%" y="1599.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (16 samples, 0.72%)</title><rect x="12.1432%" y="1573" width="0.7250%" height="15" fill="rgb(225,32,20)" fg:x="268" fg:w="16"/><text x="12.3932%" y="1583.50"></text></g><g><title>client::main::_{{closure}}::_{{closure}} (5 samples, 0.23%)</title><rect x="12.6416%" y="1557" width="0.2266%" height="15" fill="rgb(215,141,46)" fg:x="279" fg:w="5"/><text x="12.8916%" y="1567.50"></text></g><g><title>tokio::task::spawn::spawn (4 samples, 0.18%)</title><rect x="12.6869%" y="1541" width="0.1812%" height="15" fill="rgb(250,160,47)" fg:x="280" fg:w="4"/><text x="12.9369%" y="1551.50"></text></g><g><title>tokio::task::spawn::spawn_inner (4 samples, 0.18%)</title><rect x="12.6869%" y="1525" width="0.1812%" height="15" fill="rgb(216,222,40)" fg:x="280" fg:w="4"/><text x="12.9369%" y="1535.50"></text></g><g><title>tokio::runtime::task::id::Id::next (1 samples, 0.05%)</title><rect x="12.8228%" y="1509" width="0.0453%" height="15" fill="rgb(234,217,39)" fg:x="283" fg:w="1"/><text x="13.0728%" y="1519.50"></text></g><g><title>&lt;tokio::net::addr::sealed::MaybeReady as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="12.8681%" y="1573" width="0.0453%" height="15" fill="rgb(207,178,40)" fg:x="284" fg:w="1"/><text x="13.1181%" y="1583.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.05%)</title><rect x="12.8681%" y="1557" width="0.0453%" height="15" fill="rgb(221,136,13)" fg:x="284" fg:w="1"/><text x="13.1181%" y="1567.50"></text></g><g><title>mio::sys::unix::tcp::connect (1 samples, 0.05%)</title><rect x="12.9135%" y="1541" width="0.0453%" height="15" fill="rgb(249,199,10)" fg:x="285" fg:w="1"/><text x="13.1635%" y="1551.50"></text></g><g><title>connect (1 samples, 0.05%)</title><rect x="12.9135%" y="1525" width="0.0453%" height="15" fill="rgb(249,222,13)" fg:x="285" fg:w="1"/><text x="13.1635%" y="1535.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.9135%" y="1509" width="0.0453%" height="15" fill="rgb(244,185,38)" fg:x="285" fg:w="1"/><text x="13.1635%" y="1519.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.9135%" y="1493" width="0.0453%" height="15" fill="rgb(236,202,9)" fg:x="285" fg:w="1"/><text x="13.1635%" y="1503.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.9135%" y="1477" width="0.0453%" height="15" fill="rgb(250,229,37)" fg:x="285" fg:w="1"/><text x="13.1635%" y="1487.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.9135%" y="1461" width="0.0453%" height="15" fill="rgb(206,174,23)" fg:x="285" fg:w="1"/><text x="13.1635%" y="1471.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.9135%" y="1445" width="0.0453%" height="15" fill="rgb(211,33,43)" fg:x="285" fg:w="1"/><text x="13.1635%" y="1455.50"></text></g><g><title>mio::net::tcp::stream::TcpStream::connect (3 samples, 0.14%)</title><rect x="12.9135%" y="1557" width="0.1359%" height="15" fill="rgb(245,58,50)" fg:x="285" fg:w="3"/><text x="13.1635%" y="1567.50"></text></g><g><title>mio::sys::unix::tcp::new_for_addr (2 samples, 0.09%)</title><rect x="12.9588%" y="1541" width="0.0906%" height="15" fill="rgb(244,68,36)" fg:x="286" fg:w="2"/><text x="13.2088%" y="1551.50"></text></g><g><title>mio::sys::unix::net::new_socket (2 samples, 0.09%)</title><rect x="12.9588%" y="1525" width="0.0906%" height="15" fill="rgb(232,229,15)" fg:x="286" fg:w="2"/><text x="13.2088%" y="1535.50"></text></g><g><title>__socket (2 samples, 0.09%)</title><rect x="12.9588%" y="1509" width="0.0906%" height="15" fill="rgb(254,30,23)" fg:x="286" fg:w="2"/><text x="13.2088%" y="1519.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0041%" y="1493" width="0.0453%" height="15" fill="rgb(235,160,14)" fg:x="287" fg:w="1"/><text x="13.2541%" y="1503.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0041%" y="1477" width="0.0453%" height="15" fill="rgb(212,155,44)" fg:x="287" fg:w="1"/><text x="13.2541%" y="1487.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0041%" y="1461" width="0.0453%" height="15" fill="rgb(226,2,50)" fg:x="287" fg:w="1"/><text x="13.2541%" y="1471.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0041%" y="1445" width="0.0453%" height="15" fill="rgb(234,177,6)" fg:x="287" fg:w="1"/><text x="13.2541%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0041%" y="1429" width="0.0453%" height="15" fill="rgb(217,24,9)" fg:x="287" fg:w="1"/><text x="13.2541%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0041%" y="1413" width="0.0453%" height="15" fill="rgb(220,13,46)" fg:x="287" fg:w="1"/><text x="13.2541%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0041%" y="1397" width="0.0453%" height="15" fill="rgb(239,221,27)" fg:x="287" fg:w="1"/><text x="13.2541%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0041%" y="1381" width="0.0453%" height="15" fill="rgb(222,198,25)" fg:x="287" fg:w="1"/><text x="13.2541%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0041%" y="1365" width="0.0453%" height="15" fill="rgb(211,99,13)" fg:x="287" fg:w="1"/><text x="13.2541%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0041%" y="1349" width="0.0453%" height="15" fill="rgb(232,111,31)" fg:x="287" fg:w="1"/><text x="13.2541%" y="1359.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::connect::_{{closure}} (5 samples, 0.23%)</title><rect x="12.8681%" y="1589" width="0.2266%" height="15" fill="rgb(245,82,37)" fg:x="284" fg:w="5"/><text x="13.1181%" y="1599.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::connect_addr::_{{closure}} (4 samples, 0.18%)</title><rect x="12.9135%" y="1573" width="0.1812%" height="15" fill="rgb(227,149,46)" fg:x="285" fg:w="4"/><text x="13.1635%" y="1583.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::connect_mio::_{{closure}} (1 samples, 0.05%)</title><rect x="13.0494%" y="1557" width="0.0453%" height="15" fill="rgb(218,36,50)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1567.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::new (1 samples, 0.05%)</title><rect x="13.0494%" y="1541" width="0.0453%" height="15" fill="rgb(226,80,48)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1551.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new (1 samples, 0.05%)</title><rect x="13.0494%" y="1525" width="0.0453%" height="15" fill="rgb(238,224,15)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1535.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_interest (1 samples, 0.05%)</title><rect x="13.0494%" y="1509" width="0.0453%" height="15" fill="rgb(241,136,10)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1519.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_interest_and_handle (1 samples, 0.05%)</title><rect x="13.0494%" y="1493" width="0.0453%" height="15" fill="rgb(208,32,45)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1503.50"></text></g><g><title>tokio::runtime::io::registration::Registration::new_with_interest_and_handle (1 samples, 0.05%)</title><rect x="13.0494%" y="1477" width="0.0453%" height="15" fill="rgb(207,135,9)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1487.50"></text></g><g><title>tokio::runtime::io::driver::Handle::add_source (1 samples, 0.05%)</title><rect x="13.0494%" y="1461" width="0.0453%" height="15" fill="rgb(206,86,44)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1471.50"></text></g><g><title>tokio::runtime::io::registration_set::RegistrationSet::allocate (1 samples, 0.05%)</title><rect x="13.0494%" y="1445" width="0.0453%" height="15" fill="rgb(245,177,15)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1455.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.05%)</title><rect x="13.0494%" y="1429" width="0.0453%" height="15" fill="rgb(206,64,50)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1439.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.05%)</title><rect x="13.0494%" y="1413" width="0.0453%" height="15" fill="rgb(234,36,40)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1423.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.05%)</title><rect x="13.0494%" y="1397" width="0.0453%" height="15" fill="rgb(213,64,8)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="13.0494%" y="1381" width="0.0453%" height="15" fill="rgb(210,75,36)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="13.0494%" y="1365" width="0.0453%" height="15" fill="rgb(229,88,21)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="13.0494%" y="1349" width="0.0453%" height="15" fill="rgb(252,204,47)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1359.50"></text></g><g><title>__rdl_alloc (1 samples, 0.05%)</title><rect x="13.0494%" y="1333" width="0.0453%" height="15" fill="rgb(208,77,27)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1343.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.05%)</title><rect x="13.0494%" y="1317" width="0.0453%" height="15" fill="rgb(221,76,26)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1327.50"></text></g><g><title>std::sys::pal::unix::alloc::aligned_malloc (1 samples, 0.05%)</title><rect x="13.0494%" y="1301" width="0.0453%" height="15" fill="rgb(225,139,18)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1311.50"></text></g><g><title>posix_memalign (1 samples, 0.05%)</title><rect x="13.0494%" y="1285" width="0.0453%" height="15" fill="rgb(230,137,11)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1295.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="13.0494%" y="1269" width="0.0453%" height="15" fill="rgb(212,28,1)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1279.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="13.0494%" y="1253" width="0.0453%" height="15" fill="rgb(248,164,17)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1263.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="13.0494%" y="1237" width="0.0453%" height="15" fill="rgb(222,171,42)" fg:x="288" fg:w="1"/><text x="13.2994%" y="1247.50"></text></g><g><title>tokio::runtime::coop::budget (221 samples, 10.01%)</title><rect x="3.1264%" y="1701" width="10.0136%" height="15" fill="rgb(243,84,45)" fg:x="69" fg:w="221"/><text x="3.3764%" y="1711.50">tokio::runtime..</text></g><g><title>tokio::runtime::coop::with_budget (221 samples, 10.01%)</title><rect x="3.1264%" y="1685" width="10.0136%" height="15" fill="rgb(252,49,23)" fg:x="69" fg:w="221"/><text x="3.3764%" y="1695.50">tokio::runtime..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (221 samples, 10.01%)</title><rect x="3.1264%" y="1669" width="10.0136%" height="15" fill="rgb(215,19,7)" fg:x="69" fg:w="221"/><text x="3.3764%" y="1679.50">tokio::runtime..</text></g><g><title>client::main::_{{closure}} (221 samples, 10.01%)</title><rect x="3.1264%" y="1653" width="10.0136%" height="15" fill="rgb(238,81,41)" fg:x="69" fg:w="221"/><text x="3.3764%" y="1663.50">client::main::..</text></g><g><title>tokio_tungstenite::connect::connect_async::_{{closure}} (6 samples, 0.27%)</title><rect x="12.8681%" y="1637" width="0.2719%" height="15" fill="rgb(210,199,37)" fg:x="284" fg:w="6"/><text x="13.1181%" y="1647.50"></text></g><g><title>tokio_tungstenite::connect::connect_async_with_config::_{{closure}} (6 samples, 0.27%)</title><rect x="12.8681%" y="1621" width="0.2719%" height="15" fill="rgb(244,192,49)" fg:x="284" fg:w="6"/><text x="13.1181%" y="1631.50"></text></g><g><title>tokio_tungstenite::connect::connect::_{{closure}} (6 samples, 0.27%)</title><rect x="12.8681%" y="1605" width="0.2719%" height="15" fill="rgb(226,211,11)" fg:x="284" fg:w="6"/><text x="13.1181%" y="1615.50"></text></g><g><title>tokio_tungstenite::tls::client_async_tls_with_config::_{{closure}} (1 samples, 0.05%)</title><rect x="13.0947%" y="1589" width="0.0453%" height="15" fill="rgb(236,162,54)" fg:x="289" fg:w="1"/><text x="13.3447%" y="1599.50"></text></g><g><title>tokio_tungstenite::client_async_with_config::_{{closure}} (1 samples, 0.05%)</title><rect x="13.0947%" y="1573" width="0.0453%" height="15" fill="rgb(220,229,9)" fg:x="289" fg:w="1"/><text x="13.3447%" y="1583.50"></text></g><g><title>tokio_tungstenite::handshake::client_handshake::_{{closure}} (1 samples, 0.05%)</title><rect x="13.0947%" y="1557" width="0.0453%" height="15" fill="rgb(250,87,22)" fg:x="289" fg:w="1"/><text x="13.3447%" y="1567.50"></text></g><g><title>tokio_tungstenite::handshake::handshake::_{{closure}} (1 samples, 0.05%)</title><rect x="13.0947%" y="1541" width="0.0453%" height="15" fill="rgb(239,43,17)" fg:x="289" fg:w="1"/><text x="13.3447%" y="1551.50"></text></g><g><title>&lt;tokio_tungstenite::handshake::StartedHandshakeFuture&lt;F,S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="13.0947%" y="1525" width="0.0453%" height="15" fill="rgb(231,177,25)" fg:x="289" fg:w="1"/><text x="13.3447%" y="1535.50"></text></g><g><title>tokio_tungstenite::compat::AllowStd&lt;S&gt;::new (1 samples, 0.05%)</title><rect x="13.0947%" y="1509" width="0.0453%" height="15" fill="rgb(219,179,1)" fg:x="289" fg:w="1"/><text x="13.3447%" y="1519.50"></text></g><g><title>client::main (258 samples, 11.69%)</title><rect x="3.1264%" y="1813" width="11.6901%" height="15" fill="rgb(238,219,53)" fg:x="69" fg:w="258"/><text x="3.3764%" y="1823.50">client::main</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (258 samples, 11.69%)</title><rect x="3.1264%" y="1797" width="11.6901%" height="15" fill="rgb(232,167,36)" fg:x="69" fg:w="258"/><text x="3.3764%" y="1807.50">tokio::runtime::r..</text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (258 samples, 11.69%)</title><rect x="3.1264%" y="1781" width="11.6901%" height="15" fill="rgb(244,19,51)" fg:x="69" fg:w="258"/><text x="3.3764%" y="1791.50">tokio::runtime::s..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (258 samples, 11.69%)</title><rect x="3.1264%" y="1765" width="11.6901%" height="15" fill="rgb(224,6,22)" fg:x="69" fg:w="258"/><text x="3.3764%" y="1775.50">tokio::runtime::c..</text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}} (258 samples, 11.69%)</title><rect x="3.1264%" y="1749" width="11.6901%" height="15" fill="rgb(224,145,5)" fg:x="69" fg:w="258"/><text x="3.3764%" y="1759.50">tokio::runtime::s..</text></g><g><title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on (258 samples, 11.69%)</title><rect x="3.1264%" y="1733" width="11.6901%" height="15" fill="rgb(234,130,49)" fg:x="69" fg:w="258"/><text x="3.3764%" y="1743.50">tokio::runtime::c..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (258 samples, 11.69%)</title><rect x="3.1264%" y="1717" width="11.6901%" height="15" fill="rgb(254,6,2)" fg:x="69" fg:w="258"/><text x="3.3764%" y="1727.50">tokio::runtime::p..</text></g><g><title>tokio::runtime::park::Inner::park (37 samples, 1.68%)</title><rect x="13.1400%" y="1701" width="1.6765%" height="15" fill="rgb(208,96,46)" fg:x="290" fg:w="37"/><text x="13.3900%" y="1711.50"></text></g><g><title>std::sync::condvar::Condvar::wait (35 samples, 1.59%)</title><rect x="13.2306%" y="1685" width="1.5859%" height="15" fill="rgb(239,3,39)" fg:x="292" fg:w="35"/><text x="13.4806%" y="1695.50"></text></g><g><title>std::sys::pal::unix::locks::futex_condvar::Condvar::wait (35 samples, 1.59%)</title><rect x="13.2306%" y="1669" width="1.5859%" height="15" fill="rgb(233,210,1)" fg:x="292" fg:w="35"/><text x="13.4806%" y="1679.50"></text></g><g><title>std::sys::pal::unix::locks::futex_condvar::Condvar::wait_optional_timeout (35 samples, 1.59%)</title><rect x="13.2306%" y="1653" width="1.5859%" height="15" fill="rgb(244,137,37)" fg:x="292" fg:w="35"/><text x="13.4806%" y="1663.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (35 samples, 1.59%)</title><rect x="13.2306%" y="1637" width="1.5859%" height="15" fill="rgb(240,136,2)" fg:x="292" fg:w="35"/><text x="13.4806%" y="1647.50"></text></g><g><title>syscall (35 samples, 1.59%)</title><rect x="13.2306%" y="1621" width="1.5859%" height="15" fill="rgb(239,18,37)" fg:x="292" fg:w="35"/><text x="13.4806%" y="1631.50"></text></g><g><title>[unknown] (34 samples, 1.54%)</title><rect x="13.2759%" y="1605" width="1.5406%" height="15" fill="rgb(218,185,22)" fg:x="293" fg:w="34"/><text x="13.5259%" y="1615.50"></text></g><g><title>[unknown] (32 samples, 1.45%)</title><rect x="13.3666%" y="1589" width="1.4499%" height="15" fill="rgb(225,218,4)" fg:x="295" fg:w="32"/><text x="13.6166%" y="1599.50"></text></g><g><title>[unknown] (28 samples, 1.27%)</title><rect x="13.5478%" y="1573" width="1.2687%" height="15" fill="rgb(230,182,32)" fg:x="299" fg:w="28"/><text x="13.7978%" y="1583.50"></text></g><g><title>[unknown] (27 samples, 1.22%)</title><rect x="13.5931%" y="1557" width="1.2234%" height="15" fill="rgb(242,56,43)" fg:x="300" fg:w="27"/><text x="13.8431%" y="1567.50"></text></g><g><title>[unknown] (26 samples, 1.18%)</title><rect x="13.6384%" y="1541" width="1.1781%" height="15" fill="rgb(233,99,24)" fg:x="301" fg:w="26"/><text x="13.8884%" y="1551.50"></text></g><g><title>[unknown] (24 samples, 1.09%)</title><rect x="13.7290%" y="1525" width="1.0874%" height="15" fill="rgb(234,209,42)" fg:x="303" fg:w="24"/><text x="13.9790%" y="1535.50"></text></g><g><title>[unknown] (21 samples, 0.95%)</title><rect x="13.8650%" y="1509" width="0.9515%" height="15" fill="rgb(227,7,12)" fg:x="306" fg:w="21"/><text x="14.1150%" y="1519.50"></text></g><g><title>[unknown] (16 samples, 0.72%)</title><rect x="14.0915%" y="1493" width="0.7250%" height="15" fill="rgb(245,203,43)" fg:x="311" fg:w="16"/><text x="14.3415%" y="1503.50"></text></g><g><title>[unknown] (10 samples, 0.45%)</title><rect x="14.3634%" y="1477" width="0.4531%" height="15" fill="rgb(238,205,33)" fg:x="317" fg:w="10"/><text x="14.6134%" y="1487.50"></text></g><g><title>[unknown] (5 samples, 0.23%)</title><rect x="14.5899%" y="1461" width="0.2266%" height="15" fill="rgb(231,56,7)" fg:x="322" fg:w="5"/><text x="14.8399%" y="1471.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="14.7259%" y="1445" width="0.0906%" height="15" fill="rgb(244,186,29)" fg:x="325" fg:w="2"/><text x="14.9759%" y="1455.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="14.8165%" y="1589" width="0.0906%" height="15" fill="rgb(234,111,31)" fg:x="327" fg:w="2"/><text x="15.0665%" y="1599.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="14.9071%" y="1573" width="0.0906%" height="15" fill="rgb(241,149,10)" fg:x="329" fg:w="2"/><text x="15.1571%" y="1583.50"></text></g><g><title>[libc.so.6] (3 samples, 0.14%)</title><rect x="14.9977%" y="1557" width="0.1359%" height="15" fill="rgb(249,206,44)" fg:x="331" fg:w="3"/><text x="15.2477%" y="1567.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (1 samples, 0.05%)</title><rect x="15.1337%" y="1557" width="0.0453%" height="15" fill="rgb(251,153,30)" fg:x="334" fg:w="1"/><text x="15.3837%" y="1567.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (1 samples, 0.05%)</title><rect x="15.1337%" y="1541" width="0.0453%" height="15" fill="rgb(239,152,38)" fg:x="334" fg:w="1"/><text x="15.3837%" y="1551.50"></text></g><g><title>core::cell::BorrowRef::new (1 samples, 0.05%)</title><rect x="15.1337%" y="1525" width="0.0453%" height="15" fill="rgb(249,139,47)" fg:x="334" fg:w="1"/><text x="15.3837%" y="1535.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.05%)</title><rect x="15.1337%" y="1509" width="0.0453%" height="15" fill="rgb(244,64,35)" fg:x="334" fg:w="1"/><text x="15.3837%" y="1519.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="15.1790%" y="1541" width="0.0453%" height="15" fill="rgb(216,46,15)" fg:x="335" fg:w="1"/><text x="15.4290%" y="1551.50"></text></g><g><title>[libc.so.6] (4 samples, 0.18%)</title><rect x="15.2696%" y="1477" width="0.1812%" height="15" fill="rgb(250,74,19)" fg:x="337" fg:w="4"/><text x="15.5196%" y="1487.50"></text></g><g><title>syscall (1 samples, 0.05%)</title><rect x="15.4508%" y="1333" width="0.0453%" height="15" fill="rgb(249,42,33)" fg:x="341" fg:w="1"/><text x="15.7008%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="15.4508%" y="1317" width="0.0453%" height="15" fill="rgb(242,149,17)" fg:x="341" fg:w="1"/><text x="15.7008%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="15.4508%" y="1301" width="0.0453%" height="15" fill="rgb(244,29,21)" fg:x="341" fg:w="1"/><text x="15.7008%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="15.4508%" y="1285" width="0.0453%" height="15" fill="rgb(220,130,37)" fg:x="341" fg:w="1"/><text x="15.7008%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="15.4508%" y="1269" width="0.0453%" height="15" fill="rgb(211,67,2)" fg:x="341" fg:w="1"/><text x="15.7008%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="15.4508%" y="1253" width="0.0453%" height="15" fill="rgb(235,68,52)" fg:x="341" fg:w="1"/><text x="15.7008%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="15.4508%" y="1237" width="0.0453%" height="15" fill="rgb(246,142,3)" fg:x="341" fg:w="1"/><text x="15.7008%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="15.4508%" y="1221" width="0.0453%" height="15" fill="rgb(241,25,7)" fg:x="341" fg:w="1"/><text x="15.7008%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="15.4508%" y="1205" width="0.0453%" height="15" fill="rgb(242,119,39)" fg:x="341" fg:w="1"/><text x="15.7008%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.09%)</title><rect x="15.4508%" y="1413" width="0.0906%" height="15" fill="rgb(241,98,45)" fg:x="341" fg:w="2"/><text x="15.7008%" y="1423.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (2 samples, 0.09%)</title><rect x="15.4508%" y="1397" width="0.0906%" height="15" fill="rgb(254,28,30)" fg:x="341" fg:w="2"/><text x="15.7008%" y="1407.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (2 samples, 0.09%)</title><rect x="15.4508%" y="1381" width="0.0906%" height="15" fill="rgb(241,142,54)" fg:x="341" fg:w="2"/><text x="15.7008%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (2 samples, 0.09%)</title><rect x="15.4508%" y="1365" width="0.0906%" height="15" fill="rgb(222,85,15)" fg:x="341" fg:w="2"/><text x="15.7008%" y="1375.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (2 samples, 0.09%)</title><rect x="15.4508%" y="1349" width="0.0906%" height="15" fill="rgb(210,85,47)" fg:x="341" fg:w="2"/><text x="15.7008%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::push_remote_task (1 samples, 0.05%)</title><rect x="15.4961%" y="1333" width="0.0453%" height="15" fill="rgb(224,206,25)" fg:x="342" fg:w="1"/><text x="15.7461%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (1 samples, 0.05%)</title><rect x="15.4961%" y="1317" width="0.0453%" height="15" fill="rgb(243,201,19)" fg:x="342" fg:w="1"/><text x="15.7461%" y="1327.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="15.4961%" y="1301" width="0.0453%" height="15" fill="rgb(236,59,4)" fg:x="342" fg:w="1"/><text x="15.7461%" y="1311.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::unlock (1 samples, 0.05%)</title><rect x="15.4961%" y="1285" width="0.0453%" height="15" fill="rgb(254,179,45)" fg:x="342" fg:w="1"/><text x="15.7461%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_option_task_without_yield (7 samples, 0.32%)</title><rect x="15.4508%" y="1477" width="0.3172%" height="15" fill="rgb(226,14,10)" fg:x="341" fg:w="7"/><text x="15.7008%" y="1487.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (7 samples, 0.32%)</title><rect x="15.4508%" y="1461" width="0.3172%" height="15" fill="rgb(244,27,41)" fg:x="341" fg:w="7"/><text x="15.7008%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (7 samples, 0.32%)</title><rect x="15.4508%" y="1445" width="0.3172%" height="15" fill="rgb(235,35,32)" fg:x="341" fg:w="7"/><text x="15.7008%" y="1455.50"></text></g><g><title>tokio::runtime::context::with_scheduler (7 samples, 0.32%)</title><rect x="15.4508%" y="1429" width="0.3172%" height="15" fill="rgb(218,68,31)" fg:x="341" fg:w="7"/><text x="15.7008%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_remote (5 samples, 0.23%)</title><rect x="15.5415%" y="1413" width="0.2266%" height="15" fill="rgb(207,120,37)" fg:x="343" fg:w="5"/><text x="15.7915%" y="1423.50"></text></g><g><title>syscall (5 samples, 0.23%)</title><rect x="15.5415%" y="1397" width="0.2266%" height="15" fill="rgb(227,98,0)" fg:x="343" fg:w="5"/><text x="15.7915%" y="1407.50"></text></g><g><title>[unknown] (5 samples, 0.23%)</title><rect x="15.5415%" y="1381" width="0.2266%" height="15" fill="rgb(207,7,3)" fg:x="343" fg:w="5"/><text x="15.7915%" y="1391.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="15.5868%" y="1365" width="0.1812%" height="15" fill="rgb(206,98,19)" fg:x="344" fg:w="4"/><text x="15.8368%" y="1375.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="15.5868%" y="1349" width="0.1812%" height="15" fill="rgb(217,5,26)" fg:x="344" fg:w="4"/><text x="15.8368%" y="1359.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="15.5868%" y="1333" width="0.1812%" height="15" fill="rgb(235,190,38)" fg:x="344" fg:w="4"/><text x="15.8368%" y="1343.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="15.5868%" y="1317" width="0.1812%" height="15" fill="rgb(247,86,24)" fg:x="344" fg:w="4"/><text x="15.8368%" y="1327.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="15.6321%" y="1301" width="0.1359%" height="15" fill="rgb(205,101,16)" fg:x="345" fg:w="3"/><text x="15.8821%" y="1311.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="15.6774%" y="1285" width="0.0906%" height="15" fill="rgb(246,168,33)" fg:x="346" fg:w="2"/><text x="15.9274%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="15.7227%" y="1269" width="0.0453%" height="15" fill="rgb(231,114,1)" fg:x="347" fg:w="1"/><text x="15.9727%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="15.7227%" y="1253" width="0.0453%" height="15" fill="rgb(207,184,53)" fg:x="347" fg:w="1"/><text x="15.9727%" y="1263.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (2 samples, 0.09%)</title><rect x="15.7680%" y="1461" width="0.0906%" height="15" fill="rgb(224,95,51)" fg:x="348" fg:w="2"/><text x="16.0180%" y="1471.50"></text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (2 samples, 0.09%)</title><rect x="15.7680%" y="1445" width="0.0906%" height="15" fill="rgb(212,188,45)" fg:x="348" fg:w="2"/><text x="16.0180%" y="1455.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (2 samples, 0.09%)</title><rect x="15.7680%" y="1429" width="0.0906%" height="15" fill="rgb(223,154,38)" fg:x="348" fg:w="2"/><text x="16.0180%" y="1439.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as tokio::util::linked_list::Link&gt;::pointers (1 samples, 0.05%)</title><rect x="15.8133%" y="1413" width="0.0453%" height="15" fill="rgb(251,22,52)" fg:x="349" fg:w="1"/><text x="16.0633%" y="1423.50"></text></g><g><title>tokio::runtime::task::core::Header::get_trailer (1 samples, 0.05%)</title><rect x="15.8133%" y="1397" width="0.0453%" height="15" fill="rgb(229,209,22)" fg:x="349" fg:w="1"/><text x="16.0633%" y="1407.50"></text></g><g><title>[libc.so.6] (5 samples, 0.23%)</title><rect x="15.8586%" y="1413" width="0.2266%" height="15" fill="rgb(234,138,34)" fg:x="350" fg:w="5"/><text x="16.1086%" y="1423.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="16.1758%" y="1205" width="0.1359%" height="15" fill="rgb(212,95,11)" fg:x="357" fg:w="3"/><text x="16.4258%" y="1215.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="16.2211%" y="1189" width="0.0906%" height="15" fill="rgb(240,179,47)" fg:x="358" fg:w="2"/><text x="16.4711%" y="1199.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="16.2211%" y="1173" width="0.0906%" height="15" fill="rgb(240,163,11)" fg:x="358" fg:w="2"/><text x="16.4711%" y="1183.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="16.2211%" y="1157" width="0.0906%" height="15" fill="rgb(236,37,12)" fg:x="358" fg:w="2"/><text x="16.4711%" y="1167.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="16.2211%" y="1141" width="0.0906%" height="15" fill="rgb(232,164,16)" fg:x="358" fg:w="2"/><text x="16.4711%" y="1151.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="16.2211%" y="1125" width="0.0906%" height="15" fill="rgb(244,205,15)" fg:x="358" fg:w="2"/><text x="16.4711%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="16.2664%" y="1109" width="0.0453%" height="15" fill="rgb(223,117,47)" fg:x="359" fg:w="1"/><text x="16.5164%" y="1119.50"></text></g><g><title>[libc.so.6] (7 samples, 0.32%)</title><rect x="16.1758%" y="1221" width="0.3172%" height="15" fill="rgb(244,107,35)" fg:x="357" fg:w="7"/><text x="16.4258%" y="1231.50"></text></g><g><title>__default_morecore (4 samples, 0.18%)</title><rect x="16.3117%" y="1205" width="0.1812%" height="15" fill="rgb(205,140,8)" fg:x="360" fg:w="4"/><text x="16.5617%" y="1215.50"></text></g><g><title>__sbrk (4 samples, 0.18%)</title><rect x="16.3117%" y="1189" width="0.1812%" height="15" fill="rgb(228,84,46)" fg:x="360" fg:w="4"/><text x="16.5617%" y="1199.50"></text></g><g><title>brk (4 samples, 0.18%)</title><rect x="16.3117%" y="1173" width="0.1812%" height="15" fill="rgb(254,188,9)" fg:x="360" fg:w="4"/><text x="16.5617%" y="1183.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="16.3117%" y="1157" width="0.1812%" height="15" fill="rgb(206,112,54)" fg:x="360" fg:w="4"/><text x="16.5617%" y="1167.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="16.3117%" y="1141" width="0.1812%" height="15" fill="rgb(216,84,49)" fg:x="360" fg:w="4"/><text x="16.5617%" y="1151.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="16.3117%" y="1125" width="0.1812%" height="15" fill="rgb(214,194,35)" fg:x="360" fg:w="4"/><text x="16.5617%" y="1135.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="16.3570%" y="1109" width="0.1359%" height="15" fill="rgb(249,28,3)" fg:x="361" fg:w="3"/><text x="16.6070%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="16.4477%" y="1093" width="0.0453%" height="15" fill="rgb(222,56,52)" fg:x="363" fg:w="1"/><text x="16.6977%" y="1103.50"></text></g><g><title>client (542 samples, 24.56%)</title><rect x="0.0000%" y="1829" width="24.5582%" height="15" fill="rgb(245,217,50)" fg:x="0" fg:w="542"/><text x="0.2500%" y="1839.50">client</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (215 samples, 9.74%)</title><rect x="14.8165%" y="1813" width="9.7417%" height="15" fill="rgb(213,201,24)" fg:x="327" fg:w="215"/><text x="15.0665%" y="1823.50">tokio::runtime..</text></g><g><title>tokio::runtime::coop::budget (215 samples, 9.74%)</title><rect x="14.8165%" y="1797" width="9.7417%" height="15" fill="rgb(248,116,28)" fg:x="327" fg:w="215"/><text x="15.0665%" y="1807.50">tokio::runtime..</text></g><g><title>tokio::runtime::coop::with_budget (215 samples, 9.74%)</title><rect x="14.8165%" y="1781" width="9.7417%" height="15" fill="rgb(219,72,43)" fg:x="327" fg:w="215"/><text x="15.0665%" y="1791.50">tokio::runtime..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (215 samples, 9.74%)</title><rect x="14.8165%" y="1765" width="9.7417%" height="15" fill="rgb(209,138,14)" fg:x="327" fg:w="215"/><text x="15.0665%" y="1775.50">tokio::runtime..</text></g><g><title>client::main::_{{closure}} (215 samples, 9.74%)</title><rect x="14.8165%" y="1749" width="9.7417%" height="15" fill="rgb(222,18,33)" fg:x="327" fg:w="215"/><text x="15.0665%" y="1759.50">client::main::..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (215 samples, 9.74%)</title><rect x="14.8165%" y="1733" width="9.7417%" height="15" fill="rgb(213,199,7)" fg:x="327" fg:w="215"/><text x="15.0665%" y="1743.50">core::iter::tr..</text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as core::iter::traits::collect::FromIterator&lt;Fut&gt;&gt;::from_iter (215 samples, 9.74%)</title><rect x="14.8165%" y="1717" width="9.7417%" height="15" fill="rgb(250,110,10)" fg:x="327" fg:w="215"/><text x="15.0665%" y="1727.50">&lt;futures_util:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (215 samples, 9.74%)</title><rect x="14.8165%" y="1701" width="9.7417%" height="15" fill="rgb(248,123,6)" fg:x="327" fg:w="215"/><text x="15.0665%" y="1711.50">&lt;core::iter::a..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (215 samples, 9.74%)</title><rect x="14.8165%" y="1685" width="9.7417%" height="15" fill="rgb(206,91,31)" fg:x="327" fg:w="215"/><text x="15.0665%" y="1695.50">core::iter::tr..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (215 samples, 9.74%)</title><rect x="14.8165%" y="1669" width="9.7417%" height="15" fill="rgb(211,154,13)" fg:x="327" fg:w="215"/><text x="15.0665%" y="1679.50">core::iter::ad..</text></g><g><title>client::main::_{{closure}}::_{{closure}} (215 samples, 9.74%)</title><rect x="14.8165%" y="1653" width="9.7417%" height="15" fill="rgb(225,148,7)" fg:x="327" fg:w="215"/><text x="15.0665%" y="1663.50">client::main::..</text></g><g><title>tokio::task::spawn::spawn (215 samples, 9.74%)</title><rect x="14.8165%" y="1637" width="9.7417%" height="15" fill="rgb(220,160,43)" fg:x="327" fg:w="215"/><text x="15.0665%" y="1647.50">tokio::task::s..</text></g><g><title>tokio::task::spawn::spawn_inner (215 samples, 9.74%)</title><rect x="14.8165%" y="1621" width="9.7417%" height="15" fill="rgb(213,52,39)" fg:x="327" fg:w="215"/><text x="15.0665%" y="1631.50">tokio::task::s..</text></g><g><title>tokio::runtime::context::current::with_current (215 samples, 9.74%)</title><rect x="14.8165%" y="1605" width="9.7417%" height="15" fill="rgb(243,137,7)" fg:x="327" fg:w="215"/><text x="15.0665%" y="1615.50">tokio::runtime..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (213 samples, 9.65%)</title><rect x="14.9071%" y="1589" width="9.6511%" height="15" fill="rgb(230,79,13)" fg:x="329" fg:w="213"/><text x="15.1571%" y="1599.50">std::thread::l..</text></g><g><title>tokio::runtime::context::current::with_current::_{{closure}} (211 samples, 9.56%)</title><rect x="14.9977%" y="1573" width="9.5605%" height="15" fill="rgb(247,105,23)" fg:x="331" fg:w="211"/><text x="15.2477%" y="1583.50">tokio::runtime..</text></g><g><title>core::option::Option&lt;T&gt;::map (207 samples, 9.38%)</title><rect x="15.1790%" y="1557" width="9.3792%" height="15" fill="rgb(223,179,41)" fg:x="335" fg:w="207"/><text x="15.4290%" y="1567.50">core::option:..</text></g><g><title>tokio::task::spawn::spawn_inner::_{{closure}} (206 samples, 9.33%)</title><rect x="15.2243%" y="1541" width="9.3339%" height="15" fill="rgb(218,9,34)" fg:x="336" fg:w="206"/><text x="15.4743%" y="1551.50">tokio::task::..</text></g><g><title>tokio::runtime::scheduler::Handle::spawn (206 samples, 9.33%)</title><rect x="15.2243%" y="1525" width="9.3339%" height="15" fill="rgb(222,106,8)" fg:x="336" fg:w="206"/><text x="15.4743%" y="1535.50">tokio::runtim..</text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (206 samples, 9.33%)</title><rect x="15.2243%" y="1509" width="9.3339%" height="15" fill="rgb(211,220,0)" fg:x="336" fg:w="206"/><text x="15.4743%" y="1519.50">tokio::runtim..</text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (206 samples, 9.33%)</title><rect x="15.2243%" y="1493" width="9.3339%" height="15" fill="rgb(229,52,16)" fg:x="336" fg:w="206"/><text x="15.4743%" y="1503.50">tokio::runtim..</text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (194 samples, 8.79%)</title><rect x="15.7680%" y="1477" width="8.7902%" height="15" fill="rgb(212,155,18)" fg:x="348" fg:w="194"/><text x="16.0180%" y="1487.50">tokio::runti..</text></g><g><title>tokio::runtime::task::new_task (192 samples, 8.70%)</title><rect x="15.8586%" y="1461" width="8.6996%" height="15" fill="rgb(242,21,14)" fg:x="350" fg:w="192"/><text x="16.1086%" y="1471.50">tokio::runti..</text></g><g><title>tokio::runtime::task::raw::RawTask::new (192 samples, 8.70%)</title><rect x="15.8586%" y="1445" width="8.6996%" height="15" fill="rgb(222,19,48)" fg:x="350" fg:w="192"/><text x="16.1086%" y="1455.50">tokio::runti..</text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (192 samples, 8.70%)</title><rect x="15.8586%" y="1429" width="8.6996%" height="15" fill="rgb(232,45,27)" fg:x="350" fg:w="192"/><text x="16.1086%" y="1439.50">tokio::runti..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (187 samples, 8.47%)</title><rect x="16.0852%" y="1413" width="8.4730%" height="15" fill="rgb(249,103,42)" fg:x="355" fg:w="187"/><text x="16.3352%" y="1423.50">alloc::boxed..</text></g><g><title>alloc::alloc::exchange_malloc (187 samples, 8.47%)</title><rect x="16.0852%" y="1397" width="8.4730%" height="15" fill="rgb(246,81,33)" fg:x="355" fg:w="187"/><text x="16.3352%" y="1407.50">alloc::alloc..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (187 samples, 8.47%)</title><rect x="16.0852%" y="1381" width="8.4730%" height="15" fill="rgb(252,33,42)" fg:x="355" fg:w="187"/><text x="16.3352%" y="1391.50">&lt;alloc::allo..</text></g><g><title>alloc::alloc::Global::alloc_impl (187 samples, 8.47%)</title><rect x="16.0852%" y="1365" width="8.4730%" height="15" fill="rgb(209,212,41)" fg:x="355" fg:w="187"/><text x="16.3352%" y="1375.50">alloc::alloc..</text></g><g><title>alloc::alloc::alloc (187 samples, 8.47%)</title><rect x="16.0852%" y="1349" width="8.4730%" height="15" fill="rgb(207,154,6)" fg:x="355" fg:w="187"/><text x="16.3352%" y="1359.50">alloc::alloc..</text></g><g><title>__rdl_alloc (187 samples, 8.47%)</title><rect x="16.0852%" y="1333" width="8.4730%" height="15" fill="rgb(223,64,47)" fg:x="355" fg:w="187"/><text x="16.3352%" y="1343.50">__rdl_alloc</text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (187 samples, 8.47%)</title><rect x="16.0852%" y="1317" width="8.4730%" height="15" fill="rgb(211,161,38)" fg:x="355" fg:w="187"/><text x="16.3352%" y="1327.50">std::sys::pa..</text></g><g><title>std::sys::pal::unix::alloc::aligned_malloc (187 samples, 8.47%)</title><rect x="16.0852%" y="1301" width="8.4730%" height="15" fill="rgb(219,138,40)" fg:x="355" fg:w="187"/><text x="16.3352%" y="1311.50">std::sys::pa..</text></g><g><title>posix_memalign (187 samples, 8.47%)</title><rect x="16.0852%" y="1285" width="8.4730%" height="15" fill="rgb(241,228,46)" fg:x="355" fg:w="187"/><text x="16.3352%" y="1295.50">posix_memali..</text></g><g><title>[libc.so.6] (187 samples, 8.47%)</title><rect x="16.0852%" y="1269" width="8.4730%" height="15" fill="rgb(223,209,38)" fg:x="355" fg:w="187"/><text x="16.3352%" y="1279.50">[libc.so.6]</text></g><g><title>[libc.so.6] (187 samples, 8.47%)</title><rect x="16.0852%" y="1253" width="8.4730%" height="15" fill="rgb(236,164,45)" fg:x="355" fg:w="187"/><text x="16.3352%" y="1263.50">[libc.so.6]</text></g><g><title>[libc.so.6] (187 samples, 8.47%)</title><rect x="16.0852%" y="1237" width="8.4730%" height="15" fill="rgb(231,15,5)" fg:x="355" fg:w="187"/><text x="16.3352%" y="1247.50">[libc.so.6]</text></g><g><title>[unknown] (178 samples, 8.07%)</title><rect x="16.4930%" y="1221" width="8.0652%" height="15" fill="rgb(252,35,15)" fg:x="364" fg:w="178"/><text x="16.7430%" y="1231.50">[unknown]</text></g><g><title>[unknown] (154 samples, 6.98%)</title><rect x="17.5804%" y="1205" width="6.9778%" height="15" fill="rgb(248,181,18)" fg:x="388" fg:w="154"/><text x="17.8304%" y="1215.50">[unknown]</text></g><g><title>[unknown] (151 samples, 6.84%)</title><rect x="17.7164%" y="1189" width="6.8419%" height="15" fill="rgb(233,39,42)" fg:x="391" fg:w="151"/><text x="17.9664%" y="1199.50">[unknown]</text></g><g><title>[unknown] (141 samples, 6.39%)</title><rect x="18.1695%" y="1173" width="6.3888%" height="15" fill="rgb(238,110,33)" fg:x="401" fg:w="141"/><text x="18.4195%" y="1183.50">[unknown]</text></g><g><title>[unknown] (109 samples, 4.94%)</title><rect x="19.6194%" y="1157" width="4.9388%" height="15" fill="rgb(233,195,10)" fg:x="433" fg:w="109"/><text x="19.8694%" y="1167.50">[unkno..</text></g><g><title>[unknown] (82 samples, 3.72%)</title><rect x="20.8428%" y="1141" width="3.7155%" height="15" fill="rgb(254,105,3)" fg:x="460" fg:w="82"/><text x="21.0928%" y="1151.50">[unk..</text></g><g><title>[unknown] (73 samples, 3.31%)</title><rect x="21.2506%" y="1125" width="3.3077%" height="15" fill="rgb(221,225,9)" fg:x="469" fg:w="73"/><text x="21.5006%" y="1135.50">[un..</text></g><g><title>[unknown] (64 samples, 2.90%)</title><rect x="21.6584%" y="1109" width="2.8999%" height="15" fill="rgb(224,227,45)" fg:x="478" fg:w="64"/><text x="21.9084%" y="1119.50">[u..</text></g><g><title>[unknown] (49 samples, 2.22%)</title><rect x="22.3380%" y="1093" width="2.2202%" height="15" fill="rgb(229,198,43)" fg:x="493" fg:w="49"/><text x="22.5880%" y="1103.50">[..</text></g><g><title>[unknown] (32 samples, 1.45%)</title><rect x="23.1083%" y="1077" width="1.4499%" height="15" fill="rgb(206,209,35)" fg:x="510" fg:w="32"/><text x="23.3583%" y="1087.50"></text></g><g><title>[unknown] (29 samples, 1.31%)</title><rect x="23.2442%" y="1061" width="1.3140%" height="15" fill="rgb(245,195,53)" fg:x="513" fg:w="29"/><text x="23.4942%" y="1071.50"></text></g><g><title>[[heap]] (6 samples, 0.27%)</title><rect x="24.5582%" y="1813" width="0.2719%" height="15" fill="rgb(240,92,26)" fg:x="542" fg:w="6"/><text x="24.8082%" y="1823.50"></text></g><g><title>syscall (6 samples, 0.27%)</title><rect x="24.5582%" y="1797" width="0.2719%" height="15" fill="rgb(207,40,23)" fg:x="542" fg:w="6"/><text x="24.8082%" y="1807.50"></text></g><g><title>[unknown] (6 samples, 0.27%)</title><rect x="24.5582%" y="1781" width="0.2719%" height="15" fill="rgb(223,111,35)" fg:x="542" fg:w="6"/><text x="24.8082%" y="1791.50"></text></g><g><title>[anon] (1 samples, 0.05%)</title><rect x="24.8301%" y="1813" width="0.0453%" height="15" fill="rgb(229,147,28)" fg:x="548" fg:w="1"/><text x="25.0801%" y="1823.50"></text></g><g><title>syscall (1 samples, 0.05%)</title><rect x="24.8301%" y="1797" width="0.0453%" height="15" fill="rgb(211,29,28)" fg:x="548" fg:w="1"/><text x="25.0801%" y="1807.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="24.8301%" y="1781" width="0.0453%" height="15" fill="rgb(228,72,33)" fg:x="548" fg:w="1"/><text x="25.0801%" y="1791.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="25.0113%" y="1765" width="0.0453%" height="15" fill="rgb(205,214,31)" fg:x="552" fg:w="1"/><text x="25.2613%" y="1775.50"></text></g><g><title>[libc.so.6] (5 samples, 0.23%)</title><rect x="24.8754%" y="1781" width="0.2266%" height="15" fill="rgb(224,111,15)" fg:x="549" fg:w="5"/><text x="25.1254%" y="1791.50"></text></g><g><title>cfree (1 samples, 0.05%)</title><rect x="25.0566%" y="1765" width="0.0453%" height="15" fill="rgb(253,21,26)" fg:x="553" fg:w="1"/><text x="25.3066%" y="1775.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="25.0566%" y="1749" width="0.0453%" height="15" fill="rgb(245,139,43)" fg:x="553" fg:w="1"/><text x="25.3066%" y="1759.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="25.1019%" y="1781" width="0.0906%" height="15" fill="rgb(252,170,7)" fg:x="554" fg:w="2"/><text x="25.3519%" y="1791.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="25.1019%" y="1765" width="0.0906%" height="15" fill="rgb(231,118,14)" fg:x="554" fg:w="2"/><text x="25.3519%" y="1775.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="25.1019%" y="1749" width="0.0906%" height="15" fill="rgb(238,83,0)" fg:x="554" fg:w="2"/><text x="25.3519%" y="1759.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="25.1019%" y="1733" width="0.0906%" height="15" fill="rgb(221,39,39)" fg:x="554" fg:w="2"/><text x="25.3519%" y="1743.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="25.1019%" y="1717" width="0.0906%" height="15" fill="rgb(222,119,46)" fg:x="554" fg:w="2"/><text x="25.3519%" y="1727.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="25.1019%" y="1701" width="0.0906%" height="15" fill="rgb(222,165,49)" fg:x="554" fg:w="2"/><text x="25.3519%" y="1711.50"></text></g><g><title>__call_tls_dtors (1 samples, 0.05%)</title><rect x="25.1926%" y="1781" width="0.0453%" height="15" fill="rgb(219,113,52)" fg:x="556" fg:w="1"/><text x="25.4426%" y="1791.50"></text></g><g><title>cfree (1 samples, 0.05%)</title><rect x="25.1926%" y="1765" width="0.0453%" height="15" fill="rgb(214,7,15)" fg:x="556" fg:w="1"/><text x="25.4426%" y="1775.50"></text></g><g><title>__madvise (1 samples, 0.05%)</title><rect x="25.2379%" y="1781" width="0.0453%" height="15" fill="rgb(235,32,4)" fg:x="557" fg:w="1"/><text x="25.4879%" y="1791.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="25.2379%" y="1765" width="0.0453%" height="15" fill="rgb(238,90,54)" fg:x="557" fg:w="1"/><text x="25.4879%" y="1775.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="25.2379%" y="1749" width="0.0453%" height="15" fill="rgb(213,208,19)" fg:x="557" fg:w="1"/><text x="25.4879%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="25.2379%" y="1733" width="0.0453%" height="15" fill="rgb(233,156,4)" fg:x="557" fg:w="1"/><text x="25.4879%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="25.2379%" y="1717" width="0.0453%" height="15" fill="rgb(207,194,5)" fg:x="557" fg:w="1"/><text x="25.4879%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="25.2379%" y="1701" width="0.0453%" height="15" fill="rgb(206,111,30)" fg:x="557" fg:w="1"/><text x="25.4879%" y="1711.50"></text></g><g><title>core::mem::drop (1 samples, 0.05%)</title><rect x="25.2832%" y="1589" width="0.0453%" height="15" fill="rgb(243,70,54)" fg:x="558" fg:w="1"/><text x="25.5332%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::blocking::shutdown::Sender&gt; (1 samples, 0.05%)</title><rect x="25.2832%" y="1573" width="0.0453%" height="15" fill="rgb(242,28,8)" fg:x="558" fg:w="1"/><text x="25.5332%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Sender&lt;()&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="25.2832%" y="1557" width="0.0453%" height="15" fill="rgb(219,106,18)" fg:x="558" fg:w="1"/><text x="25.5332%" y="1567.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="25.2832%" y="1541" width="0.0453%" height="15" fill="rgb(244,222,10)" fg:x="558" fg:w="1"/><text x="25.5332%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::handle::EnterGuard&gt; (2 samples, 0.09%)</title><rect x="25.3285%" y="1589" width="0.0906%" height="15" fill="rgb(236,179,52)" fg:x="559" fg:w="2"/><text x="25.5785%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::context::current::SetCurrentGuard&gt; (2 samples, 0.09%)</title><rect x="25.3285%" y="1573" width="0.0906%" height="15" fill="rgb(213,23,39)" fg:x="559" fg:w="2"/><text x="25.5785%" y="1583.50"></text></g><g><title>&lt;tokio::runtime::context::current::SetCurrentGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="25.3285%" y="1557" width="0.0906%" height="15" fill="rgb(238,48,10)" fg:x="559" fg:w="2"/><text x="25.5785%" y="1567.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.09%)</title><rect x="25.3285%" y="1541" width="0.0906%" height="15" fill="rgb(251,196,23)" fg:x="559" fg:w="2"/><text x="25.5785%" y="1551.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.09%)</title><rect x="25.3285%" y="1525" width="0.0906%" height="15" fill="rgb(250,152,24)" fg:x="559" fg:w="2"/><text x="25.5785%" y="1535.50"></text></g><g><title>&lt;tokio::runtime::context::current::SetCurrentGuard as core::ops::drop::Drop&gt;::drop::_{{closure}} (2 samples, 0.09%)</title><rect x="25.3285%" y="1509" width="0.0906%" height="15" fill="rgb(209,150,17)" fg:x="559" fg:w="2"/><text x="25.5785%" y="1519.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="25.3738%" y="1493" width="0.0453%" height="15" fill="rgb(234,202,34)" fg:x="560" fg:w="1"/><text x="25.6238%" y="1503.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="25.3738%" y="1477" width="0.0453%" height="15" fill="rgb(253,148,53)" fg:x="560" fg:w="1"/><text x="25.6238%" y="1487.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="25.3738%" y="1461" width="0.0453%" height="15" fill="rgb(218,129,16)" fg:x="560" fg:w="1"/><text x="25.6238%" y="1471.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="25.3738%" y="1445" width="0.0453%" height="15" fill="rgb(216,85,19)" fg:x="560" fg:w="1"/><text x="25.6238%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="25.3738%" y="1429" width="0.0453%" height="15" fill="rgb(235,228,7)" fg:x="560" fg:w="1"/><text x="25.6238%" y="1439.50"></text></g><g><title>core::mem::drop (3 samples, 0.14%)</title><rect x="25.4191%" y="1573" width="0.1359%" height="15" fill="rgb(245,175,0)" fg:x="561" fg:w="3"/><text x="25.6691%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::blocking::pool::Shared&gt;&gt; (3 samples, 0.14%)</title><rect x="25.4191%" y="1557" width="0.1359%" height="15" fill="rgb(208,168,36)" fg:x="561" fg:w="3"/><text x="25.6691%" y="1567.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.14%)</title><rect x="25.4191%" y="1541" width="0.1359%" height="15" fill="rgb(246,171,24)" fg:x="561" fg:w="3"/><text x="25.6691%" y="1551.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::unlock (3 samples, 0.14%)</title><rect x="25.4191%" y="1525" width="0.1359%" height="15" fill="rgb(215,142,24)" fg:x="561" fg:w="3"/><text x="25.6691%" y="1535.50"></text></g><g><title>syscall (3 samples, 0.14%)</title><rect x="25.4191%" y="1509" width="0.1359%" height="15" fill="rgb(250,187,7)" fg:x="561" fg:w="3"/><text x="25.6691%" y="1519.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="25.4191%" y="1493" width="0.1359%" height="15" fill="rgb(228,66,33)" fg:x="561" fg:w="3"/><text x="25.6691%" y="1503.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="25.4191%" y="1477" width="0.1359%" height="15" fill="rgb(234,215,21)" fg:x="561" fg:w="3"/><text x="25.6691%" y="1487.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="25.4191%" y="1461" width="0.1359%" height="15" fill="rgb(222,191,20)" fg:x="561" fg:w="3"/><text x="25.6691%" y="1471.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="25.4191%" y="1445" width="0.1359%" height="15" fill="rgb(245,79,54)" fg:x="561" fg:w="3"/><text x="25.6691%" y="1455.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="25.4191%" y="1429" width="0.1359%" height="15" fill="rgb(240,10,37)" fg:x="561" fg:w="3"/><text x="25.6691%" y="1439.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="25.4191%" y="1413" width="0.1359%" height="15" fill="rgb(214,192,32)" fg:x="561" fg:w="3"/><text x="25.6691%" y="1423.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="25.4191%" y="1397" width="0.1359%" height="15" fill="rgb(209,36,54)" fg:x="561" fg:w="3"/><text x="25.6691%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="25.5097%" y="1381" width="0.0453%" height="15" fill="rgb(220,10,11)" fg:x="563" fg:w="1"/><text x="25.7597%" y="1391.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (8 samples, 0.36%)</title><rect x="25.6004%" y="1509" width="0.3625%" height="15" fill="rgb(221,106,17)" fg:x="565" fg:w="8"/><text x="25.8504%" y="1519.50"></text></g><g><title>syscall (8 samples, 0.36%)</title><rect x="25.6004%" y="1493" width="0.3625%" height="15" fill="rgb(251,142,44)" fg:x="565" fg:w="8"/><text x="25.8504%" y="1503.50"></text></g><g><title>[unknown] (8 samples, 0.36%)</title><rect x="25.6004%" y="1477" width="0.3625%" height="15" fill="rgb(238,13,15)" fg:x="565" fg:w="8"/><text x="25.8504%" y="1487.50"></text></g><g><title>[unknown] (8 samples, 0.36%)</title><rect x="25.6004%" y="1461" width="0.3625%" height="15" fill="rgb(208,107,27)" fg:x="565" fg:w="8"/><text x="25.8504%" y="1471.50"></text></g><g><title>[unknown] (8 samples, 0.36%)</title><rect x="25.6004%" y="1445" width="0.3625%" height="15" fill="rgb(205,136,37)" fg:x="565" fg:w="8"/><text x="25.8504%" y="1455.50"></text></g><g><title>[unknown] (8 samples, 0.36%)</title><rect x="25.6004%" y="1429" width="0.3625%" height="15" fill="rgb(250,205,27)" fg:x="565" fg:w="8"/><text x="25.8504%" y="1439.50"></text></g><g><title>[unknown] (7 samples, 0.32%)</title><rect x="25.6457%" y="1413" width="0.3172%" height="15" fill="rgb(210,80,43)" fg:x="566" fg:w="7"/><text x="25.8957%" y="1423.50"></text></g><g><title>[unknown] (7 samples, 0.32%)</title><rect x="25.6457%" y="1397" width="0.3172%" height="15" fill="rgb(247,160,36)" fg:x="566" fg:w="7"/><text x="25.8957%" y="1407.50"></text></g><g><title>[unknown] (7 samples, 0.32%)</title><rect x="25.6457%" y="1381" width="0.3172%" height="15" fill="rgb(234,13,49)" fg:x="566" fg:w="7"/><text x="25.8957%" y="1391.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="25.7816%" y="1365" width="0.1812%" height="15" fill="rgb(234,122,0)" fg:x="569" fg:w="4"/><text x="26.0316%" y="1375.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="25.7816%" y="1349" width="0.1812%" height="15" fill="rgb(207,146,38)" fg:x="569" fg:w="4"/><text x="26.0316%" y="1359.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="25.8269%" y="1333" width="0.1359%" height="15" fill="rgb(207,177,25)" fg:x="570" fg:w="3"/><text x="26.0769%" y="1343.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="25.8722%" y="1317" width="0.0906%" height="15" fill="rgb(211,178,42)" fg:x="571" fg:w="2"/><text x="26.1222%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="25.9175%" y="1301" width="0.0453%" height="15" fill="rgb(230,69,54)" fg:x="572" fg:w="1"/><text x="26.1675%" y="1311.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (21 samples, 0.95%)</title><rect x="25.5551%" y="1573" width="0.9515%" height="15" fill="rgb(214,135,41)" fg:x="564" fg:w="21"/><text x="25.8051%" y="1583.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (21 samples, 0.95%)</title><rect x="25.5551%" y="1557" width="0.9515%" height="15" fill="rgb(237,67,25)" fg:x="564" fg:w="21"/><text x="25.8051%" y="1567.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (21 samples, 0.95%)</title><rect x="25.5551%" y="1541" width="0.9515%" height="15" fill="rgb(222,189,50)" fg:x="564" fg:w="21"/><text x="25.8051%" y="1551.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (21 samples, 0.95%)</title><rect x="25.5551%" y="1525" width="0.9515%" height="15" fill="rgb(245,148,34)" fg:x="564" fg:w="21"/><text x="25.8051%" y="1535.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::spin (12 samples, 0.54%)</title><rect x="25.9628%" y="1509" width="0.5437%" height="15" fill="rgb(222,29,6)" fg:x="573" fg:w="12"/><text x="26.2128%" y="1519.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (2 samples, 0.09%)</title><rect x="26.4159%" y="1493" width="0.0906%" height="15" fill="rgb(221,189,43)" fg:x="583" fg:w="2"/><text x="26.6659%" y="1503.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.09%)</title><rect x="26.4159%" y="1477" width="0.0906%" height="15" fill="rgb(207,36,27)" fg:x="583" fg:w="2"/><text x="26.6659%" y="1487.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.18%)</title><rect x="26.5519%" y="1285" width="0.1812%" height="15" fill="rgb(217,90,24)" fg:x="586" fg:w="4"/><text x="26.8019%" y="1295.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.18%)</title><rect x="26.5519%" y="1269" width="0.1812%" height="15" fill="rgb(224,66,35)" fg:x="586" fg:w="4"/><text x="26.8019%" y="1279.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime::_{{closure}} (4 samples, 0.18%)</title><rect x="26.5519%" y="1253" width="0.1812%" height="15" fill="rgb(221,13,50)" fg:x="586" fg:w="4"/><text x="26.8019%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (4 samples, 0.18%)</title><rect x="26.5519%" y="1237" width="0.1812%" height="15" fill="rgb(236,68,49)" fg:x="586" fg:w="4"/><text x="26.8019%" y="1247.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.18%)</title><rect x="26.5519%" y="1221" width="0.1812%" height="15" fill="rgb(229,146,28)" fg:x="586" fg:w="4"/><text x="26.8019%" y="1231.50"></text></g><g><title>tokio::util::rand::FastRand::new (4 samples, 0.18%)</title><rect x="26.5519%" y="1205" width="0.1812%" height="15" fill="rgb(225,31,38)" fg:x="586" fg:w="4"/><text x="26.8019%" y="1215.50"></text></g><g><title>tokio::util::rand::RngSeed::new (4 samples, 0.18%)</title><rect x="26.5519%" y="1189" width="0.1812%" height="15" fill="rgb(250,208,3)" fg:x="586" fg:w="4"/><text x="26.8019%" y="1199.50"></text></g><g><title>tokio::loom::std::rand::seed (4 samples, 0.18%)</title><rect x="26.5519%" y="1173" width="0.1812%" height="15" fill="rgb(246,54,23)" fg:x="586" fg:w="4"/><text x="26.8019%" y="1183.50"></text></g><g><title>std::hash::random::RandomState::new (4 samples, 0.18%)</title><rect x="26.5519%" y="1157" width="0.1812%" height="15" fill="rgb(243,76,11)" fg:x="586" fg:w="4"/><text x="26.8019%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.18%)</title><rect x="26.5519%" y="1141" width="0.1812%" height="15" fill="rgb(245,21,50)" fg:x="586" fg:w="4"/><text x="26.8019%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.18%)</title><rect x="26.5519%" y="1125" width="0.1812%" height="15" fill="rgb(228,9,43)" fg:x="586" fg:w="4"/><text x="26.8019%" y="1135.50"></text></g><g><title>std::hash::random::RandomState::new::KEYS::__getit (4 samples, 0.18%)</title><rect x="26.5519%" y="1109" width="0.1812%" height="15" fill="rgb(208,100,47)" fg:x="586" fg:w="4"/><text x="26.8019%" y="1119.50"></text></g><g><title>std::sys::pal::common::thread_local::fast_local::Key&lt;T&gt;::get (4 samples, 0.18%)</title><rect x="26.5519%" y="1093" width="0.1812%" height="15" fill="rgb(232,26,8)" fg:x="586" fg:w="4"/><text x="26.8019%" y="1103.50"></text></g><g><title>std::sys::pal::common::thread_local::fast_local::Key&lt;T&gt;::try_initialize (4 samples, 0.18%)</title><rect x="26.5519%" y="1077" width="0.1812%" height="15" fill="rgb(216,166,38)" fg:x="586" fg:w="4"/><text x="26.8019%" y="1087.50"></text></g><g><title>std::sys::pal::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::initialize (4 samples, 0.18%)</title><rect x="26.5519%" y="1061" width="0.1812%" height="15" fill="rgb(251,202,51)" fg:x="586" fg:w="4"/><text x="26.8019%" y="1071.50"></text></g><g><title>std::hash::random::RandomState::new::KEYS::__getit::_{{closure}} (4 samples, 0.18%)</title><rect x="26.5519%" y="1045" width="0.1812%" height="15" fill="rgb(254,216,34)" fg:x="586" fg:w="4"/><text x="26.8019%" y="1055.50"></text></g><g><title>std::hash::random::RandomState::new::KEYS::__init (4 samples, 0.18%)</title><rect x="26.5519%" y="1029" width="0.1812%" height="15" fill="rgb(251,32,27)" fg:x="586" fg:w="4"/><text x="26.8019%" y="1039.50"></text></g><g><title>std::sys::pal::unix::rand::hashmap_random_keys (4 samples, 0.18%)</title><rect x="26.5519%" y="1013" width="0.1812%" height="15" fill="rgb(208,127,28)" fg:x="586" fg:w="4"/><text x="26.8019%" y="1023.50"></text></g><g><title>std::sys::pal::unix::rand::imp::fill_bytes (4 samples, 0.18%)</title><rect x="26.5519%" y="997" width="0.1812%" height="15" fill="rgb(224,137,22)" fg:x="586" fg:w="4"/><text x="26.8019%" y="1007.50"></text></g><g><title>std::sys::pal::unix::rand::imp::getrandom_fill_bytes (4 samples, 0.18%)</title><rect x="26.5519%" y="981" width="0.1812%" height="15" fill="rgb(254,70,32)" fg:x="586" fg:w="4"/><text x="26.8019%" y="991.50"></text></g><g><title>std::sys::pal::unix::rand::imp::getrandom (4 samples, 0.18%)</title><rect x="26.5519%" y="965" width="0.1812%" height="15" fill="rgb(229,75,37)" fg:x="586" fg:w="4"/><text x="26.8019%" y="975.50"></text></g><g><title>std::sys::pal::unix::rand::imp::getrandom::getrandom (4 samples, 0.18%)</title><rect x="26.5519%" y="949" width="0.1812%" height="15" fill="rgb(252,64,23)" fg:x="586" fg:w="4"/><text x="26.8019%" y="959.50"></text></g><g><title>getrandom (4 samples, 0.18%)</title><rect x="26.5519%" y="933" width="0.1812%" height="15" fill="rgb(232,162,48)" fg:x="586" fg:w="4"/><text x="26.8019%" y="943.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="26.5519%" y="917" width="0.1812%" height="15" fill="rgb(246,160,12)" fg:x="586" fg:w="4"/><text x="26.8019%" y="927.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="26.5519%" y="901" width="0.1812%" height="15" fill="rgb(247,166,0)" fg:x="586" fg:w="4"/><text x="26.8019%" y="911.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="26.5519%" y="885" width="0.1812%" height="15" fill="rgb(249,219,21)" fg:x="586" fg:w="4"/><text x="26.8019%" y="895.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="26.5519%" y="869" width="0.1812%" height="15" fill="rgb(205,209,3)" fg:x="586" fg:w="4"/><text x="26.8019%" y="879.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="26.5519%" y="853" width="0.1812%" height="15" fill="rgb(243,44,1)" fg:x="586" fg:w="4"/><text x="26.8019%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="26.6425%" y="837" width="0.0906%" height="15" fill="rgb(206,159,16)" fg:x="588" fg:w="2"/><text x="26.8925%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="26.6878%" y="821" width="0.0453%" height="15" fill="rgb(244,77,30)" fg:x="589" fg:w="1"/><text x="26.9378%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="26.6878%" y="805" width="0.0453%" height="15" fill="rgb(218,69,12)" fg:x="589" fg:w="1"/><text x="26.9378%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::context::scoped::Scoped&lt;T&gt;::set::Reset&lt;tokio::runtime::scheduler::Context&gt;&gt; (1 samples, 0.05%)</title><rect x="26.7331%" y="1189" width="0.0453%" height="15" fill="rgb(212,87,7)" fg:x="590" fg:w="1"/><text x="26.9831%" y="1199.50"></text></g><g><title>&lt;tokio::runtime::context::scoped::Scoped&lt;T&gt;::set::Reset&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="26.7331%" y="1173" width="0.0453%" height="15" fill="rgb(245,114,25)" fg:x="590" fg:w="1"/><text x="26.9831%" y="1183.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.05%)</title><rect x="26.7331%" y="1157" width="0.0453%" height="15" fill="rgb(210,61,42)" fg:x="590" fg:w="1"/><text x="26.9831%" y="1167.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.05%)</title><rect x="26.7331%" y="1141" width="0.0453%" height="15" fill="rgb(211,52,33)" fg:x="590" fg:w="1"/><text x="26.9831%" y="1151.50"></text></g><g><title>core::mem::replace (1 samples, 0.05%)</title><rect x="26.7331%" y="1125" width="0.0453%" height="15" fill="rgb(234,58,33)" fg:x="590" fg:w="1"/><text x="26.9831%" y="1135.50"></text></g><g><title>core::ptr::write (1 samples, 0.05%)</title><rect x="26.7331%" y="1109" width="0.0453%" height="15" fill="rgb(220,115,36)" fg:x="590" fg:w="1"/><text x="26.9831%" y="1119.50"></text></g><g><title>syscall (2 samples, 0.09%)</title><rect x="26.9597%" y="1157" width="0.0906%" height="15" fill="rgb(243,153,54)" fg:x="595" fg:w="2"/><text x="27.2097%" y="1167.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="26.9597%" y="1141" width="0.0906%" height="15" fill="rgb(251,47,18)" fg:x="595" fg:w="2"/><text x="27.2097%" y="1151.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="26.9597%" y="1125" width="0.0906%" height="15" fill="rgb(242,102,42)" fg:x="595" fg:w="2"/><text x="27.2097%" y="1135.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="26.9597%" y="1109" width="0.0906%" height="15" fill="rgb(234,31,38)" fg:x="595" fg:w="2"/><text x="27.2097%" y="1119.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="26.9597%" y="1093" width="0.0906%" height="15" fill="rgb(221,117,51)" fg:x="595" fg:w="2"/><text x="27.2097%" y="1103.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="26.9597%" y="1077" width="0.0906%" height="15" fill="rgb(212,20,18)" fg:x="595" fg:w="2"/><text x="27.2097%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="27.0050%" y="1061" width="0.0453%" height="15" fill="rgb(245,133,36)" fg:x="596" fg:w="1"/><text x="27.2550%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_default (2 samples, 0.09%)</title><rect x="27.3675%" y="1109" width="0.0906%" height="15" fill="rgb(212,6,19)" fg:x="604" fg:w="2"/><text x="27.6175%" y="1119.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (6 samples, 0.27%)</title><rect x="27.3675%" y="1141" width="0.2719%" height="15" fill="rgb(218,1,36)" fg:x="604" fg:w="6"/><text x="27.6175%" y="1151.50"></text></g><g><title>std::time::Instant::duration_since (6 samples, 0.27%)</title><rect x="27.3675%" y="1125" width="0.2719%" height="15" fill="rgb(246,84,54)" fg:x="604" fg:w="6"/><text x="27.6175%" y="1135.50"></text></g><g><title>std::time::Instant::checked_duration_since (4 samples, 0.18%)</title><rect x="27.4581%" y="1109" width="0.1812%" height="15" fill="rgb(242,110,6)" fg:x="606" fg:w="4"/><text x="27.7081%" y="1119.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (4 samples, 0.18%)</title><rect x="27.4581%" y="1093" width="0.1812%" height="15" fill="rgb(214,47,5)" fg:x="606" fg:w="4"/><text x="27.7081%" y="1103.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (4 samples, 0.18%)</title><rect x="27.4581%" y="1077" width="0.1812%" height="15" fill="rgb(218,159,25)" fg:x="606" fg:w="4"/><text x="27.7081%" y="1087.50"></text></g><g><title>core::num::&lt;impl u128&gt;::leading_zeros (2 samples, 0.09%)</title><rect x="27.6393%" y="1093" width="0.0906%" height="15" fill="rgb(215,211,28)" fg:x="610" fg:w="2"/><text x="27.8893%" y="1103.50"></text></g><g><title>compiler_builtins::float::conv::int_to_float::u128_to_f64_bits (3 samples, 0.14%)</title><rect x="27.6393%" y="1109" width="0.1359%" height="15" fill="rgb(238,59,32)" fg:x="610" fg:w="3"/><text x="27.8893%" y="1119.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_shl (1 samples, 0.05%)</title><rect x="27.7300%" y="1093" width="0.0453%" height="15" fill="rgb(226,82,3)" fg:x="612" fg:w="1"/><text x="27.9800%" y="1103.50"></text></g><g><title>core::num::&lt;impl u128&gt;::unchecked_shl (1 samples, 0.05%)</title><rect x="27.7300%" y="1077" width="0.0453%" height="15" fill="rgb(240,164,32)" fg:x="612" fg:w="1"/><text x="27.9800%" y="1087.50"></text></g><g><title>__floattidf (4 samples, 0.18%)</title><rect x="27.6393%" y="1141" width="0.1812%" height="15" fill="rgb(232,46,7)" fg:x="610" fg:w="4"/><text x="27.8893%" y="1151.50"></text></g><g><title>compiler_builtins::float::conv::__floattidf (4 samples, 0.18%)</title><rect x="27.6393%" y="1125" width="0.1812%" height="15" fill="rgb(229,129,53)" fg:x="610" fg:w="4"/><text x="27.8893%" y="1135.50"></text></g><g><title>core::num::&lt;impl i128&gt;::unsigned_abs (1 samples, 0.05%)</title><rect x="27.7753%" y="1109" width="0.0453%" height="15" fill="rgb(234,188,29)" fg:x="613" fg:w="1"/><text x="28.0253%" y="1119.50"></text></g><g><title>core::num::&lt;impl i128&gt;::wrapping_abs (1 samples, 0.05%)</title><rect x="27.7753%" y="1093" width="0.0453%" height="15" fill="rgb(246,141,4)" fg:x="613" fg:w="1"/><text x="28.0253%" y="1103.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (14 samples, 0.63%)</title><rect x="27.8206%" y="1141" width="0.6343%" height="15" fill="rgb(229,23,39)" fg:x="614" fg:w="14"/><text x="28.0706%" y="1151.50"></text></g><g><title>pow (14 samples, 0.63%)</title><rect x="27.8206%" y="1125" width="0.6343%" height="15" fill="rgb(206,12,3)" fg:x="614" fg:w="14"/><text x="28.0706%" y="1135.50"></text></g><g><title>[libm.so.6] (13 samples, 0.59%)</title><rect x="27.8659%" y="1109" width="0.5890%" height="15" fill="rgb(252,226,20)" fg:x="615" fg:w="13"/><text x="28.1159%" y="1119.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (20 samples, 0.91%)</title><rect x="28.4549%" y="1141" width="0.9062%" height="15" fill="rgb(216,123,35)" fg:x="628" fg:w="20"/><text x="28.7049%" y="1151.50"></text></g><g><title>clock_gettime (20 samples, 0.91%)</title><rect x="28.4549%" y="1125" width="0.9062%" height="15" fill="rgb(212,68,40)" fg:x="628" fg:w="20"/><text x="28.7049%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (19 samples, 0.86%)</title><rect x="28.5002%" y="1109" width="0.8609%" height="15" fill="rgb(254,125,32)" fg:x="629" fg:w="19"/><text x="28.7502%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (52 samples, 2.36%)</title><rect x="27.0503%" y="1157" width="2.3561%" height="15" fill="rgb(253,97,22)" fg:x="597" fg:w="52"/><text x="27.3003%" y="1167.50">t..</text></g><g><title>std::time::Instant::now (1 samples, 0.05%)</title><rect x="29.3611%" y="1141" width="0.0453%" height="15" fill="rgb(241,101,14)" fg:x="648" fg:w="1"/><text x="29.6111%" y="1151.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (1 samples, 0.05%)</title><rect x="29.3611%" y="1125" width="0.0453%" height="15" fill="rgb(238,103,29)" fg:x="648" fg:w="1"/><text x="29.6111%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.4517%" y="1125" width="0.0453%" height="15" fill="rgb(233,195,47)" fg:x="650" fg:w="1"/><text x="29.7017%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.4517%" y="1109" width="0.0453%" height="15" fill="rgb(246,218,30)" fg:x="650" fg:w="1"/><text x="29.7017%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.4517%" y="1093" width="0.0453%" height="15" fill="rgb(219,145,47)" fg:x="650" fg:w="1"/><text x="29.7017%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.4517%" y="1077" width="0.0453%" height="15" fill="rgb(243,12,26)" fg:x="650" fg:w="1"/><text x="29.7017%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.4517%" y="1061" width="0.0453%" height="15" fill="rgb(214,87,16)" fg:x="650" fg:w="1"/><text x="29.7017%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.4517%" y="1045" width="0.0453%" height="15" fill="rgb(208,99,42)" fg:x="650" fg:w="1"/><text x="29.7017%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.4517%" y="1029" width="0.0453%" height="15" fill="rgb(253,99,2)" fg:x="650" fg:w="1"/><text x="29.7017%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.4517%" y="1013" width="0.0453%" height="15" fill="rgb(220,168,23)" fg:x="650" fg:w="1"/><text x="29.7017%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.4517%" y="997" width="0.0453%" height="15" fill="rgb(242,38,24)" fg:x="650" fg:w="1"/><text x="29.7017%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.4517%" y="981" width="0.0453%" height="15" fill="rgb(225,182,9)" fg:x="650" fg:w="1"/><text x="29.7017%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.6330%" y="1109" width="0.0453%" height="15" fill="rgb(243,178,37)" fg:x="654" fg:w="1"/><text x="29.8830%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.6330%" y="1093" width="0.0453%" height="15" fill="rgb(232,139,19)" fg:x="654" fg:w="1"/><text x="29.8830%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.6330%" y="1077" width="0.0453%" height="15" fill="rgb(225,201,24)" fg:x="654" fg:w="1"/><text x="29.8830%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.6330%" y="1061" width="0.0453%" height="15" fill="rgb(221,47,46)" fg:x="654" fg:w="1"/><text x="29.8830%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="29.6330%" y="1045" width="0.0453%" height="15" fill="rgb(249,23,13)" fg:x="654" fg:w="1"/><text x="29.8830%" y="1055.50"></text></g><g><title>clock_gettime (20 samples, 0.91%)</title><rect x="29.4971%" y="1125" width="0.9062%" height="15" fill="rgb(219,9,5)" fg:x="651" fg:w="20"/><text x="29.7471%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (16 samples, 0.72%)</title><rect x="29.6783%" y="1109" width="0.7250%" height="15" fill="rgb(254,171,16)" fg:x="655" fg:w="16"/><text x="29.9283%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="30.3580%" y="1093" width="0.0453%" height="15" fill="rgb(230,171,20)" fg:x="670" fg:w="1"/><text x="30.6080%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="30.3580%" y="1077" width="0.0453%" height="15" fill="rgb(210,71,41)" fg:x="670" fg:w="1"/><text x="30.6080%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="30.3580%" y="1061" width="0.0453%" height="15" fill="rgb(206,173,20)" fg:x="670" fg:w="1"/><text x="30.6080%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="30.3580%" y="1045" width="0.0453%" height="15" fill="rgb(233,88,34)" fg:x="670" fg:w="1"/><text x="30.6080%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="30.3580%" y="1029" width="0.0453%" height="15" fill="rgb(223,209,46)" fg:x="670" fg:w="1"/><text x="30.6080%" y="1039.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (23 samples, 1.04%)</title><rect x="29.4064%" y="1141" width="1.0421%" height="15" fill="rgb(250,43,18)" fg:x="649" fg:w="23"/><text x="29.6564%" y="1151.50"></text></g><g><title>std::sys::pal::unix::cvt (1 samples, 0.05%)</title><rect x="30.4033%" y="1125" width="0.0453%" height="15" fill="rgb(208,13,10)" fg:x="671" fg:w="1"/><text x="30.6533%" y="1135.50"></text></g><g><title>&lt;i32 as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.05%)</title><rect x="30.4033%" y="1109" width="0.0453%" height="15" fill="rgb(212,200,36)" fg:x="671" fg:w="1"/><text x="30.6533%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (25 samples, 1.13%)</title><rect x="29.4064%" y="1157" width="1.1328%" height="15" fill="rgb(225,90,30)" fg:x="649" fg:w="25"/><text x="29.6564%" y="1167.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.09%)</title><rect x="30.4486%" y="1141" width="0.0906%" height="15" fill="rgb(236,182,39)" fg:x="672" fg:w="2"/><text x="30.6986%" y="1151.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (2 samples, 0.09%)</title><rect x="30.4486%" y="1125" width="0.0906%" height="15" fill="rgb(212,144,35)" fg:x="672" fg:w="2"/><text x="30.6986%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.09%)</title><rect x="30.5845%" y="1141" width="0.0906%" height="15" fill="rgb(228,63,44)" fg:x="675" fg:w="2"/><text x="30.8345%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.09%)</title><rect x="30.5845%" y="1125" width="0.0906%" height="15" fill="rgb(228,109,6)" fg:x="675" fg:w="2"/><text x="30.8345%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.09%)</title><rect x="30.5845%" y="1109" width="0.0906%" height="15" fill="rgb(238,117,24)" fg:x="675" fg:w="2"/><text x="30.8345%" y="1119.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.09%)</title><rect x="30.5845%" y="1093" width="0.0906%" height="15" fill="rgb(242,26,26)" fg:x="675" fg:w="2"/><text x="30.8345%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.05%)</title><rect x="30.6298%" y="1077" width="0.0453%" height="15" fill="rgb(221,92,48)" fg:x="676" fg:w="1"/><text x="30.8798%" y="1087.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.05%)</title><rect x="30.6298%" y="1061" width="0.0453%" height="15" fill="rgb(209,209,32)" fg:x="676" fg:w="1"/><text x="30.8798%" y="1071.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.05%)</title><rect x="30.6298%" y="1045" width="0.0453%" height="15" fill="rgb(221,70,22)" fg:x="676" fg:w="1"/><text x="30.8798%" y="1055.50"></text></g><g><title>realloc (1 samples, 0.05%)</title><rect x="30.6298%" y="1029" width="0.0453%" height="15" fill="rgb(248,145,5)" fg:x="676" fg:w="1"/><text x="30.8798%" y="1039.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="30.6298%" y="1013" width="0.0453%" height="15" fill="rgb(226,116,26)" fg:x="676" fg:w="1"/><text x="30.8798%" y="1023.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="30.6298%" y="997" width="0.0453%" height="15" fill="rgb(244,5,17)" fg:x="676" fg:w="1"/><text x="30.8798%" y="1007.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (1 samples, 0.05%)</title><rect x="30.6751%" y="1077" width="0.0453%" height="15" fill="rgb(252,159,33)" fg:x="677" fg:w="1"/><text x="30.9251%" y="1087.50"></text></g><g><title>syscall (1 samples, 0.05%)</title><rect x="30.6751%" y="1061" width="0.0453%" height="15" fill="rgb(206,71,0)" fg:x="677" fg:w="1"/><text x="30.9251%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="30.6751%" y="1045" width="0.0453%" height="15" fill="rgb(233,118,54)" fg:x="677" fg:w="1"/><text x="30.9251%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="30.6751%" y="1029" width="0.0453%" height="15" fill="rgb(234,83,48)" fg:x="677" fg:w="1"/><text x="30.9251%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="30.6751%" y="1013" width="0.0453%" height="15" fill="rgb(228,3,54)" fg:x="677" fg:w="1"/><text x="30.9251%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="30.6751%" y="997" width="0.0453%" height="15" fill="rgb(226,155,13)" fg:x="677" fg:w="1"/><text x="30.9251%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="30.6751%" y="981" width="0.0453%" height="15" fill="rgb(241,28,37)" fg:x="677" fg:w="1"/><text x="30.9251%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="30.6751%" y="965" width="0.0453%" height="15" fill="rgb(233,93,10)" fg:x="677" fg:w="1"/><text x="30.9251%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="30.6751%" y="949" width="0.0453%" height="15" fill="rgb(225,113,19)" fg:x="677" fg:w="1"/><text x="30.9251%" y="959.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.09%)</title><rect x="30.6751%" y="1141" width="0.0906%" height="15" fill="rgb(241,2,18)" fg:x="677" fg:w="2"/><text x="30.9251%" y="1151.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.09%)</title><rect x="30.6751%" y="1125" width="0.0906%" height="15" fill="rgb(228,207,21)" fg:x="677" fg:w="2"/><text x="30.9251%" y="1135.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (2 samples, 0.09%)</title><rect x="30.6751%" y="1109" width="0.0906%" height="15" fill="rgb(213,211,35)" fg:x="677" fg:w="2"/><text x="30.9251%" y="1119.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (2 samples, 0.09%)</title><rect x="30.6751%" y="1093" width="0.0906%" height="15" fill="rgb(209,83,10)" fg:x="677" fg:w="2"/><text x="30.9251%" y="1103.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::spin (1 samples, 0.05%)</title><rect x="30.7204%" y="1077" width="0.0453%" height="15" fill="rgb(209,164,1)" fg:x="678" fg:w="1"/><text x="30.9704%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::shutdown_core (6 samples, 0.27%)</title><rect x="30.5392%" y="1157" width="0.2719%" height="15" fill="rgb(213,184,43)" fg:x="674" fg:w="6"/><text x="30.7892%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::shutdown (1 samples, 0.05%)</title><rect x="30.7657%" y="1141" width="0.0453%" height="15" fill="rgb(231,61,34)" fg:x="679" fg:w="1"/><text x="31.0157%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::shutdown (1 samples, 0.05%)</title><rect x="30.7657%" y="1125" width="0.0453%" height="15" fill="rgb(235,75,3)" fg:x="679" fg:w="1"/><text x="31.0157%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::shutdown (1 samples, 0.05%)</title><rect x="30.7657%" y="1109" width="0.0453%" height="15" fill="rgb(220,106,47)" fg:x="679" fg:w="1"/><text x="31.0157%" y="1119.50"></text></g><g><title>tokio::runtime::io::driver::Driver::shutdown (1 samples, 0.05%)</title><rect x="30.7657%" y="1093" width="0.0453%" height="15" fill="rgb(210,196,33)" fg:x="679" fg:w="1"/><text x="31.0157%" y="1103.50"></text></g><g><title>tokio::runtime::io::registration_set::RegistrationSet::shutdown (1 samples, 0.05%)</title><rect x="30.7657%" y="1077" width="0.0453%" height="15" fill="rgb(229,154,42)" fg:x="679" fg:w="1"/><text x="31.0157%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.05%)</title><rect x="30.7657%" y="1061" width="0.0453%" height="15" fill="rgb(228,114,26)" fg:x="679" fg:w="1"/><text x="31.0157%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.05%)</title><rect x="30.7657%" y="1045" width="0.0453%" height="15" fill="rgb(208,144,1)" fg:x="679" fg:w="1"/><text x="31.0157%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.05%)</title><rect x="30.7657%" y="1029" width="0.0453%" height="15" fill="rgb(239,112,37)" fg:x="679" fg:w="1"/><text x="31.0157%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.05%)</title><rect x="30.7657%" y="1013" width="0.0453%" height="15" fill="rgb(210,96,50)" fg:x="679" fg:w="1"/><text x="31.0157%" y="1023.50"></text></g><g><title>malloc (1 samples, 0.05%)</title><rect x="30.7657%" y="997" width="0.0453%" height="15" fill="rgb(222,178,2)" fg:x="679" fg:w="1"/><text x="31.0157%" y="1007.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.05%)</title><rect x="30.8564%" y="1125" width="0.0453%" height="15" fill="rgb(226,74,18)" fg:x="681" fg:w="1"/><text x="31.1064%" y="1135.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.05%)</title><rect x="30.8564%" y="1109" width="0.0453%" height="15" fill="rgb(225,67,54)" fg:x="681" fg:w="1"/><text x="31.1064%" y="1119.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.05%)</title><rect x="30.8564%" y="1093" width="0.0453%" height="15" fill="rgb(251,92,32)" fg:x="681" fg:w="1"/><text x="31.1064%" y="1103.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (1 samples, 0.05%)</title><rect x="30.8564%" y="1077" width="0.0453%" height="15" fill="rgb(228,149,22)" fg:x="681" fg:w="1"/><text x="31.1064%" y="1087.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (1 samples, 0.05%)</title><rect x="30.8564%" y="1061" width="0.0453%" height="15" fill="rgb(243,54,13)" fg:x="681" fg:w="1"/><text x="31.1064%" y="1071.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (1 samples, 0.05%)</title><rect x="30.9017%" y="1125" width="0.0453%" height="15" fill="rgb(243,180,28)" fg:x="682" fg:w="1"/><text x="31.1517%" y="1135.50"></text></g><g><title>pow (1 samples, 0.05%)</title><rect x="30.9017%" y="1109" width="0.0453%" height="15" fill="rgb(208,167,24)" fg:x="682" fg:w="1"/><text x="31.1517%" y="1119.50"></text></g><g><title>[libm.so.6] (1 samples, 0.05%)</title><rect x="30.9017%" y="1093" width="0.0453%" height="15" fill="rgb(245,73,45)" fg:x="682" fg:w="1"/><text x="31.1517%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (4 samples, 0.18%)</title><rect x="30.8564%" y="1141" width="0.1812%" height="15" fill="rgb(237,203,48)" fg:x="681" fg:w="4"/><text x="31.1064%" y="1151.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (2 samples, 0.09%)</title><rect x="30.9470%" y="1125" width="0.0906%" height="15" fill="rgb(211,197,16)" fg:x="683" fg:w="2"/><text x="31.1970%" y="1135.50"></text></g><g><title>clock_gettime (2 samples, 0.09%)</title><rect x="30.9470%" y="1109" width="0.0906%" height="15" fill="rgb(243,99,51)" fg:x="683" fg:w="2"/><text x="31.1970%" y="1119.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.09%)</title><rect x="30.9470%" y="1093" width="0.0906%" height="15" fill="rgb(215,123,29)" fg:x="683" fg:w="2"/><text x="31.1970%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (11 samples, 0.50%)</title><rect x="30.8111%" y="1157" width="0.4984%" height="15" fill="rgb(239,186,37)" fg:x="680" fg:w="11"/><text x="31.0611%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (6 samples, 0.27%)</title><rect x="31.0376%" y="1141" width="0.2719%" height="15" fill="rgb(252,136,39)" fg:x="685" fg:w="6"/><text x="31.2876%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park_timeout (6 samples, 0.27%)</title><rect x="31.0376%" y="1125" width="0.2719%" height="15" fill="rgb(223,213,32)" fg:x="685" fg:w="6"/><text x="31.2876%" y="1135.50"></text></g><g><title>tokio::runtime::driver::Driver::park_timeout (5 samples, 0.23%)</title><rect x="31.0829%" y="1109" width="0.2266%" height="15" fill="rgb(233,115,5)" fg:x="686" fg:w="5"/><text x="31.3329%" y="1119.50"></text></g><g><title>tokio::runtime::driver::TimeDriver::park_timeout (5 samples, 0.23%)</title><rect x="31.0829%" y="1093" width="0.2266%" height="15" fill="rgb(207,226,44)" fg:x="686" fg:w="5"/><text x="31.3329%" y="1103.50"></text></g><g><title>tokio::runtime::time::Driver::park_timeout (5 samples, 0.23%)</title><rect x="31.0829%" y="1077" width="0.2266%" height="15" fill="rgb(208,126,0)" fg:x="686" fg:w="5"/><text x="31.3329%" y="1087.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (5 samples, 0.23%)</title><rect x="31.0829%" y="1061" width="0.2266%" height="15" fill="rgb(244,66,21)" fg:x="686" fg:w="5"/><text x="31.3329%" y="1071.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (4 samples, 0.18%)</title><rect x="31.1282%" y="1045" width="0.1812%" height="15" fill="rgb(222,97,12)" fg:x="687" fg:w="4"/><text x="31.3782%" y="1055.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (4 samples, 0.18%)</title><rect x="31.1282%" y="1029" width="0.1812%" height="15" fill="rgb(219,213,19)" fg:x="687" fg:w="4"/><text x="31.3782%" y="1039.50"></text></g><g><title>epoll_wait (4 samples, 0.18%)</title><rect x="31.1282%" y="1013" width="0.1812%" height="15" fill="rgb(252,169,30)" fg:x="687" fg:w="4"/><text x="31.3782%" y="1023.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="31.1735%" y="997" width="0.1359%" height="15" fill="rgb(206,32,51)" fg:x="688" fg:w="3"/><text x="31.4235%" y="1007.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="31.1735%" y="981" width="0.1359%" height="15" fill="rgb(250,172,42)" fg:x="688" fg:w="3"/><text x="31.4235%" y="991.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="31.1735%" y="965" width="0.1359%" height="15" fill="rgb(209,34,43)" fg:x="688" fg:w="3"/><text x="31.4235%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="31.2188%" y="949" width="0.0906%" height="15" fill="rgb(223,11,35)" fg:x="689" fg:w="2"/><text x="31.4688%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="31.2642%" y="933" width="0.0453%" height="15" fill="rgb(251,219,26)" fg:x="690" fg:w="1"/><text x="31.5142%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.09%)</title><rect x="31.4454%" y="1141" width="0.0906%" height="15" fill="rgb(231,119,3)" fg:x="694" fg:w="2"/><text x="31.6954%" y="1151.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2 samples, 0.09%)</title><rect x="31.4454%" y="1125" width="0.0906%" height="15" fill="rgb(216,97,11)" fg:x="694" fg:w="2"/><text x="31.6954%" y="1135.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.09%)</title><rect x="31.4454%" y="1109" width="0.0906%" height="15" fill="rgb(223,59,9)" fg:x="694" fg:w="2"/><text x="31.6954%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.05%)</title><rect x="31.5813%" y="1125" width="0.0453%" height="15" fill="rgb(233,93,31)" fg:x="697" fg:w="1"/><text x="31.8313%" y="1135.50"></text></g><g><title>core::mem::replace (1 samples, 0.05%)</title><rect x="31.5813%" y="1109" width="0.0453%" height="15" fill="rgb(239,81,33)" fg:x="697" fg:w="1"/><text x="31.8313%" y="1119.50"></text></g><g><title>core::ptr::write (1 samples, 0.05%)</title><rect x="31.5813%" y="1093" width="0.0453%" height="15" fill="rgb(213,120,34)" fg:x="697" fg:w="1"/><text x="31.8313%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (113 samples, 5.12%)</title><rect x="31.8079%" y="1093" width="5.1201%" height="15" fill="rgb(243,49,53)" fg:x="702" fg:w="113"/><text x="32.0579%" y="1103.50">tokio:..</text></g><g><title>std::sync::condvar::Condvar::wait (111 samples, 5.03%)</title><rect x="31.8985%" y="1077" width="5.0295%" height="15" fill="rgb(247,216,33)" fg:x="704" fg:w="111"/><text x="32.1485%" y="1087.50">std::s..</text></g><g><title>std::sys::pal::unix::locks::futex_condvar::Condvar::wait (111 samples, 5.03%)</title><rect x="31.8985%" y="1061" width="5.0295%" height="15" fill="rgb(226,26,14)" fg:x="704" fg:w="111"/><text x="32.1485%" y="1071.50">std::s..</text></g><g><title>std::sys::pal::unix::locks::futex_condvar::Condvar::wait_optional_timeout (111 samples, 5.03%)</title><rect x="31.8985%" y="1045" width="5.0295%" height="15" fill="rgb(215,49,53)" fg:x="704" fg:w="111"/><text x="32.1485%" y="1055.50">std::s..</text></g><g><title>std::sys::pal::unix::futex::futex_wait (111 samples, 5.03%)</title><rect x="31.8985%" y="1029" width="5.0295%" height="15" fill="rgb(245,162,40)" fg:x="704" fg:w="111"/><text x="32.1485%" y="1039.50">std::s..</text></g><g><title>syscall (111 samples, 5.03%)</title><rect x="31.8985%" y="1013" width="5.0295%" height="15" fill="rgb(229,68,17)" fg:x="704" fg:w="111"/><text x="32.1485%" y="1023.50">syscall</text></g><g><title>[unknown] (110 samples, 4.98%)</title><rect x="31.9438%" y="997" width="4.9841%" height="15" fill="rgb(213,182,10)" fg:x="705" fg:w="110"/><text x="32.1938%" y="1007.50">[unkno..</text></g><g><title>[unknown] (110 samples, 4.98%)</title><rect x="31.9438%" y="981" width="4.9841%" height="15" fill="rgb(245,125,30)" fg:x="705" fg:w="110"/><text x="32.1938%" y="991.50">[unkno..</text></g><g><title>[unknown] (104 samples, 4.71%)</title><rect x="32.2157%" y="965" width="4.7123%" height="15" fill="rgb(232,202,2)" fg:x="711" fg:w="104"/><text x="32.4657%" y="975.50">[unkn..</text></g><g><title>[unknown] (102 samples, 4.62%)</title><rect x="32.3063%" y="949" width="4.6217%" height="15" fill="rgb(237,140,51)" fg:x="713" fg:w="102"/><text x="32.5563%" y="959.50">[unkn..</text></g><g><title>[unknown] (95 samples, 4.30%)</title><rect x="32.6235%" y="933" width="4.3045%" height="15" fill="rgb(236,157,25)" fg:x="720" fg:w="95"/><text x="32.8735%" y="943.50">[unkn..</text></g><g><title>[unknown] (83 samples, 3.76%)</title><rect x="33.1672%" y="917" width="3.7608%" height="15" fill="rgb(219,209,0)" fg:x="732" fg:w="83"/><text x="33.4172%" y="927.50">[unk..</text></g><g><title>[unknown] (60 samples, 2.72%)</title><rect x="34.2093%" y="901" width="2.7186%" height="15" fill="rgb(240,116,54)" fg:x="755" fg:w="60"/><text x="34.4593%" y="911.50">[u..</text></g><g><title>[unknown] (49 samples, 2.22%)</title><rect x="34.7077%" y="885" width="2.2202%" height="15" fill="rgb(216,10,36)" fg:x="766" fg:w="49"/><text x="34.9577%" y="895.50">[..</text></g><g><title>[unknown] (34 samples, 1.54%)</title><rect x="35.3874%" y="869" width="1.5406%" height="15" fill="rgb(222,72,44)" fg:x="781" fg:w="34"/><text x="35.6374%" y="879.50"></text></g><g><title>[unknown] (17 samples, 0.77%)</title><rect x="36.1577%" y="853" width="0.7703%" height="15" fill="rgb(232,159,9)" fg:x="798" fg:w="17"/><text x="36.4077%" y="863.50"></text></g><g><title>[unknown] (10 samples, 0.45%)</title><rect x="36.4749%" y="837" width="0.4531%" height="15" fill="rgb(210,39,32)" fg:x="805" fg:w="10"/><text x="36.7249%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="36.7920%" y="821" width="0.1359%" height="15" fill="rgb(216,194,45)" fg:x="812" fg:w="3"/><text x="37.0420%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (1 samples, 0.05%)</title><rect x="37.0639%" y="1013" width="0.0453%" height="15" fill="rgb(218,18,35)" fg:x="818" fg:w="1"/><text x="37.3139%" y="1023.50"></text></g><g><title>tokio::runtime::time::Inner::lock (1 samples, 0.05%)</title><rect x="37.1092%" y="1013" width="0.0453%" height="15" fill="rgb(207,83,51)" fg:x="819" fg:w="1"/><text x="37.3592%" y="1023.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.05%)</title><rect x="37.1092%" y="997" width="0.0453%" height="15" fill="rgb(225,63,43)" fg:x="819" fg:w="1"/><text x="37.3592%" y="1007.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.05%)</title><rect x="37.1092%" y="981" width="0.0453%" height="15" fill="rgb(207,57,36)" fg:x="819" fg:w="1"/><text x="37.3592%" y="991.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.05%)</title><rect x="37.1092%" y="965" width="0.0453%" height="15" fill="rgb(216,99,33)" fg:x="819" fg:w="1"/><text x="37.3592%" y="975.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (7 samples, 0.32%)</title><rect x="37.0639%" y="1029" width="0.3172%" height="15" fill="rgb(225,42,16)" fg:x="818" fg:w="7"/><text x="37.3139%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (5 samples, 0.23%)</title><rect x="37.1545%" y="1013" width="0.2266%" height="15" fill="rgb(220,201,45)" fg:x="820" fg:w="5"/><text x="37.4045%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (3 samples, 0.14%)</title><rect x="37.2451%" y="997" width="0.1359%" height="15" fill="rgb(225,33,4)" fg:x="822" fg:w="3"/><text x="37.4951%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (3 samples, 0.14%)</title><rect x="37.2451%" y="981" width="0.1359%" height="15" fill="rgb(224,33,50)" fg:x="822" fg:w="3"/><text x="37.4951%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (3 samples, 0.14%)</title><rect x="37.2451%" y="965" width="0.1359%" height="15" fill="rgb(246,198,51)" fg:x="822" fg:w="3"/><text x="37.4951%" y="975.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (14 samples, 0.63%)</title><rect x="37.3811%" y="997" width="0.6343%" height="15" fill="rgb(205,22,4)" fg:x="825" fg:w="14"/><text x="37.6311%" y="1007.50"></text></g><g><title>epoll_wait (14 samples, 0.63%)</title><rect x="37.3811%" y="981" width="0.6343%" height="15" fill="rgb(206,3,8)" fg:x="825" fg:w="14"/><text x="37.6311%" y="991.50"></text></g><g><title>[unknown] (14 samples, 0.63%)</title><rect x="37.3811%" y="965" width="0.6343%" height="15" fill="rgb(251,23,15)" fg:x="825" fg:w="14"/><text x="37.6311%" y="975.50"></text></g><g><title>[unknown] (13 samples, 0.59%)</title><rect x="37.4264%" y="949" width="0.5890%" height="15" fill="rgb(252,88,28)" fg:x="826" fg:w="13"/><text x="37.6764%" y="959.50"></text></g><g><title>[unknown] (13 samples, 0.59%)</title><rect x="37.4264%" y="933" width="0.5890%" height="15" fill="rgb(212,127,14)" fg:x="826" fg:w="13"/><text x="37.6764%" y="943.50"></text></g><g><title>[unknown] (13 samples, 0.59%)</title><rect x="37.4264%" y="917" width="0.5890%" height="15" fill="rgb(247,145,37)" fg:x="826" fg:w="13"/><text x="37.6764%" y="927.50"></text></g><g><title>[unknown] (9 samples, 0.41%)</title><rect x="37.6076%" y="901" width="0.4078%" height="15" fill="rgb(209,117,53)" fg:x="830" fg:w="9"/><text x="37.8576%" y="911.50"></text></g><g><title>[unknown] (5 samples, 0.23%)</title><rect x="37.7889%" y="885" width="0.2266%" height="15" fill="rgb(212,90,42)" fg:x="834" fg:w="5"/><text x="38.0389%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="37.8795%" y="869" width="0.1359%" height="15" fill="rgb(218,164,37)" fg:x="836" fg:w="3"/><text x="38.1295%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="37.9248%" y="853" width="0.0906%" height="15" fill="rgb(246,65,34)" fg:x="837" fg:w="2"/><text x="38.1748%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="37.9701%" y="837" width="0.0453%" height="15" fill="rgb(231,100,33)" fg:x="838" fg:w="1"/><text x="38.2201%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="37.9701%" y="821" width="0.0453%" height="15" fill="rgb(228,126,14)" fg:x="838" fg:w="1"/><text x="38.2201%" y="831.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (1 samples, 0.05%)</title><rect x="38.0154%" y="869" width="0.0453%" height="15" fill="rgb(215,173,21)" fg:x="839" fg:w="1"/><text x="38.2654%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (1 samples, 0.05%)</title><rect x="38.0154%" y="853" width="0.0453%" height="15" fill="rgb(210,6,40)" fg:x="839" fg:w="1"/><text x="38.2654%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (1 samples, 0.05%)</title><rect x="38.0154%" y="837" width="0.0453%" height="15" fill="rgb(212,48,18)" fg:x="839" fg:w="1"/><text x="38.2654%" y="847.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (1 samples, 0.05%)</title><rect x="38.0154%" y="821" width="0.0453%" height="15" fill="rgb(230,214,11)" fg:x="839" fg:w="1"/><text x="38.2654%" y="831.50"></text></g><g><title>tokio::runtime::context::with_scheduler (1 samples, 0.05%)</title><rect x="38.0154%" y="805" width="0.0453%" height="15" fill="rgb(254,105,39)" fg:x="839" fg:w="1"/><text x="38.2654%" y="815.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (16 samples, 0.72%)</title><rect x="37.3811%" y="1013" width="0.7250%" height="15" fill="rgb(245,158,5)" fg:x="825" fg:w="16"/><text x="37.6311%" y="1023.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (2 samples, 0.09%)</title><rect x="38.0154%" y="997" width="0.0906%" height="15" fill="rgb(249,208,11)" fg:x="839" fg:w="2"/><text x="38.2654%" y="1007.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (2 samples, 0.09%)</title><rect x="38.0154%" y="981" width="0.0906%" height="15" fill="rgb(210,39,28)" fg:x="839" fg:w="2"/><text x="38.2654%" y="991.50"></text></g><g><title>core::task::wake::Waker::wake (2 samples, 0.09%)</title><rect x="38.0154%" y="965" width="0.0906%" height="15" fill="rgb(211,56,53)" fg:x="839" fg:w="2"/><text x="38.2654%" y="975.50"></text></g><g><title>futures_task::waker::wake_arc_raw (2 samples, 0.09%)</title><rect x="38.0154%" y="949" width="0.0906%" height="15" fill="rgb(226,201,30)" fg:x="839" fg:w="2"/><text x="38.2654%" y="959.50"></text></g><g><title>futures_task::arc_wake::ArcWake::wake (2 samples, 0.09%)</title><rect x="38.0154%" y="933" width="0.0906%" height="15" fill="rgb(239,101,34)" fg:x="839" fg:w="2"/><text x="38.2654%" y="943.50"></text></g><g><title>&lt;tokio_tungstenite::compat::WakerProxy as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (2 samples, 0.09%)</title><rect x="38.0154%" y="917" width="0.0906%" height="15" fill="rgb(226,209,5)" fg:x="839" fg:w="2"/><text x="38.2654%" y="927.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (2 samples, 0.09%)</title><rect x="38.0154%" y="901" width="0.0906%" height="15" fill="rgb(250,105,47)" fg:x="839" fg:w="2"/><text x="38.2654%" y="911.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (2 samples, 0.09%)</title><rect x="38.0154%" y="885" width="0.0906%" height="15" fill="rgb(230,72,3)" fg:x="839" fg:w="2"/><text x="38.2654%" y="895.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (1 samples, 0.05%)</title><rect x="38.0607%" y="869" width="0.0453%" height="15" fill="rgb(232,218,39)" fg:x="840" fg:w="1"/><text x="38.3107%" y="879.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1 samples, 0.05%)</title><rect x="38.0607%" y="853" width="0.0453%" height="15" fill="rgb(248,166,6)" fg:x="840" fg:w="1"/><text x="38.3107%" y="863.50"></text></g><g><title>tokio::runtime::task::state::State::load (1 samples, 0.05%)</title><rect x="38.0607%" y="837" width="0.0453%" height="15" fill="rgb(247,89,20)" fg:x="840" fg:w="1"/><text x="38.3107%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.05%)</title><rect x="38.0607%" y="821" width="0.0453%" height="15" fill="rgb(248,130,54)" fg:x="840" fg:w="1"/><text x="38.3107%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.05%)</title><rect x="38.0607%" y="805" width="0.0453%" height="15" fill="rgb(234,196,4)" fg:x="840" fg:w="1"/><text x="38.3107%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="38.2873%" y="917" width="0.0453%" height="15" fill="rgb(250,143,31)" fg:x="845" fg:w="1"/><text x="38.5373%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="38.2873%" y="901" width="0.0453%" height="15" fill="rgb(211,110,34)" fg:x="845" fg:w="1"/><text x="38.5373%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="38.2873%" y="885" width="0.0453%" height="15" fill="rgb(215,124,48)" fg:x="845" fg:w="1"/><text x="38.5373%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="38.2873%" y="869" width="0.0453%" height="15" fill="rgb(216,46,13)" fg:x="845" fg:w="1"/><text x="38.5373%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="38.2873%" y="853" width="0.0453%" height="15" fill="rgb(205,184,25)" fg:x="845" fg:w="1"/><text x="38.5373%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="38.2873%" y="837" width="0.0453%" height="15" fill="rgb(228,1,10)" fg:x="845" fg:w="1"/><text x="38.5373%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="38.2873%" y="821" width="0.0453%" height="15" fill="rgb(213,116,27)" fg:x="845" fg:w="1"/><text x="38.5373%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="38.2873%" y="805" width="0.0453%" height="15" fill="rgb(241,95,50)" fg:x="845" fg:w="1"/><text x="38.5373%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="38.2873%" y="789" width="0.0453%" height="15" fill="rgb(238,48,32)" fg:x="845" fg:w="1"/><text x="38.5373%" y="799.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (6 samples, 0.27%)</title><rect x="38.1060%" y="1013" width="0.2719%" height="15" fill="rgb(235,113,49)" fg:x="841" fg:w="6"/><text x="38.3560%" y="1023.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (6 samples, 0.27%)</title><rect x="38.1060%" y="997" width="0.2719%" height="15" fill="rgb(205,127,43)" fg:x="841" fg:w="6"/><text x="38.3560%" y="1007.50"></text></g><g><title>tokio::time::clock::Clock::now (5 samples, 0.23%)</title><rect x="38.1513%" y="981" width="0.2266%" height="15" fill="rgb(250,162,2)" fg:x="842" fg:w="5"/><text x="38.4013%" y="991.50"></text></g><g><title>tokio::time::clock::now (5 samples, 0.23%)</title><rect x="38.1513%" y="965" width="0.2266%" height="15" fill="rgb(220,13,41)" fg:x="842" fg:w="5"/><text x="38.4013%" y="975.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (5 samples, 0.23%)</title><rect x="38.1513%" y="949" width="0.2266%" height="15" fill="rgb(249,221,25)" fg:x="842" fg:w="5"/><text x="38.4013%" y="959.50"></text></g><g><title>clock_gettime (4 samples, 0.18%)</title><rect x="38.1966%" y="933" width="0.1812%" height="15" fill="rgb(215,208,19)" fg:x="843" fg:w="4"/><text x="38.4466%" y="943.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.05%)</title><rect x="38.3326%" y="917" width="0.0453%" height="15" fill="rgb(236,175,2)" fg:x="846" fg:w="1"/><text x="38.5826%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (153 samples, 6.93%)</title><rect x="31.6266%" y="1125" width="6.9325%" height="15" fill="rgb(241,52,2)" fg:x="698" fg:w="153"/><text x="31.8766%" y="1135.50">tokio::ru..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (153 samples, 6.93%)</title><rect x="31.6266%" y="1109" width="6.9325%" height="15" fill="rgb(248,140,14)" fg:x="698" fg:w="153"/><text x="31.8766%" y="1119.50">tokio::ru..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (36 samples, 1.63%)</title><rect x="36.9280%" y="1093" width="1.6312%" height="15" fill="rgb(253,22,42)" fg:x="815" fg:w="36"/><text x="37.1780%" y="1103.50"></text></g><g><title>tokio::runtime::driver::Driver::park (33 samples, 1.50%)</title><rect x="37.0639%" y="1077" width="1.4952%" height="15" fill="rgb(234,61,47)" fg:x="818" fg:w="33"/><text x="37.3139%" y="1087.50"></text></g><g><title>tokio::runtime::driver::TimeDriver::park (33 samples, 1.50%)</title><rect x="37.0639%" y="1061" width="1.4952%" height="15" fill="rgb(208,226,15)" fg:x="818" fg:w="33"/><text x="37.3139%" y="1071.50"></text></g><g><title>tokio::runtime::time::Driver::park (33 samples, 1.50%)</title><rect x="37.0639%" y="1045" width="1.4952%" height="15" fill="rgb(217,221,4)" fg:x="818" fg:w="33"/><text x="37.3139%" y="1055.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (26 samples, 1.18%)</title><rect x="37.3811%" y="1029" width="1.1781%" height="15" fill="rgb(212,174,34)" fg:x="825" fg:w="26"/><text x="37.6311%" y="1039.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (4 samples, 0.18%)</title><rect x="38.3779%" y="1013" width="0.1812%" height="15" fill="rgb(253,83,4)" fg:x="847" fg:w="4"/><text x="38.6279%" y="1023.50"></text></g><g><title>tokio::time::clock::Clock::now (4 samples, 0.18%)</title><rect x="38.3779%" y="997" width="0.1812%" height="15" fill="rgb(250,195,49)" fg:x="847" fg:w="4"/><text x="38.6279%" y="1007.50"></text></g><g><title>tokio::time::clock::now (4 samples, 0.18%)</title><rect x="38.3779%" y="981" width="0.1812%" height="15" fill="rgb(241,192,25)" fg:x="847" fg:w="4"/><text x="38.6279%" y="991.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (4 samples, 0.18%)</title><rect x="38.3779%" y="965" width="0.1812%" height="15" fill="rgb(208,124,10)" fg:x="847" fg:w="4"/><text x="38.6279%" y="975.50"></text></g><g><title>clock_gettime (4 samples, 0.18%)</title><rect x="38.3779%" y="949" width="0.1812%" height="15" fill="rgb(222,33,0)" fg:x="847" fg:w="4"/><text x="38.6279%" y="959.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.14%)</title><rect x="38.4232%" y="933" width="0.1359%" height="15" fill="rgb(234,209,28)" fg:x="848" fg:w="3"/><text x="38.6732%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (156 samples, 7.07%)</title><rect x="31.5360%" y="1141" width="7.0684%" height="15" fill="rgb(224,11,23)" fg:x="696" fg:w="156"/><text x="31.7860%" y="1151.50">tokio::ru..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::should_notify_others (1 samples, 0.05%)</title><rect x="38.5591%" y="1125" width="0.0453%" height="15" fill="rgb(232,99,1)" fg:x="851" fg:w="1"/><text x="38.8091%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (2 samples, 0.09%)</title><rect x="38.7404%" y="1125" width="0.0906%" height="15" fill="rgb(237,95,45)" fg:x="855" fg:w="2"/><text x="38.9904%" y="1135.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="38.7404%" y="1109" width="0.0906%" height="15" fill="rgb(208,109,11)" fg:x="855" fg:w="2"/><text x="38.9904%" y="1119.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::unlock (2 samples, 0.09%)</title><rect x="38.7404%" y="1093" width="0.0906%" height="15" fill="rgb(216,190,48)" fg:x="855" fg:w="2"/><text x="38.9904%" y="1103.50"></text></g><g><title>syscall (1 samples, 0.05%)</title><rect x="38.7857%" y="1077" width="0.0453%" height="15" fill="rgb(251,171,36)" fg:x="856" fg:w="1"/><text x="39.0357%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="38.7857%" y="1061" width="0.0453%" height="15" fill="rgb(230,62,22)" fg:x="856" fg:w="1"/><text x="39.0357%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="38.7857%" y="1045" width="0.0453%" height="15" fill="rgb(225,114,35)" fg:x="856" fg:w="1"/><text x="39.0357%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="38.7857%" y="1029" width="0.0453%" height="15" fill="rgb(215,118,42)" fg:x="856" fg:w="1"/><text x="39.0357%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="38.7857%" y="1013" width="0.0453%" height="15" fill="rgb(243,119,21)" fg:x="856" fg:w="1"/><text x="39.0357%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="38.7857%" y="997" width="0.0453%" height="15" fill="rgb(252,177,53)" fg:x="856" fg:w="1"/><text x="39.0357%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (9 samples, 0.41%)</title><rect x="38.6044%" y="1141" width="0.4078%" height="15" fill="rgb(237,209,29)" fg:x="852" fg:w="9"/><text x="38.8544%" y="1151.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.18%)</title><rect x="38.8310%" y="1125" width="0.1812%" height="15" fill="rgb(212,65,23)" fg:x="857" fg:w="4"/><text x="39.0810%" y="1135.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.18%)</title><rect x="38.8310%" y="1109" width="0.1812%" height="15" fill="rgb(230,222,46)" fg:x="857" fg:w="4"/><text x="39.0810%" y="1119.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (4 samples, 0.18%)</title><rect x="38.8310%" y="1093" width="0.1812%" height="15" fill="rgb(215,135,32)" fg:x="857" fg:w="4"/><text x="39.0810%" y="1103.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (3 samples, 0.14%)</title><rect x="38.8763%" y="1077" width="0.1359%" height="15" fill="rgb(246,101,22)" fg:x="858" fg:w="3"/><text x="39.1263%" y="1087.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::spin (3 samples, 0.14%)</title><rect x="38.8763%" y="1061" width="0.1359%" height="15" fill="rgb(206,107,13)" fg:x="858" fg:w="3"/><text x="39.1263%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (3 samples, 0.14%)</title><rect x="39.0122%" y="1109" width="0.1359%" height="15" fill="rgb(250,100,44)" fg:x="861" fg:w="3"/><text x="39.2622%" y="1119.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.14%)</title><rect x="39.0122%" y="1093" width="0.1359%" height="15" fill="rgb(231,147,38)" fg:x="861" fg:w="3"/><text x="39.2622%" y="1103.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::unlock (3 samples, 0.14%)</title><rect x="39.0122%" y="1077" width="0.1359%" height="15" fill="rgb(229,8,40)" fg:x="861" fg:w="3"/><text x="39.2622%" y="1087.50"></text></g><g><title>syscall (2 samples, 0.09%)</title><rect x="39.0575%" y="1061" width="0.0906%" height="15" fill="rgb(221,135,30)" fg:x="862" fg:w="2"/><text x="39.3075%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="39.1029%" y="1045" width="0.0453%" height="15" fill="rgb(249,193,18)" fg:x="863" fg:w="1"/><text x="39.3529%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="39.1029%" y="1029" width="0.0453%" height="15" fill="rgb(209,133,39)" fg:x="863" fg:w="1"/><text x="39.3529%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="39.1029%" y="1013" width="0.0453%" height="15" fill="rgb(232,100,14)" fg:x="863" fg:w="1"/><text x="39.3529%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="39.1029%" y="997" width="0.0453%" height="15" fill="rgb(224,185,1)" fg:x="863" fg:w="1"/><text x="39.3529%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (3 samples, 0.14%)</title><rect x="39.1482%" y="1109" width="0.1359%" height="15" fill="rgb(223,139,8)" fg:x="864" fg:w="3"/><text x="39.3982%" y="1119.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (3 samples, 0.14%)</title><rect x="39.1482%" y="1093" width="0.1359%" height="15" fill="rgb(232,213,38)" fg:x="864" fg:w="3"/><text x="39.3982%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (3 samples, 0.14%)</title><rect x="39.1482%" y="1077" width="0.1359%" height="15" fill="rgb(207,94,22)" fg:x="864" fg:w="3"/><text x="39.3982%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="39.1935%" y="1061" width="0.0906%" height="15" fill="rgb(219,183,54)" fg:x="865" fg:w="2"/><text x="39.4435%" y="1071.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.09%)</title><rect x="39.1935%" y="1045" width="0.0906%" height="15" fill="rgb(216,185,54)" fg:x="865" fg:w="2"/><text x="39.4435%" y="1055.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (2 samples, 0.09%)</title><rect x="39.2841%" y="1077" width="0.0906%" height="15" fill="rgb(254,217,39)" fg:x="867" fg:w="2"/><text x="39.5341%" y="1087.50"></text></g><g><title>std::sync::poison::Flag::guard (2 samples, 0.09%)</title><rect x="39.2841%" y="1061" width="0.0906%" height="15" fill="rgb(240,178,23)" fg:x="867" fg:w="2"/><text x="39.5341%" y="1071.50"></text></g><g><title>std::thread::panicking (2 samples, 0.09%)</title><rect x="39.2841%" y="1045" width="0.0906%" height="15" fill="rgb(218,11,47)" fg:x="867" fg:w="2"/><text x="39.5341%" y="1055.50"></text></g><g><title>std::panicking::panicking (2 samples, 0.09%)</title><rect x="39.2841%" y="1029" width="0.0906%" height="15" fill="rgb(218,51,51)" fg:x="867" fg:w="2"/><text x="39.5341%" y="1039.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (2 samples, 0.09%)</title><rect x="39.2841%" y="1013" width="0.0906%" height="15" fill="rgb(238,126,27)" fg:x="867" fg:w="2"/><text x="39.5341%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.09%)</title><rect x="39.2841%" y="997" width="0.0906%" height="15" fill="rgb(249,202,22)" fg:x="867" fg:w="2"/><text x="39.5341%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.09%)</title><rect x="39.2841%" y="981" width="0.0906%" height="15" fill="rgb(254,195,49)" fg:x="867" fg:w="2"/><text x="39.5341%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (9 samples, 0.41%)</title><rect x="39.0122%" y="1141" width="0.4078%" height="15" fill="rgb(208,123,14)" fg:x="861" fg:w="9"/><text x="39.2622%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (9 samples, 0.41%)</title><rect x="39.0122%" y="1125" width="0.4078%" height="15" fill="rgb(224,200,8)" fg:x="861" fg:w="9"/><text x="39.2622%" y="1135.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.14%)</title><rect x="39.2841%" y="1109" width="0.1359%" height="15" fill="rgb(217,61,36)" fg:x="867" fg:w="3"/><text x="39.5341%" y="1119.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.14%)</title><rect x="39.2841%" y="1093" width="0.1359%" height="15" fill="rgb(206,35,45)" fg:x="867" fg:w="3"/><text x="39.5341%" y="1103.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.05%)</title><rect x="39.3747%" y="1077" width="0.0453%" height="15" fill="rgb(217,65,33)" fg:x="869" fg:w="1"/><text x="39.6247%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.05%)</title><rect x="39.5106%" y="1109" width="0.0453%" height="15" fill="rgb(222,158,48)" fg:x="872" fg:w="1"/><text x="39.7606%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (2 samples, 0.09%)</title><rect x="39.5560%" y="1109" width="0.0906%" height="15" fill="rgb(254,2,54)" fg:x="873" fg:w="2"/><text x="39.8060%" y="1119.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="39.5560%" y="1093" width="0.0906%" height="15" fill="rgb(250,143,38)" fg:x="873" fg:w="2"/><text x="39.8060%" y="1103.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::unlock (2 samples, 0.09%)</title><rect x="39.5560%" y="1077" width="0.0906%" height="15" fill="rgb(248,25,0)" fg:x="873" fg:w="2"/><text x="39.8060%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (6 samples, 0.27%)</title><rect x="39.4653%" y="1125" width="0.2719%" height="15" fill="rgb(206,152,27)" fg:x="871" fg:w="6"/><text x="39.7153%" y="1135.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.09%)</title><rect x="39.6466%" y="1109" width="0.0906%" height="15" fill="rgb(240,77,30)" fg:x="875" fg:w="2"/><text x="39.8966%" y="1119.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.09%)</title><rect x="39.6466%" y="1093" width="0.0906%" height="15" fill="rgb(231,5,3)" fg:x="875" fg:w="2"/><text x="39.8966%" y="1103.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (2 samples, 0.09%)</title><rect x="39.6466%" y="1077" width="0.0906%" height="15" fill="rgb(207,226,32)" fg:x="875" fg:w="2"/><text x="39.8966%" y="1087.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (1 samples, 0.05%)</title><rect x="39.6919%" y="1061" width="0.0453%" height="15" fill="rgb(222,207,47)" fg:x="876" fg:w="1"/><text x="39.9419%" y="1071.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::spin (1 samples, 0.05%)</title><rect x="39.6919%" y="1045" width="0.0453%" height="15" fill="rgb(229,115,45)" fg:x="876" fg:w="1"/><text x="39.9419%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::is_empty (1 samples, 0.05%)</title><rect x="39.7372%" y="1109" width="0.0453%" height="15" fill="rgb(224,191,6)" fg:x="877" fg:w="1"/><text x="39.9872%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::is_empty (1 samples, 0.05%)</title><rect x="39.7372%" y="1093" width="0.0453%" height="15" fill="rgb(230,227,24)" fg:x="877" fg:w="1"/><text x="39.9872%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (1 samples, 0.05%)</title><rect x="39.7372%" y="1077" width="0.0453%" height="15" fill="rgb(228,80,19)" fg:x="877" fg:w="1"/><text x="39.9872%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.05%)</title><rect x="39.7372%" y="1061" width="0.0453%" height="15" fill="rgb(247,229,0)" fg:x="877" fg:w="1"/><text x="39.9872%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.05%)</title><rect x="39.7372%" y="1045" width="0.0453%" height="15" fill="rgb(237,194,15)" fg:x="877" fg:w="1"/><text x="39.9872%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.05%)</title><rect x="39.7825%" y="1077" width="0.0453%" height="15" fill="rgb(219,203,20)" fg:x="878" fg:w="1"/><text x="40.0325%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (5 samples, 0.23%)</title><rect x="39.7372%" y="1125" width="0.2266%" height="15" fill="rgb(234,128,8)" fg:x="877" fg:w="5"/><text x="39.9872%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (4 samples, 0.18%)</title><rect x="39.7825%" y="1109" width="0.1812%" height="15" fill="rgb(248,202,8)" fg:x="878" fg:w="4"/><text x="40.0325%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (4 samples, 0.18%)</title><rect x="39.7825%" y="1093" width="0.1812%" height="15" fill="rgb(206,104,37)" fg:x="878" fg:w="4"/><text x="40.0325%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (3 samples, 0.14%)</title><rect x="39.8278%" y="1077" width="0.1359%" height="15" fill="rgb(223,8,27)" fg:x="879" fg:w="3"/><text x="40.0778%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (193 samples, 8.74%)</title><rect x="31.3095%" y="1157" width="8.7449%" height="15" fill="rgb(216,217,28)" fg:x="691" fg:w="193"/><text x="31.5595%" y="1167.50">tokio::runti..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (14 samples, 0.63%)</title><rect x="39.4200%" y="1141" width="0.6343%" height="15" fill="rgb(249,199,1)" fg:x="870" fg:w="14"/><text x="39.6700%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::has_tasks (2 samples, 0.09%)</title><rect x="39.9638%" y="1125" width="0.0906%" height="15" fill="rgb(240,85,17)" fg:x="882" fg:w="2"/><text x="40.2138%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.09%)</title><rect x="39.9638%" y="1109" width="0.0906%" height="15" fill="rgb(206,108,45)" fg:x="882" fg:w="2"/><text x="40.2138%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="40.0091%" y="1093" width="0.0453%" height="15" fill="rgb(245,210,41)" fg:x="883" fg:w="1"/><text x="40.2591%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="40.0091%" y="1077" width="0.0453%" height="15" fill="rgb(206,13,37)" fg:x="883" fg:w="1"/><text x="40.2591%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="40.0091%" y="1061" width="0.0453%" height="15" fill="rgb(250,61,18)" fg:x="883" fg:w="1"/><text x="40.2591%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="40.0091%" y="1045" width="0.0453%" height="15" fill="rgb(235,172,48)" fg:x="883" fg:w="1"/><text x="40.2591%" y="1055.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (3 samples, 0.14%)</title><rect x="40.0544%" y="1141" width="0.1359%" height="15" fill="rgb(249,201,17)" fg:x="884" fg:w="3"/><text x="40.3044%" y="1151.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (3 samples, 0.14%)</title><rect x="40.0544%" y="1125" width="0.1359%" height="15" fill="rgb(219,208,6)" fg:x="884" fg:w="3"/><text x="40.3044%" y="1135.50"></text></g><g><title>core::cell::BorrowRefMut::new (3 samples, 0.14%)</title><rect x="40.0544%" y="1109" width="0.1359%" height="15" fill="rgb(248,31,23)" fg:x="884" fg:w="3"/><text x="40.3044%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tokio::runtime::coop::with_budget::ResetGuard,std::thread::local::AccessError&gt;&gt; (1 samples, 0.05%)</title><rect x="40.1903%" y="1109" width="0.0453%" height="15" fill="rgb(245,15,42)" fg:x="887" fg:w="1"/><text x="40.4403%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::with_budget::ResetGuard&gt; (1 samples, 0.05%)</title><rect x="40.1903%" y="1093" width="0.0453%" height="15" fill="rgb(222,217,39)" fg:x="887" fg:w="1"/><text x="40.4403%" y="1103.50"></text></g><g><title>&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="40.1903%" y="1077" width="0.0453%" height="15" fill="rgb(210,219,27)" fg:x="887" fg:w="1"/><text x="40.4403%" y="1087.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.05%)</title><rect x="40.1903%" y="1061" width="0.0453%" height="15" fill="rgb(252,166,36)" fg:x="887" fg:w="1"/><text x="40.4403%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.05%)</title><rect x="40.1903%" y="1045" width="0.0453%" height="15" fill="rgb(245,132,34)" fg:x="887" fg:w="1"/><text x="40.4403%" y="1055.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.05%)</title><rect x="40.1903%" y="1029" width="0.0453%" height="15" fill="rgb(236,54,3)" fg:x="887" fg:w="1"/><text x="40.4403%" y="1039.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.05%)</title><rect x="40.1903%" y="1013" width="0.0453%" height="15" fill="rgb(241,173,43)" fg:x="887" fg:w="1"/><text x="40.4403%" y="1023.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.09%)</title><rect x="40.2356%" y="1093" width="0.0906%" height="15" fill="rgb(215,190,9)" fg:x="888" fg:w="2"/><text x="40.4856%" y="1103.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.09%)</title><rect x="40.2356%" y="1077" width="0.0906%" height="15" fill="rgb(242,101,16)" fg:x="888" fg:w="2"/><text x="40.4856%" y="1087.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.09%)</title><rect x="40.2356%" y="1061" width="0.0906%" height="15" fill="rgb(223,190,21)" fg:x="888" fg:w="2"/><text x="40.4856%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.05%)</title><rect x="40.3262%" y="1093" width="0.0453%" height="15" fill="rgb(215,228,25)" fg:x="890" fg:w="1"/><text x="40.5762%" y="1103.50"></text></g><g><title>core::mem::replace (1 samples, 0.05%)</title><rect x="40.3262%" y="1077" width="0.0453%" height="15" fill="rgb(225,36,22)" fg:x="890" fg:w="1"/><text x="40.5762%" y="1087.50"></text></g><g><title>core::ptr::write (1 samples, 0.05%)</title><rect x="40.3262%" y="1061" width="0.0453%" height="15" fill="rgb(251,106,46)" fg:x="890" fg:w="1"/><text x="40.5762%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::multi_thread::worker::Core&gt;&gt;&gt;&gt; (3 samples, 0.14%)</title><rect x="40.3715%" y="1093" width="0.1359%" height="15" fill="rgb(208,90,1)" fg:x="891" fg:w="3"/><text x="40.6215%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (3 samples, 0.14%)</title><rect x="40.3715%" y="1077" width="0.1359%" height="15" fill="rgb(243,10,4)" fg:x="891" fg:w="3"/><text x="40.6215%" y="1087.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (3 samples, 0.14%)</title><rect x="40.3715%" y="1061" width="0.1359%" height="15" fill="rgb(212,137,27)" fg:x="891" fg:w="3"/><text x="40.6215%" y="1071.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.14%)</title><rect x="40.3715%" y="1045" width="0.1359%" height="15" fill="rgb(231,220,49)" fg:x="891" fg:w="3"/><text x="40.6215%" y="1055.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.14%)</title><rect x="40.3715%" y="1029" width="0.1359%" height="15" fill="rgb(237,96,20)" fg:x="891" fg:w="3"/><text x="40.6215%" y="1039.50"></text></g><g><title>core::mem::replace (3 samples, 0.14%)</title><rect x="40.3715%" y="1013" width="0.1359%" height="15" fill="rgb(239,229,30)" fg:x="891" fg:w="3"/><text x="40.6215%" y="1023.50"></text></g><g><title>core::ptr::write (3 samples, 0.14%)</title><rect x="40.3715%" y="997" width="0.1359%" height="15" fill="rgb(219,65,33)" fg:x="891" fg:w="3"/><text x="40.6215%" y="1007.50"></text></g><g><title>syscall (1 samples, 0.05%)</title><rect x="41.0512%" y="1061" width="0.0453%" height="15" fill="rgb(243,134,7)" fg:x="906" fg:w="1"/><text x="41.3012%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.0512%" y="1045" width="0.0453%" height="15" fill="rgb(216,177,54)" fg:x="906" fg:w="1"/><text x="41.3012%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (1 samples, 0.05%)</title><rect x="41.0965%" y="1061" width="0.0453%" height="15" fill="rgb(211,160,20)" fg:x="907" fg:w="1"/><text x="41.3465%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (1 samples, 0.05%)</title><rect x="41.0965%" y="1045" width="0.0453%" height="15" fill="rgb(239,85,39)" fg:x="907" fg:w="1"/><text x="41.3465%" y="1055.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (1 samples, 0.05%)</title><rect x="41.0965%" y="1029" width="0.0453%" height="15" fill="rgb(232,125,22)" fg:x="907" fg:w="1"/><text x="41.3465%" y="1039.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (1 samples, 0.05%)</title><rect x="41.0965%" y="1013" width="0.0453%" height="15" fill="rgb(244,57,34)" fg:x="907" fg:w="1"/><text x="41.3465%" y="1023.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (1 samples, 0.05%)</title><rect x="41.0965%" y="997" width="0.0453%" height="15" fill="rgb(214,203,32)" fg:x="907" fg:w="1"/><text x="41.3465%" y="1007.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (1 samples, 0.05%)</title><rect x="41.0965%" y="981" width="0.0453%" height="15" fill="rgb(207,58,43)" fg:x="907" fg:w="1"/><text x="41.3465%" y="991.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.05%)</title><rect x="41.0965%" y="965" width="0.0453%" height="15" fill="rgb(215,193,15)" fg:x="907" fg:w="1"/><text x="41.3465%" y="975.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (1 samples, 0.05%)</title><rect x="41.0965%" y="949" width="0.0453%" height="15" fill="rgb(232,15,44)" fg:x="907" fg:w="1"/><text x="41.3465%" y="959.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1 samples, 0.05%)</title><rect x="41.0965%" y="933" width="0.0453%" height="15" fill="rgb(212,3,48)" fg:x="907" fg:w="1"/><text x="41.3465%" y="943.50"></text></g><g><title>write (1 samples, 0.05%)</title><rect x="41.0965%" y="917" width="0.0453%" height="15" fill="rgb(218,128,7)" fg:x="907" fg:w="1"/><text x="41.3465%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="41.0965%" y="901" width="0.0453%" height="15" fill="rgb(226,216,39)" fg:x="907" fg:w="1"/><text x="41.3465%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.05%)</title><rect x="41.2778%" y="901" width="0.0453%" height="15" fill="rgb(243,47,51)" fg:x="911" fg:w="1"/><text x="41.5278%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.05%)</title><rect x="41.2778%" y="885" width="0.0453%" height="15" fill="rgb(241,183,40)" fg:x="911" fg:w="1"/><text x="41.5278%" y="895.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.05%)</title><rect x="41.2778%" y="869" width="0.0453%" height="15" fill="rgb(231,217,32)" fg:x="911" fg:w="1"/><text x="41.5278%" y="879.50"></text></g><g><title>alloc::sync::Weak&lt;T,A&gt;::inner (6 samples, 0.27%)</title><rect x="41.3231%" y="885" width="0.2719%" height="15" fill="rgb(229,61,38)" fg:x="912" fg:w="6"/><text x="41.5731%" y="895.50"></text></g><g><title>alloc::rc::is_dangling (6 samples, 0.27%)</title><rect x="41.3231%" y="869" width="0.2719%" height="15" fill="rgb(225,210,5)" fg:x="912" fg:w="6"/><text x="41.5731%" y="879.50"></text></g><g><title>alloc::sync::Weak&lt;T,A&gt;::upgrade (14 samples, 0.63%)</title><rect x="41.3231%" y="901" width="0.6343%" height="15" fill="rgb(231,79,45)" fg:x="912" fg:w="14"/><text x="41.5731%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_update (8 samples, 0.36%)</title><rect x="41.5949%" y="885" width="0.3625%" height="15" fill="rgb(224,100,7)" fg:x="918" fg:w="8"/><text x="41.8449%" y="895.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4 samples, 0.18%)</title><rect x="41.7762%" y="869" width="0.1812%" height="15" fill="rgb(241,198,18)" fg:x="922" fg:w="4"/><text x="42.0262%" y="879.50"></text></g><g><title>alloc::sync::Weak&lt;T,A&gt;::upgrade::checked_increment (4 samples, 0.18%)</title><rect x="41.7762%" y="853" width="0.1812%" height="15" fill="rgb(252,97,53)" fg:x="922" fg:w="4"/><text x="42.0262%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;futures_util::future::future::Map&lt;tokio::runtime::task::join::JoinHandle&lt;core::result::Result&lt;alloc::string::String,tarpc::client::RpcError&gt;&gt;,client::main::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (4 samples, 0.18%)</title><rect x="41.9574%" y="901" width="0.1812%" height="15" fill="rgb(220,88,7)" fg:x="926" fg:w="4"/><text x="42.2074%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.18%)</title><rect x="41.9574%" y="885" width="0.1812%" height="15" fill="rgb(213,176,14)" fg:x="926" fg:w="4"/><text x="42.2074%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.05%)</title><rect x="42.0933%" y="869" width="0.0453%" height="15" fill="rgb(246,73,7)" fg:x="929" fg:w="1"/><text x="42.3433%" y="879.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.05%)</title><rect x="42.0933%" y="853" width="0.0453%" height="15" fill="rgb(245,64,36)" fg:x="929" fg:w="1"/><text x="42.3433%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.05%)</title><rect x="42.3652%" y="869" width="0.0453%" height="15" fill="rgb(245,80,10)" fg:x="935" fg:w="1"/><text x="42.6152%" y="879.50"></text></g><g><title>core::mem::replace (1 samples, 0.05%)</title><rect x="42.3652%" y="853" width="0.0453%" height="15" fill="rgb(232,107,50)" fg:x="935" fg:w="1"/><text x="42.6152%" y="863.50"></text></g><g><title>core::ptr::write (1 samples, 0.05%)</title><rect x="42.3652%" y="837" width="0.0453%" height="15" fill="rgb(253,3,0)" fg:x="935" fg:w="1"/><text x="42.6152%" y="847.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (10 samples, 0.45%)</title><rect x="42.1386%" y="901" width="0.4531%" height="15" fill="rgb(212,99,53)" fg:x="930" fg:w="10"/><text x="42.3886%" y="911.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::take (5 samples, 0.23%)</title><rect x="42.3652%" y="885" width="0.2266%" height="15" fill="rgb(249,111,54)" fg:x="935" fg:w="5"/><text x="42.6152%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (4 samples, 0.18%)</title><rect x="42.4105%" y="869" width="0.1812%" height="15" fill="rgb(249,55,30)" fg:x="936" fg:w="4"/><text x="42.6605%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_or (4 samples, 0.18%)</title><rect x="42.4105%" y="853" width="0.1812%" height="15" fill="rgb(237,47,42)" fg:x="936" fg:w="4"/><text x="42.6605%" y="863.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::enqueue (2 samples, 0.09%)</title><rect x="42.5918%" y="901" width="0.0906%" height="15" fill="rgb(211,20,18)" fg:x="940" fg:w="2"/><text x="42.8418%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (2 samples, 0.09%)</title><rect x="42.5918%" y="885" width="0.0906%" height="15" fill="rgb(231,203,46)" fg:x="940" fg:w="2"/><text x="42.8418%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_store (2 samples, 0.09%)</title><rect x="42.5918%" y="869" width="0.0906%" height="15" fill="rgb(237,142,3)" fg:x="940" fg:w="2"/><text x="42.8418%" y="879.50"></text></g><g><title>syscall (15 samples, 0.68%)</title><rect x="42.6824%" y="885" width="0.6797%" height="15" fill="rgb(241,107,1)" fg:x="942" fg:w="15"/><text x="42.9324%" y="895.50"></text></g><g><title>[unknown] (15 samples, 0.68%)</title><rect x="42.6824%" y="869" width="0.6797%" height="15" fill="rgb(229,83,13)" fg:x="942" fg:w="15"/><text x="42.9324%" y="879.50"></text></g><g><title>[unknown] (15 samples, 0.68%)</title><rect x="42.6824%" y="853" width="0.6797%" height="15" fill="rgb(241,91,40)" fg:x="942" fg:w="15"/><text x="42.9324%" y="863.50"></text></g><g><title>[unknown] (15 samples, 0.68%)</title><rect x="42.6824%" y="837" width="0.6797%" height="15" fill="rgb(225,3,45)" fg:x="942" fg:w="15"/><text x="42.9324%" y="847.50"></text></g><g><title>[unknown] (14 samples, 0.63%)</title><rect x="42.7277%" y="821" width="0.6343%" height="15" fill="rgb(244,223,14)" fg:x="943" fg:w="14"/><text x="42.9777%" y="831.50"></text></g><g><title>[unknown] (11 samples, 0.50%)</title><rect x="42.8636%" y="805" width="0.4984%" height="15" fill="rgb(224,124,37)" fg:x="946" fg:w="11"/><text x="43.1136%" y="815.50"></text></g><g><title>[unknown] (8 samples, 0.36%)</title><rect x="42.9995%" y="789" width="0.3625%" height="15" fill="rgb(251,171,30)" fg:x="949" fg:w="8"/><text x="43.2495%" y="799.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="43.1808%" y="773" width="0.1812%" height="15" fill="rgb(236,46,54)" fg:x="953" fg:w="4"/><text x="43.4308%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="43.3167%" y="757" width="0.0453%" height="15" fill="rgb(245,213,5)" fg:x="956" fg:w="1"/><text x="43.5667%" y="767.50"></text></g><g><title>futures_task::waker::wake_by_ref_arc_raw (49 samples, 2.22%)</title><rect x="41.2324%" y="933" width="2.2202%" height="15" fill="rgb(230,144,27)" fg:x="910" fg:w="49"/><text x="41.4824%" y="943.50">f..</text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (48 samples, 2.17%)</title><rect x="41.2778%" y="917" width="2.1749%" height="15" fill="rgb(220,86,6)" fg:x="911" fg:w="48"/><text x="41.5278%" y="927.50">&lt;..</text></g><g><title>tokio::runtime::park::wake (17 samples, 0.77%)</title><rect x="42.6824%" y="901" width="0.7703%" height="15" fill="rgb(240,20,13)" fg:x="942" fg:w="17"/><text x="42.9324%" y="911.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (2 samples, 0.09%)</title><rect x="43.3620%" y="885" width="0.0906%" height="15" fill="rgb(217,89,34)" fg:x="957" fg:w="2"/><text x="43.6120%" y="895.50"></text></g><g><title>std::panic::catch_unwind (54 samples, 2.45%)</title><rect x="41.1871%" y="1029" width="2.4468%" height="15" fill="rgb(229,13,5)" fg:x="909" fg:w="54"/><text x="41.4371%" y="1039.50">st..</text></g><g><title>std::panicking::try (54 samples, 2.45%)</title><rect x="41.1871%" y="1013" width="2.4468%" height="15" fill="rgb(244,67,35)" fg:x="909" fg:w="54"/><text x="41.4371%" y="1023.50">st..</text></g><g><title>std::panicking::try::do_call (54 samples, 2.45%)</title><rect x="41.1871%" y="997" width="2.4468%" height="15" fill="rgb(221,40,2)" fg:x="909" fg:w="54"/><text x="41.4371%" y="1007.50">st..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (54 samples, 2.45%)</title><rect x="41.1871%" y="981" width="2.4468%" height="15" fill="rgb(237,157,21)" fg:x="909" fg:w="54"/><text x="41.4371%" y="991.50">&lt;c..</text></g><g><title>core::ops::function::FnOnce::call_once (54 samples, 2.45%)</title><rect x="41.1871%" y="965" width="2.4468%" height="15" fill="rgb(222,94,11)" fg:x="909" fg:w="54"/><text x="41.4371%" y="975.50">co..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete::_{{closure}} (54 samples, 2.45%)</title><rect x="41.1871%" y="949" width="2.4468%" height="15" fill="rgb(249,113,6)" fg:x="909" fg:w="54"/><text x="41.4371%" y="959.50">to..</text></g><g><title>tokio::runtime::task::core::Trailer::wake_join (4 samples, 0.18%)</title><rect x="43.4527%" y="933" width="0.1812%" height="15" fill="rgb(238,137,36)" fg:x="959" fg:w="4"/><text x="43.7027%" y="943.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (4 samples, 0.18%)</title><rect x="43.4527%" y="917" width="0.1812%" height="15" fill="rgb(210,102,26)" fg:x="959" fg:w="4"/><text x="43.7027%" y="927.50"></text></g><g><title>tokio::runtime::task::core::Trailer::wake_join::_{{closure}} (4 samples, 0.18%)</title><rect x="43.4527%" y="901" width="0.1812%" height="15" fill="rgb(218,30,30)" fg:x="959" fg:w="4"/><text x="43.7027%" y="911.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (1 samples, 0.05%)</title><rect x="43.6339%" y="1029" width="0.0453%" height="15" fill="rgb(214,67,26)" fg:x="963" fg:w="1"/><text x="43.8839%" y="1039.50"></text></g><g><title>core::mem::drop (1 samples, 0.05%)</title><rect x="43.6339%" y="1013" width="0.0453%" height="15" fill="rgb(251,9,53)" fg:x="963" fg:w="1"/><text x="43.8839%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;client::main::{{closure}}::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="43.6339%" y="997" width="0.0453%" height="15" fill="rgb(228,204,25)" fg:x="963" fg:w="1"/><text x="43.8839%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;client::main::{{closure}}::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="43.6339%" y="981" width="0.0453%" height="15" fill="rgb(207,153,8)" fg:x="963" fg:w="1"/><text x="43.8839%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Trailer&gt; (1 samples, 0.05%)</title><rect x="43.6339%" y="965" width="0.0453%" height="15" fill="rgb(242,9,16)" fg:x="963" fg:w="1"/><text x="43.8839%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="43.6339%" y="949" width="0.0453%" height="15" fill="rgb(217,211,10)" fg:x="963" fg:w="1"/><text x="43.8839%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="43.6339%" y="933" width="0.0453%" height="15" fill="rgb(219,228,52)" fg:x="963" fg:w="1"/><text x="43.8839%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (1 samples, 0.05%)</title><rect x="43.6339%" y="917" width="0.0453%" height="15" fill="rgb(231,92,29)" fg:x="963" fg:w="1"/><text x="43.8839%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.05%)</title><rect x="43.6339%" y="901" width="0.0453%" height="15" fill="rgb(232,8,23)" fg:x="963" fg:w="1"/><text x="43.8839%" y="911.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="43.6339%" y="885" width="0.0453%" height="15" fill="rgb(216,211,34)" fg:x="963" fg:w="1"/><text x="43.8839%" y="895.50"></text></g><g><title>futures_task::waker::drop_arc_raw (1 samples, 0.05%)</title><rect x="43.6339%" y="869" width="0.0453%" height="15" fill="rgb(236,151,0)" fg:x="963" fg:w="1"/><text x="43.8839%" y="879.50"></text></g><g><title>core::mem::drop (1 samples, 0.05%)</title><rect x="43.6339%" y="853" width="0.0453%" height="15" fill="rgb(209,168,3)" fg:x="963" fg:w="1"/><text x="43.8839%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::task::Task&lt;futures_util::future::future::Map&lt;tokio::runtime::task::join::JoinHandle&lt;core::result::Result&lt;alloc::string::String,tarpc::client::RpcError&gt;&gt;,client::main::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="43.6339%" y="837" width="0.0453%" height="15" fill="rgb(208,129,28)" fg:x="963" fg:w="1"/><text x="43.8839%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="43.6339%" y="821" width="0.0453%" height="15" fill="rgb(229,78,22)" fg:x="963" fg:w="1"/><text x="43.8839%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.05%)</title><rect x="43.6339%" y="805" width="0.0453%" height="15" fill="rgb(228,187,13)" fg:x="963" fg:w="1"/><text x="43.8839%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::futures_unordered::task::Task&lt;futures_util::future::future::Map&lt;tokio::runtime::task::join::JoinHandle&lt;core::result::Result&lt;alloc::string::String,tarpc::client::RpcError&gt;&gt;,client::main::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="43.6339%" y="789" width="0.0453%" height="15" fill="rgb(240,119,24)" fg:x="963" fg:w="1"/><text x="43.8839%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;futures_util::future::future::Map&lt;tokio::runtime::task::join::JoinHandle&lt;core::result::Result&lt;alloc::string::String,tarpc::client::RpcError&gt;&gt;,client::main::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="43.6339%" y="773" width="0.0453%" height="15" fill="rgb(209,194,42)" fg:x="963" fg:w="1"/><text x="43.8839%" y="783.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="43.6339%" y="757" width="0.0453%" height="15" fill="rgb(247,200,46)" fg:x="963" fg:w="1"/><text x="43.8839%" y="767.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (6 samples, 0.27%)</title><rect x="43.6792%" y="1013" width="0.2719%" height="15" fill="rgb(218,76,16)" fg:x="964" fg:w="6"/><text x="43.9292%" y="1023.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (5 samples, 0.23%)</title><rect x="43.7245%" y="997" width="0.2266%" height="15" fill="rgb(225,21,48)" fg:x="965" fg:w="5"/><text x="43.9745%" y="1007.50"></text></g><g><title>std::sync::poison::Flag::done (3 samples, 0.14%)</title><rect x="43.9964%" y="965" width="0.1359%" height="15" fill="rgb(239,223,50)" fg:x="971" fg:w="3"/><text x="44.2464%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (8 samples, 0.36%)</title><rect x="43.9964%" y="997" width="0.3625%" height="15" fill="rgb(244,45,21)" fg:x="971" fg:w="8"/><text x="44.2464%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.36%)</title><rect x="43.9964%" y="981" width="0.3625%" height="15" fill="rgb(232,33,43)" fg:x="971" fg:w="8"/><text x="44.2464%" y="991.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::unlock (5 samples, 0.23%)</title><rect x="44.1323%" y="965" width="0.2266%" height="15" fill="rgb(209,8,3)" fg:x="974" fg:w="5"/><text x="44.3823%" y="975.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as tokio::util::linked_list::Link&gt;::pointers (3 samples, 0.14%)</title><rect x="44.4042%" y="981" width="0.1359%" height="15" fill="rgb(214,25,53)" fg:x="980" fg:w="3"/><text x="44.6542%" y="991.50"></text></g><g><title>tokio::runtime::task::core::Header::get_trailer (3 samples, 0.14%)</title><rect x="44.4042%" y="965" width="0.1359%" height="15" fill="rgb(254,186,54)" fg:x="980" fg:w="3"/><text x="44.6542%" y="975.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (5 samples, 0.23%)</title><rect x="44.3589%" y="997" width="0.2266%" height="15" fill="rgb(208,174,49)" fg:x="979" fg:w="5"/><text x="44.6089%" y="1007.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::set_next (1 samples, 0.05%)</title><rect x="44.5401%" y="981" width="0.0453%" height="15" fill="rgb(233,191,51)" fg:x="983" fg:w="1"/><text x="44.7901%" y="991.50"></text></g><g><title>core::ptr::write (1 samples, 0.05%)</title><rect x="44.5401%" y="965" width="0.0453%" height="15" fill="rgb(222,134,10)" fg:x="983" fg:w="1"/><text x="44.7901%" y="975.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::release (21 samples, 0.95%)</title><rect x="43.6792%" y="1029" width="0.9515%" height="15" fill="rgb(230,226,20)" fg:x="964" fg:w="21"/><text x="43.9292%" y="1039.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (15 samples, 0.68%)</title><rect x="43.9511%" y="1013" width="0.6797%" height="15" fill="rgb(251,111,25)" fg:x="970" fg:w="15"/><text x="44.2011%" y="1023.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (1 samples, 0.05%)</title><rect x="44.5854%" y="997" width="0.0453%" height="15" fill="rgb(224,40,46)" fg:x="984" fg:w="1"/><text x="44.8354%" y="1007.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.05%)</title><rect x="44.5854%" y="981" width="0.0453%" height="15" fill="rgb(236,108,47)" fg:x="984" fg:w="1"/><text x="44.8354%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.05%)</title><rect x="44.5854%" y="965" width="0.0453%" height="15" fill="rgb(234,93,0)" fg:x="984" fg:w="1"/><text x="44.8354%" y="975.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.05%)</title><rect x="44.5854%" y="949" width="0.0453%" height="15" fill="rgb(224,213,32)" fg:x="984" fg:w="1"/><text x="44.8354%" y="959.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_complete (6 samples, 0.27%)</title><rect x="44.6307%" y="1029" width="0.2719%" height="15" fill="rgb(251,11,48)" fg:x="985" fg:w="6"/><text x="44.8807%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_xor (4 samples, 0.18%)</title><rect x="44.7213%" y="1013" width="0.1812%" height="15" fill="rgb(236,173,5)" fg:x="987" fg:w="4"/><text x="44.9713%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_xor (4 samples, 0.18%)</title><rect x="44.7213%" y="997" width="0.1812%" height="15" fill="rgb(230,95,12)" fg:x="987" fg:w="4"/><text x="44.9713%" y="1007.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (87 samples, 3.94%)</title><rect x="41.1871%" y="1045" width="3.9420%" height="15" fill="rgb(232,209,1)" fg:x="909" fg:w="87"/><text x="41.4371%" y="1055.50">toki..</text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (5 samples, 0.23%)</title><rect x="44.9026%" y="1029" width="0.2266%" height="15" fill="rgb(232,6,1)" fg:x="991" fg:w="5"/><text x="45.1526%" y="1039.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::ref_count (4 samples, 0.18%)</title><rect x="44.9479%" y="1013" width="0.1812%" height="15" fill="rgb(210,224,50)" fg:x="992" fg:w="4"/><text x="45.1979%" y="1023.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (3 samples, 0.14%)</title><rect x="45.7635%" y="981" width="0.1359%" height="15" fill="rgb(228,127,35)" fg:x="1010" fg:w="3"/><text x="46.0135%" y="991.50"></text></g><g><title>tokio_tungstenite::compat::cvt (5 samples, 0.23%)</title><rect x="47.2134%" y="693" width="0.2266%" height="15" fill="rgb(245,102,45)" fg:x="1042" fg:w="5"/><text x="47.4634%" y="703.50"></text></g><g><title>std::io::error::Error::kind (1 samples, 0.05%)</title><rect x="47.3947%" y="677" width="0.0453%" height="15" fill="rgb(214,1,49)" fg:x="1046" fg:w="1"/><text x="47.6447%" y="687.50"></text></g><g><title>std::io::error::repr_bitpacked::Repr::data (1 samples, 0.05%)</title><rect x="47.3947%" y="661" width="0.0453%" height="15" fill="rgb(226,163,40)" fg:x="1046" fg:w="1"/><text x="47.6447%" y="671.50"></text></g><g><title>std::io::error::repr_bitpacked::decode_repr (1 samples, 0.05%)</title><rect x="47.3947%" y="645" width="0.0453%" height="15" fill="rgb(239,212,28)" fg:x="1046" fg:w="1"/><text x="47.6447%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.14%)</title><rect x="47.7118%" y="661" width="0.1359%" height="15" fill="rgb(220,20,13)" fg:x="1053" fg:w="3"/><text x="47.9618%" y="671.50"></text></g><g><title>&lt;core::result::Result&lt;T,tungstenite::error::Error&gt; as tungstenite::protocol::CheckConnectionReset&gt;::check_connection_reset (1 samples, 0.05%)</title><rect x="48.0290%" y="645" width="0.0453%" height="15" fill="rgb(210,164,35)" fg:x="1060" fg:w="1"/><text x="48.2790%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.09%)</title><rect x="48.5727%" y="629" width="0.0906%" height="15" fill="rgb(248,109,41)" fg:x="1072" fg:w="2"/><text x="48.8227%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.09%)</title><rect x="48.6633%" y="629" width="0.0906%" height="15" fill="rgb(238,23,50)" fg:x="1074" fg:w="2"/><text x="48.9133%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.09%)</title><rect x="48.6633%" y="613" width="0.0906%" height="15" fill="rgb(211,48,49)" fg:x="1074" fg:w="2"/><text x="48.9133%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.09%)</title><rect x="48.6633%" y="597" width="0.0906%" height="15" fill="rgb(223,36,21)" fg:x="1074" fg:w="2"/><text x="48.9133%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.09%)</title><rect x="48.6633%" y="581" width="0.0906%" height="15" fill="rgb(207,123,46)" fg:x="1074" fg:w="2"/><text x="48.9133%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.09%)</title><rect x="48.6633%" y="565" width="0.0906%" height="15" fill="rgb(240,218,32)" fg:x="1074" fg:w="2"/><text x="48.9133%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.09%)</title><rect x="48.6633%" y="549" width="0.0906%" height="15" fill="rgb(252,5,43)" fg:x="1074" fg:w="2"/><text x="48.9133%" y="559.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.09%)</title><rect x="48.6633%" y="533" width="0.0906%" height="15" fill="rgb(252,84,19)" fg:x="1074" fg:w="2"/><text x="48.9133%" y="543.50"></text></g><g><title>malloc (2 samples, 0.09%)</title><rect x="48.6633%" y="517" width="0.0906%" height="15" fill="rgb(243,152,39)" fg:x="1074" fg:w="2"/><text x="48.9133%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (1 samples, 0.05%)</title><rect x="48.7540%" y="629" width="0.0453%" height="15" fill="rgb(234,160,15)" fg:x="1076" fg:w="1"/><text x="49.0040%" y="639.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read_buf (2 samples, 0.09%)</title><rect x="48.8446%" y="597" width="0.0906%" height="15" fill="rgb(237,34,20)" fg:x="1078" fg:w="2"/><text x="49.0946%" y="607.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (2 samples, 0.09%)</title><rect x="48.8446%" y="581" width="0.0906%" height="15" fill="rgb(229,97,13)" fg:x="1078" fg:w="2"/><text x="49.0946%" y="591.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_buf (2 samples, 0.09%)</title><rect x="48.8446%" y="565" width="0.0906%" height="15" fill="rgb(234,71,50)" fg:x="1078" fg:w="2"/><text x="49.0946%" y="575.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_buf (2 samples, 0.09%)</title><rect x="48.8446%" y="549" width="0.0906%" height="15" fill="rgb(253,155,4)" fg:x="1078" fg:w="2"/><text x="49.0946%" y="559.50"></text></g><g><title>core::io::borrowed_buf::BorrowedCursor::append (2 samples, 0.09%)</title><rect x="48.8446%" y="533" width="0.0906%" height="15" fill="rgb(222,185,37)" fg:x="1078" fg:w="2"/><text x="49.0946%" y="543.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write_slice (2 samples, 0.09%)</title><rect x="48.8446%" y="517" width="0.0906%" height="15" fill="rgb(251,177,13)" fg:x="1078" fg:w="2"/><text x="49.0946%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.09%)</title><rect x="48.8446%" y="501" width="0.0906%" height="15" fill="rgb(250,179,40)" fg:x="1078" fg:w="2"/><text x="49.0946%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.09%)</title><rect x="48.8446%" y="485" width="0.0906%" height="15" fill="rgb(242,44,2)" fg:x="1078" fg:w="2"/><text x="49.0946%" y="495.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="48.8446%" y="469" width="0.0906%" height="15" fill="rgb(216,177,13)" fg:x="1078" fg:w="2"/><text x="49.0946%" y="479.50"></text></g><g><title>std::io::Read::read_to_end (4 samples, 0.18%)</title><rect x="48.7993%" y="629" width="0.1812%" height="15" fill="rgb(216,106,43)" fg:x="1077" fg:w="4"/><text x="49.0493%" y="639.50"></text></g><g><title>std::io::default_read_to_end (4 samples, 0.18%)</title><rect x="48.7993%" y="613" width="0.1812%" height="15" fill="rgb(216,183,2)" fg:x="1077" fg:w="4"/><text x="49.0493%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (1 samples, 0.05%)</title><rect x="48.9352%" y="597" width="0.0453%" height="15" fill="rgb(249,75,3)" fg:x="1080" fg:w="1"/><text x="49.1852%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.05%)</title><rect x="48.9352%" y="581" width="0.0453%" height="15" fill="rgb(219,67,39)" fg:x="1080" fg:w="1"/><text x="49.1852%" y="591.50"></text></g><g><title>std::io::Read::take (1 samples, 0.05%)</title><rect x="48.9805%" y="629" width="0.0453%" height="15" fill="rgb(253,228,2)" fg:x="1081" fg:w="1"/><text x="49.2305%" y="639.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (6 samples, 0.27%)</title><rect x="49.1618%" y="533" width="0.2719%" height="15" fill="rgb(235,138,27)" fg:x="1085" fg:w="6"/><text x="49.4118%" y="543.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (6 samples, 0.27%)</title><rect x="49.1618%" y="517" width="0.2719%" height="15" fill="rgb(236,97,51)" fg:x="1085" fg:w="6"/><text x="49.4118%" y="527.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (6 samples, 0.27%)</title><rect x="49.1618%" y="501" width="0.2719%" height="15" fill="rgb(240,80,30)" fg:x="1085" fg:w="6"/><text x="49.4118%" y="511.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (6 samples, 0.27%)</title><rect x="49.1618%" y="485" width="0.2719%" height="15" fill="rgb(230,178,19)" fg:x="1085" fg:w="6"/><text x="49.4118%" y="495.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (6 samples, 0.27%)</title><rect x="49.1618%" y="469" width="0.2719%" height="15" fill="rgb(210,190,27)" fg:x="1085" fg:w="6"/><text x="49.4118%" y="479.50"></text></g><g><title>std::sys_common::net::TcpStream::read (6 samples, 0.27%)</title><rect x="49.1618%" y="453" width="0.2719%" height="15" fill="rgb(222,107,31)" fg:x="1085" fg:w="6"/><text x="49.4118%" y="463.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (6 samples, 0.27%)</title><rect x="49.1618%" y="437" width="0.2719%" height="15" fill="rgb(216,127,34)" fg:x="1085" fg:w="6"/><text x="49.4118%" y="447.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (6 samples, 0.27%)</title><rect x="49.1618%" y="421" width="0.2719%" height="15" fill="rgb(234,116,52)" fg:x="1085" fg:w="6"/><text x="49.4118%" y="431.50"></text></g><g><title>recv (6 samples, 0.27%)</title><rect x="49.1618%" y="405" width="0.2719%" height="15" fill="rgb(222,124,15)" fg:x="1085" fg:w="6"/><text x="49.4118%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.27%)</title><rect x="49.1618%" y="389" width="0.2719%" height="15" fill="rgb(231,179,28)" fg:x="1085" fg:w="6"/><text x="49.4118%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.27%)</title><rect x="49.1618%" y="373" width="0.2719%" height="15" fill="rgb(226,93,45)" fg:x="1085" fg:w="6"/><text x="49.4118%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.23%)</title><rect x="49.2071%" y="357" width="0.2266%" height="15" fill="rgb(215,8,51)" fg:x="1086" fg:w="5"/><text x="49.4571%" y="367.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="49.2524%" y="341" width="0.1812%" height="15" fill="rgb(223,106,5)" fg:x="1087" fg:w="4"/><text x="49.5024%" y="351.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="49.2977%" y="325" width="0.1359%" height="15" fill="rgb(250,191,5)" fg:x="1088" fg:w="3"/><text x="49.5477%" y="335.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="49.2977%" y="309" width="0.1359%" height="15" fill="rgb(242,132,44)" fg:x="1088" fg:w="3"/><text x="49.5477%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="49.2977%" y="293" width="0.1359%" height="15" fill="rgb(251,152,29)" fg:x="1088" fg:w="3"/><text x="49.5477%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="49.3430%" y="277" width="0.0906%" height="15" fill="rgb(218,179,5)" fg:x="1089" fg:w="2"/><text x="49.5930%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="49.3883%" y="261" width="0.0453%" height="15" fill="rgb(227,67,19)" fg:x="1090" fg:w="1"/><text x="49.6383%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="49.3883%" y="245" width="0.0453%" height="15" fill="rgb(233,119,31)" fg:x="1090" fg:w="1"/><text x="49.6383%" y="255.50"></text></g><g><title>tungstenite::buffer::ReadBuffer&lt;_&gt;::read_from (12 samples, 0.54%)</title><rect x="49.0258%" y="629" width="0.5437%" height="15" fill="rgb(241,120,22)" fg:x="1082" fg:w="12"/><text x="49.2758%" y="639.50"></text></g><g><title>&lt;tokio_tungstenite::compat::AllowStd&lt;S&gt; as std::io::Read&gt;::read (10 samples, 0.45%)</title><rect x="49.1164%" y="613" width="0.4531%" height="15" fill="rgb(224,102,30)" fg:x="1084" fg:w="10"/><text x="49.3664%" y="623.50"></text></g><g><title>tokio_tungstenite::compat::AllowStd&lt;S&gt;::with_context (10 samples, 0.45%)</title><rect x="49.1164%" y="597" width="0.4531%" height="15" fill="rgb(210,164,37)" fg:x="1084" fg:w="10"/><text x="49.3664%" y="607.50"></text></g><g><title>&lt;tokio_tungstenite::compat::AllowStd&lt;S&gt; as std::io::Read&gt;::read::_{{closure}} (10 samples, 0.45%)</title><rect x="49.1164%" y="581" width="0.4531%" height="15" fill="rgb(226,191,16)" fg:x="1084" fg:w="10"/><text x="49.3664%" y="591.50"></text></g><g><title>&lt;tokio_tungstenite::stream::MaybeTlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (10 samples, 0.45%)</title><rect x="49.1164%" y="565" width="0.4531%" height="15" fill="rgb(214,40,45)" fg:x="1084" fg:w="10"/><text x="49.3664%" y="575.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (10 samples, 0.45%)</title><rect x="49.1164%" y="549" width="0.4531%" height="15" fill="rgb(244,29,26)" fg:x="1084" fg:w="10"/><text x="49.3664%" y="559.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (3 samples, 0.14%)</title><rect x="49.4336%" y="533" width="0.1359%" height="15" fill="rgb(216,16,5)" fg:x="1091" fg:w="3"/><text x="49.6836%" y="543.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (3 samples, 0.14%)</title><rect x="49.4336%" y="517" width="0.1359%" height="15" fill="rgb(249,76,35)" fg:x="1091" fg:w="3"/><text x="49.6836%" y="527.50"></text></g><g><title>tungstenite::protocol::frame::frame::Frame::from_payload (2 samples, 0.09%)</title><rect x="49.5696%" y="629" width="0.0906%" height="15" fill="rgb(207,11,44)" fg:x="1094" fg:w="2"/><text x="49.8196%" y="639.50"></text></g><g><title>tungstenite::protocol::frame::FrameCodec::read_frame (41 samples, 1.86%)</title><rect x="48.0743%" y="645" width="1.8577%" height="15" fill="rgb(228,190,49)" fg:x="1061" fg:w="41"/><text x="48.3243%" y="655.50">t..</text></g><g><title>tungstenite::protocol::frame::frame::FrameHeader::parse (6 samples, 0.27%)</title><rect x="49.6602%" y="629" width="0.2719%" height="15" fill="rgb(214,173,12)" fg:x="1096" fg:w="6"/><text x="49.9102%" y="639.50"></text></g><g><title>tungstenite::protocol::frame::frame::FrameHeader::parse_internal (4 samples, 0.18%)</title><rect x="49.7508%" y="613" width="0.1812%" height="15" fill="rgb(218,26,35)" fg:x="1098" fg:w="4"/><text x="50.0008%" y="623.50"></text></g><g><title>&lt;tungstenite::protocol::frame::coding::OpCode as core::convert::From&lt;u8&gt;&gt;::from (2 samples, 0.09%)</title><rect x="49.8414%" y="597" width="0.0906%" height="15" fill="rgb(220,200,19)" fg:x="1100" fg:w="2"/><text x="50.0914%" y="607.50"></text></g><g><title>tungstenite::protocol::message::IncompleteMessage::complete (4 samples, 0.18%)</title><rect x="49.9320%" y="645" width="0.1812%" height="15" fill="rgb(239,95,49)" fg:x="1102" fg:w="4"/><text x="50.1820%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.14%)</title><rect x="50.2492%" y="517" width="0.1359%" height="15" fill="rgb(235,85,53)" fg:x="1109" fg:w="3"/><text x="50.4992%" y="527.50"></text></g><g><title>malloc (2 samples, 0.09%)</title><rect x="50.2945%" y="501" width="0.0906%" height="15" fill="rgb(233,133,31)" fg:x="1110" fg:w="2"/><text x="50.5445%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (4 samples, 0.18%)</title><rect x="50.2492%" y="629" width="0.1812%" height="15" fill="rgb(218,25,20)" fg:x="1109" fg:w="4"/><text x="50.4992%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.18%)</title><rect x="50.2492%" y="613" width="0.1812%" height="15" fill="rgb(252,210,38)" fg:x="1109" fg:w="4"/><text x="50.4992%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.18%)</title><rect x="50.2492%" y="597" width="0.1812%" height="15" fill="rgb(242,134,21)" fg:x="1109" fg:w="4"/><text x="50.4992%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.18%)</title><rect x="50.2492%" y="581" width="0.1812%" height="15" fill="rgb(213,28,48)" fg:x="1109" fg:w="4"/><text x="50.4992%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.18%)</title><rect x="50.2492%" y="565" width="0.1812%" height="15" fill="rgb(250,196,2)" fg:x="1109" fg:w="4"/><text x="50.4992%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.18%)</title><rect x="50.2492%" y="549" width="0.1812%" height="15" fill="rgb(227,5,17)" fg:x="1109" fg:w="4"/><text x="50.4992%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.18%)</title><rect x="50.2492%" y="533" width="0.1812%" height="15" fill="rgb(221,226,24)" fg:x="1109" fg:w="4"/><text x="50.4992%" y="543.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.05%)</title><rect x="50.3851%" y="517" width="0.0453%" height="15" fill="rgb(211,5,48)" fg:x="1112" fg:w="1"/><text x="50.6351%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.05%)</title><rect x="50.3851%" y="501" width="0.0453%" height="15" fill="rgb(219,150,6)" fg:x="1112" fg:w="1"/><text x="50.6351%" y="511.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.05%)</title><rect x="50.4304%" y="549" width="0.0453%" height="15" fill="rgb(251,46,16)" fg:x="1113" fg:w="1"/><text x="50.6804%" y="559.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.05%)</title><rect x="50.4304%" y="533" width="0.0453%" height="15" fill="rgb(220,204,40)" fg:x="1113" fg:w="1"/><text x="50.6804%" y="543.50"></text></g><g><title>&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (75 samples, 3.40%)</title><rect x="47.2134%" y="709" width="3.3983%" height="15" fill="rgb(211,85,2)" fg:x="1042" fg:w="75"/><text x="47.4634%" y="719.50">&lt;to..</text></g><g><title>tungstenite::protocol::WebSocket&lt;Stream&gt;::read (70 samples, 3.17%)</title><rect x="47.4400%" y="693" width="3.1717%" height="15" fill="rgb(229,17,7)" fg:x="1047" fg:w="70"/><text x="47.6900%" y="703.50">tun..</text></g><g><title>tungstenite::protocol::WebSocketContext::read (70 samples, 3.17%)</title><rect x="47.4400%" y="677" width="3.1717%" height="15" fill="rgb(239,72,28)" fg:x="1047" fg:w="70"/><text x="47.6900%" y="687.50">tun..</text></g><g><title>tungstenite::protocol::WebSocketContext::read_message_frame (61 samples, 2.76%)</title><rect x="47.8478%" y="661" width="2.7639%" height="15" fill="rgb(230,47,54)" fg:x="1056" fg:w="61"/><text x="48.0978%" y="671.50">tu..</text></g><g><title>tungstenite::protocol::message::IncompleteMessage::extend (11 samples, 0.50%)</title><rect x="50.1133%" y="645" width="0.4984%" height="15" fill="rgb(214,50,8)" fg:x="1106" fg:w="11"/><text x="50.3633%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.18%)</title><rect x="50.4304%" y="629" width="0.1812%" height="15" fill="rgb(216,198,43)" fg:x="1113" fg:w="4"/><text x="50.6804%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.18%)</title><rect x="50.4304%" y="613" width="0.1812%" height="15" fill="rgb(234,20,35)" fg:x="1113" fg:w="4"/><text x="50.6804%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.18%)</title><rect x="50.4304%" y="597" width="0.1812%" height="15" fill="rgb(254,45,19)" fg:x="1113" fg:w="4"/><text x="50.6804%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.18%)</title><rect x="50.4304%" y="581" width="0.1812%" height="15" fill="rgb(219,14,44)" fg:x="1113" fg:w="4"/><text x="50.6804%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.18%)</title><rect x="50.4304%" y="565" width="0.1812%" height="15" fill="rgb(217,220,26)" fg:x="1113" fg:w="4"/><text x="50.6804%" y="575.50"></text></g><g><title>cfree (3 samples, 0.14%)</title><rect x="50.4758%" y="549" width="0.1359%" height="15" fill="rgb(213,158,28)" fg:x="1114" fg:w="3"/><text x="50.7258%" y="559.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="50.5664%" y="533" width="0.0453%" height="15" fill="rgb(252,51,52)" fg:x="1116" fg:w="1"/><text x="50.8164%" y="543.50"></text></g><g><title>log::max_level (1 samples, 0.05%)</title><rect x="50.6117%" y="709" width="0.0453%" height="15" fill="rgb(246,89,16)" fg:x="1117" fg:w="1"/><text x="50.8617%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.05%)</title><rect x="50.6117%" y="693" width="0.0453%" height="15" fill="rgb(216,158,49)" fg:x="1117" fg:w="1"/><text x="50.8617%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.05%)</title><rect x="50.6117%" y="677" width="0.0453%" height="15" fill="rgb(236,107,19)" fg:x="1117" fg:w="1"/><text x="50.8617%" y="687.50"></text></g><g><title>&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (91 samples, 4.12%)</title><rect x="47.0775%" y="741" width="4.1232%" height="15" fill="rgb(228,185,30)" fg:x="1039" fg:w="91"/><text x="47.3275%" y="751.50">&lt;tok..</text></g><g><title>tokio_tungstenite::WebSocketStream&lt;S&gt;::with_context (88 samples, 3.99%)</title><rect x="47.2134%" y="725" width="3.9873%" height="15" fill="rgb(246,134,8)" fg:x="1042" fg:w="88"/><text x="47.4634%" y="735.50">toki..</text></g><g><title>tokio_tungstenite::compat::AllowStd&lt;S&gt;::set_waker (12 samples, 0.54%)</title><rect x="50.6570%" y="709" width="0.5437%" height="15" fill="rgb(214,143,50)" fg:x="1118" fg:w="12"/><text x="50.9070%" y="719.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (11 samples, 0.50%)</title><rect x="50.7023%" y="693" width="0.4984%" height="15" fill="rgb(228,75,8)" fg:x="1119" fg:w="11"/><text x="50.9523%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.05%)</title><rect x="51.1554%" y="677" width="0.0453%" height="15" fill="rgb(207,175,4)" fg:x="1129" fg:w="1"/><text x="51.4054%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.05%)</title><rect x="51.1554%" y="661" width="0.0453%" height="15" fill="rgb(205,108,24)" fg:x="1129" fg:w="1"/><text x="51.4054%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.09%)</title><rect x="51.4726%" y="469" width="0.0906%" height="15" fill="rgb(244,120,49)" fg:x="1136" fg:w="2"/><text x="51.7226%" y="479.50"></text></g><g><title>&lt;bincode::config::int::FixintEncoding as bincode::config::int::IntEncoding&gt;::deserialize_u32 (3 samples, 0.14%)</title><rect x="51.5632%" y="437" width="0.1359%" height="15" fill="rgb(223,47,38)" fg:x="1138" fg:w="3"/><text x="51.8132%" y="447.50"></text></g><g><title>bincode::de::Deserializer&lt;R,O&gt;::deserialize_literal_u32 (3 samples, 0.14%)</title><rect x="51.5632%" y="421" width="0.1359%" height="15" fill="rgb(229,179,11)" fg:x="1138" fg:w="3"/><text x="51.8132%" y="431.50"></text></g><g><title>bincode::byteorder::ReadBytesExt::read_u32 (3 samples, 0.14%)</title><rect x="51.5632%" y="405" width="0.1359%" height="15" fill="rgb(231,122,1)" fg:x="1138" fg:w="3"/><text x="51.8132%" y="415.50"></text></g><g><title>&lt;bincode::de::read::SliceReader as std::io::Read&gt;::read_exact (3 samples, 0.14%)</title><rect x="51.5632%" y="389" width="0.1359%" height="15" fill="rgb(245,119,9)" fg:x="1138" fg:w="3"/><text x="51.8132%" y="399.50"></text></g><g><title>&lt;bincode::de::read::SliceReader as std::io::Read&gt;::read (3 samples, 0.14%)</title><rect x="51.5632%" y="373" width="0.1359%" height="15" fill="rgb(241,163,25)" fg:x="1138" fg:w="3"/><text x="51.8132%" y="383.50"></text></g><g><title>serde::de::EnumAccess::variant (4 samples, 0.18%)</title><rect x="51.5632%" y="469" width="0.1812%" height="15" fill="rgb(217,214,3)" fg:x="1138" fg:w="4"/><text x="51.8132%" y="479.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_enum::&lt;impl serde::de::EnumAccess for &amp;mut bincode::de::Deserializer&lt;R,O&gt;&gt;::variant_seed (4 samples, 0.18%)</title><rect x="51.5632%" y="453" width="0.1812%" height="15" fill="rgb(240,86,28)" fg:x="1138" fg:w="4"/><text x="51.8132%" y="463.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.05%)</title><rect x="51.6991%" y="437" width="0.0453%" height="15" fill="rgb(215,47,9)" fg:x="1141" fg:w="1"/><text x="51.9491%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for core::result::Result&lt;T,E&gt;&gt;::deserialize::Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.05%)</title><rect x="51.6991%" y="421" width="0.0453%" height="15" fill="rgb(252,25,45)" fg:x="1141" fg:w="1"/><text x="51.9491%" y="431.50"></text></g><g><title>&lt;serde::de::value::U32Deserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.05%)</title><rect x="51.6991%" y="405" width="0.0453%" height="15" fill="rgb(251,164,9)" fg:x="1141" fg:w="1"/><text x="51.9491%" y="415.50"></text></g><g><title>&lt;serde::de::value::U32Deserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.05%)</title><rect x="51.6991%" y="389" width="0.0453%" height="15" fill="rgb(233,194,0)" fg:x="1141" fg:w="1"/><text x="51.9491%" y="399.50"></text></g><g><title>serde::de::Visitor::visit_u32 (1 samples, 0.05%)</title><rect x="51.6991%" y="373" width="0.0453%" height="15" fill="rgb(249,111,24)" fg:x="1141" fg:w="1"/><text x="51.9491%" y="383.50"></text></g><g><title>&lt;&lt;serde::de::impls::&lt;impl serde::de::Deserialize for core::result::Result&lt;T,E&gt;&gt;::deserialize::Field as serde::de::Deserialize&gt;::deserialize::FieldVisitor as serde::de::Visitor&gt;::visit_u64 (1 samples, 0.05%)</title><rect x="51.6991%" y="357" width="0.0453%" height="15" fill="rgb(250,223,3)" fg:x="1141" fg:w="1"/><text x="51.9491%" y="367.50"></text></g><g><title>serde::de::EnumAccess::variant (2 samples, 0.09%)</title><rect x="51.7444%" y="373" width="0.0906%" height="15" fill="rgb(236,178,37)" fg:x="1142" fg:w="2"/><text x="51.9944%" y="383.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_enum::&lt;impl serde::de::EnumAccess for &amp;mut bincode::de::Deserializer&lt;R,O&gt;&gt;::variant_seed (2 samples, 0.09%)</title><rect x="51.7444%" y="357" width="0.0906%" height="15" fill="rgb(241,158,50)" fg:x="1142" fg:w="2"/><text x="51.9944%" y="367.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.05%)</title><rect x="51.7898%" y="341" width="0.0453%" height="15" fill="rgb(213,121,41)" fg:x="1143" fg:w="1"/><text x="52.0398%" y="351.50"></text></g><g><title>&lt;example_service::_::&lt;impl serde::de::Deserialize for example_service::HelloWorldResponse&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.05%)</title><rect x="51.7898%" y="325" width="0.0453%" height="15" fill="rgb(240,92,3)" fg:x="1143" fg:w="1"/><text x="52.0398%" y="335.50"></text></g><g><title>&lt;serde::de::value::U32Deserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.05%)</title><rect x="51.7898%" y="309" width="0.0453%" height="15" fill="rgb(205,123,3)" fg:x="1143" fg:w="1"/><text x="52.0398%" y="319.50"></text></g><g><title>&lt;serde::de::value::U32Deserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.05%)</title><rect x="51.7898%" y="293" width="0.0453%" height="15" fill="rgb(205,97,47)" fg:x="1143" fg:w="1"/><text x="52.0398%" y="303.50"></text></g><g><title>serde::de::Visitor::visit_u32 (1 samples, 0.05%)</title><rect x="51.7898%" y="277" width="0.0453%" height="15" fill="rgb(247,152,14)" fg:x="1143" fg:w="1"/><text x="52.0398%" y="287.50"></text></g><g><title>&lt;example_service::_::&lt;impl serde::de::Deserialize for example_service::HelloWorldResponse&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_u64 (1 samples, 0.05%)</title><rect x="51.7898%" y="261" width="0.0453%" height="15" fill="rgb(248,195,53)" fg:x="1143" fg:w="1"/><text x="52.0398%" y="271.50"></text></g><g><title>alloc::string::String::from_utf8 (6 samples, 0.27%)</title><rect x="51.9257%" y="277" width="0.2719%" height="15" fill="rgb(226,201,16)" fg:x="1146" fg:w="6"/><text x="52.1757%" y="287.50"></text></g><g><title>core::str::converts::from_utf8 (5 samples, 0.23%)</title><rect x="51.9710%" y="261" width="0.2266%" height="15" fill="rgb(205,98,0)" fg:x="1147" fg:w="5"/><text x="52.2210%" y="271.50"></text></g><g><title>core::str::validations::run_utf8_validation (4 samples, 0.18%)</title><rect x="52.0163%" y="245" width="0.1812%" height="15" fill="rgb(214,191,48)" fg:x="1148" fg:w="4"/><text x="52.2663%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.50%)</title><rect x="52.1976%" y="149" width="0.4984%" height="15" fill="rgb(237,112,39)" fg:x="1152" fg:w="11"/><text x="52.4476%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.50%)</title><rect x="52.1976%" y="133" width="0.4984%" height="15" fill="rgb(247,203,27)" fg:x="1152" fg:w="11"/><text x="52.4476%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.50%)</title><rect x="52.1976%" y="117" width="0.4984%" height="15" fill="rgb(235,124,28)" fg:x="1152" fg:w="11"/><text x="52.4476%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.50%)</title><rect x="52.1976%" y="101" width="0.4984%" height="15" fill="rgb(208,207,46)" fg:x="1152" fg:w="11"/><text x="52.4476%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.50%)</title><rect x="52.1976%" y="85" width="0.4984%" height="15" fill="rgb(234,176,4)" fg:x="1152" fg:w="11"/><text x="52.4476%" y="95.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.50%)</title><rect x="52.1976%" y="69" width="0.4984%" height="15" fill="rgb(230,133,28)" fg:x="1152" fg:w="11"/><text x="52.4476%" y="79.50"></text></g><g><title>malloc (11 samples, 0.50%)</title><rect x="52.1976%" y="53" width="0.4984%" height="15" fill="rgb(211,137,40)" fg:x="1152" fg:w="11"/><text x="52.4476%" y="63.50"></text></g><g><title>[libc.so.6] (5 samples, 0.23%)</title><rect x="52.4694%" y="37" width="0.2266%" height="15" fill="rgb(254,35,13)" fg:x="1158" fg:w="5"/><text x="52.7194%" y="47.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (29 samples, 1.31%)</title><rect x="51.4726%" y="533" width="1.3140%" height="15" fill="rgb(225,49,51)" fg:x="1136" fg:w="29"/><text x="51.7226%" y="543.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::result::Result&lt;T,E&gt;&gt;::deserialize (29 samples, 1.31%)</title><rect x="51.4726%" y="517" width="1.3140%" height="15" fill="rgb(251,10,15)" fg:x="1136" fg:w="29"/><text x="51.7226%" y="527.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_enum (29 samples, 1.31%)</title><rect x="51.4726%" y="501" width="1.3140%" height="15" fill="rgb(228,207,15)" fg:x="1136" fg:w="29"/><text x="51.7226%" y="511.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for core::result::Result&lt;T,E&gt;&gt;::deserialize::ResultVisitor&lt;T,E&gt; as serde::de::Visitor&gt;::visit_enum (29 samples, 1.31%)</title><rect x="51.4726%" y="485" width="1.3140%" height="15" fill="rgb(241,99,19)" fg:x="1136" fg:w="29"/><text x="51.7226%" y="495.50"></text></g><g><title>serde::de::VariantAccess::newtype_variant (23 samples, 1.04%)</title><rect x="51.7444%" y="469" width="1.0421%" height="15" fill="rgb(207,104,49)" fg:x="1142" fg:w="23"/><text x="51.9944%" y="479.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (23 samples, 1.04%)</title><rect x="51.7444%" y="453" width="1.0421%" height="15" fill="rgb(234,99,18)" fg:x="1142" fg:w="23"/><text x="51.9944%" y="463.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (23 samples, 1.04%)</title><rect x="51.7444%" y="437" width="1.0421%" height="15" fill="rgb(213,191,49)" fg:x="1142" fg:w="23"/><text x="51.9944%" y="447.50"></text></g><g><title>example_service::_::&lt;impl serde::de::Deserialize for example_service::HelloWorldResponse&gt;::deserialize (23 samples, 1.04%)</title><rect x="51.7444%" y="421" width="1.0421%" height="15" fill="rgb(210,226,19)" fg:x="1142" fg:w="23"/><text x="51.9944%" y="431.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_enum (23 samples, 1.04%)</title><rect x="51.7444%" y="405" width="1.0421%" height="15" fill="rgb(229,97,18)" fg:x="1142" fg:w="23"/><text x="51.9944%" y="415.50"></text></g><g><title>&lt;example_service::_::&lt;impl serde::de::Deserialize for example_service::HelloWorldResponse&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (23 samples, 1.04%)</title><rect x="51.7444%" y="389" width="1.0421%" height="15" fill="rgb(211,167,15)" fg:x="1142" fg:w="23"/><text x="51.9944%" y="399.50"></text></g><g><title>serde::de::VariantAccess::newtype_variant (21 samples, 0.95%)</title><rect x="51.8351%" y="373" width="0.9515%" height="15" fill="rgb(210,169,34)" fg:x="1144" fg:w="21"/><text x="52.0851%" y="383.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::VariantAccess&gt;::newtype_variant_seed (21 samples, 0.95%)</title><rect x="51.8351%" y="357" width="0.9515%" height="15" fill="rgb(241,121,31)" fg:x="1144" fg:w="21"/><text x="52.0851%" y="367.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (21 samples, 0.95%)</title><rect x="51.8351%" y="341" width="0.9515%" height="15" fill="rgb(232,40,11)" fg:x="1144" fg:w="21"/><text x="52.0851%" y="351.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (21 samples, 0.95%)</title><rect x="51.8351%" y="325" width="0.9515%" height="15" fill="rgb(205,86,26)" fg:x="1144" fg:w="21"/><text x="52.0851%" y="335.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_string (21 samples, 0.95%)</title><rect x="51.8351%" y="309" width="0.9515%" height="15" fill="rgb(231,126,28)" fg:x="1144" fg:w="21"/><text x="52.0851%" y="319.50"></text></g><g><title>bincode::de::Deserializer&lt;R,O&gt;::read_string (19 samples, 0.86%)</title><rect x="51.9257%" y="293" width="0.8609%" height="15" fill="rgb(219,221,18)" fg:x="1146" fg:w="19"/><text x="52.1757%" y="303.50"></text></g><g><title>bincode::de::Deserializer&lt;R,O&gt;::read_vec (13 samples, 0.59%)</title><rect x="52.1976%" y="277" width="0.5890%" height="15" fill="rgb(211,40,0)" fg:x="1152" fg:w="13"/><text x="52.4476%" y="287.50"></text></g><g><title>&lt;bincode::de::read::SliceReader as bincode::de::read::BincodeRead&gt;::get_byte_buffer (13 samples, 0.59%)</title><rect x="52.1976%" y="261" width="0.5890%" height="15" fill="rgb(239,85,43)" fg:x="1152" fg:w="13"/><text x="52.4476%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (13 samples, 0.59%)</title><rect x="52.1976%" y="245" width="0.5890%" height="15" fill="rgb(231,55,21)" fg:x="1152" fg:w="13"/><text x="52.4476%" y="255.50"></text></g><g><title>&lt;bincode::de::read::SliceReader as bincode::de::read::BincodeRead&gt;::get_byte_buffer::_{{closure}} (13 samples, 0.59%)</title><rect x="52.1976%" y="229" width="0.5890%" height="15" fill="rgb(225,184,43)" fg:x="1152" fg:w="13"/><text x="52.4476%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13 samples, 0.59%)</title><rect x="52.1976%" y="213" width="0.5890%" height="15" fill="rgb(251,158,41)" fg:x="1152" fg:w="13"/><text x="52.4476%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.59%)</title><rect x="52.1976%" y="197" width="0.5890%" height="15" fill="rgb(234,159,37)" fg:x="1152" fg:w="13"/><text x="52.4476%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.59%)</title><rect x="52.1976%" y="181" width="0.5890%" height="15" fill="rgb(216,204,22)" fg:x="1152" fg:w="13"/><text x="52.4476%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.59%)</title><rect x="52.1976%" y="165" width="0.5890%" height="15" fill="rgb(214,17,3)" fg:x="1152" fg:w="13"/><text x="52.4476%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.09%)</title><rect x="52.6960%" y="149" width="0.0906%" height="15" fill="rgb(212,111,17)" fg:x="1163" fg:w="2"/><text x="52.9460%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.09%)</title><rect x="52.6960%" y="133" width="0.0906%" height="15" fill="rgb(221,157,24)" fg:x="1163" fg:w="2"/><text x="52.9460%" y="143.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="52.6960%" y="117" width="0.0906%" height="15" fill="rgb(252,16,13)" fg:x="1163" fg:w="2"/><text x="52.9460%" y="127.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (33 samples, 1.50%)</title><rect x="51.3820%" y="645" width="1.4952%" height="15" fill="rgb(221,62,2)" fg:x="1134" fg:w="33"/><text x="51.6320%" y="655.50"></text></g><g><title>tarpc::_::&lt;impl serde::de::Deserialize for tarpc::Response&lt;T&gt;&gt;::deserialize (33 samples, 1.50%)</title><rect x="51.3820%" y="629" width="1.4952%" height="15" fill="rgb(247,87,22)" fg:x="1134" fg:w="33"/><text x="51.6320%" y="639.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (33 samples, 1.50%)</title><rect x="51.3820%" y="613" width="1.4952%" height="15" fill="rgb(215,73,9)" fg:x="1134" fg:w="33"/><text x="51.6320%" y="623.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple (32 samples, 1.45%)</title><rect x="51.4273%" y="597" width="1.4499%" height="15" fill="rgb(207,175,33)" fg:x="1135" fg:w="32"/><text x="51.6773%" y="607.50"></text></g><g><title>&lt;tarpc::_::&lt;impl serde::de::Deserialize for tarpc::Response&lt;T&gt;&gt;::deserialize::__Visitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (32 samples, 1.45%)</title><rect x="51.4273%" y="581" width="1.4499%" height="15" fill="rgb(243,129,54)" fg:x="1135" fg:w="32"/><text x="51.6773%" y="591.50"></text></g><g><title>serde::de::SeqAccess::next_element (31 samples, 1.40%)</title><rect x="51.4726%" y="565" width="1.4046%" height="15" fill="rgb(227,119,45)" fg:x="1136" fg:w="31"/><text x="51.7226%" y="575.50"></text></g><g><title>&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (31 samples, 1.40%)</title><rect x="51.4726%" y="549" width="1.4046%" height="15" fill="rgb(205,109,36)" fg:x="1136" fg:w="31"/><text x="51.7226%" y="559.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.09%)</title><rect x="52.7866%" y="533" width="0.0906%" height="15" fill="rgb(205,6,39)" fg:x="1165" fg:w="2"/><text x="53.0366%" y="543.50"></text></g><g><title>bincode::deserialize (36 samples, 1.63%)</title><rect x="51.3820%" y="709" width="1.6312%" height="15" fill="rgb(221,32,16)" fg:x="1134" fg:w="36"/><text x="51.6320%" y="719.50"></text></g><g><title>bincode::config::Options::deserialize (36 samples, 1.63%)</title><rect x="51.3820%" y="693" width="1.6312%" height="15" fill="rgb(228,144,50)" fg:x="1134" fg:w="36"/><text x="51.6320%" y="703.50"></text></g><g><title>bincode::internal::deserialize (36 samples, 1.63%)</title><rect x="51.3820%" y="677" width="1.6312%" height="15" fill="rgb(229,201,53)" fg:x="1134" fg:w="36"/><text x="51.6320%" y="687.50"></text></g><g><title>bincode::internal::deserialize_seed (36 samples, 1.63%)</title><rect x="51.3820%" y="661" width="1.6312%" height="15" fill="rgb(249,153,27)" fg:x="1134" fg:w="36"/><text x="51.6320%" y="671.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.14%)</title><rect x="52.8772%" y="645" width="0.1359%" height="15" fill="rgb(227,106,25)" fg:x="1167" fg:w="3"/><text x="53.1272%" y="655.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (137 samples, 6.21%)</title><rect x="46.9869%" y="773" width="6.2075%" height="15" fill="rgb(230,65,29)" fg:x="1037" fg:w="137"/><text x="47.2369%" y="783.50">&lt;futures..</text></g><g><title>&lt;tarpc_ws_transport::ClientTransport&lt;Req,Resp,Io&gt; as futures_core::stream::Stream&gt;::poll_next (136 samples, 6.16%)</title><rect x="47.0322%" y="757" width="6.1622%" height="15" fill="rgb(221,57,46)" fg:x="1038" fg:w="136"/><text x="47.2822%" y="767.50">&lt;tarpc_w..</text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (44 samples, 1.99%)</title><rect x="51.2007%" y="741" width="1.9937%" height="15" fill="rgb(229,161,17)" fg:x="1130" fg:w="44"/><text x="51.4507%" y="751.50">c..</text></g><g><title>&lt;tarpc_ws_transport::ClientTransport&lt;Req,Resp,Io&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (44 samples, 1.99%)</title><rect x="51.2007%" y="725" width="1.9937%" height="15" fill="rgb(222,213,11)" fg:x="1130" fg:w="44"/><text x="51.4507%" y="735.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.18%)</title><rect x="53.0131%" y="709" width="0.1812%" height="15" fill="rgb(235,35,13)" fg:x="1170" fg:w="4"/><text x="53.2631%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.18%)</title><rect x="53.0131%" y="693" width="0.1812%" height="15" fill="rgb(233,158,34)" fg:x="1170" fg:w="4"/><text x="53.2631%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.18%)</title><rect x="53.0131%" y="677" width="0.1812%" height="15" fill="rgb(215,151,48)" fg:x="1170" fg:w="4"/><text x="53.2631%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.18%)</title><rect x="53.0131%" y="661" width="0.1812%" height="15" fill="rgb(229,84,14)" fg:x="1170" fg:w="4"/><text x="53.2631%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.18%)</title><rect x="53.0131%" y="645" width="0.1812%" height="15" fill="rgb(229,68,14)" fg:x="1170" fg:w="4"/><text x="53.2631%" y="655.50"></text></g><g><title>cfree (4 samples, 0.18%)</title><rect x="53.0131%" y="629" width="0.1812%" height="15" fill="rgb(243,106,26)" fg:x="1170" fg:w="4"/><text x="53.2631%" y="639.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="53.1038%" y="613" width="0.0906%" height="15" fill="rgb(206,45,38)" fg:x="1172" fg:w="2"/><text x="53.3538%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (1 samples, 0.05%)</title><rect x="53.2397%" y="725" width="0.0453%" height="15" fill="rgb(226,6,15)" fg:x="1175" fg:w="1"/><text x="53.4897%" y="735.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="53.2397%" y="709" width="0.0453%" height="15" fill="rgb(232,22,54)" fg:x="1175" fg:w="1"/><text x="53.4897%" y="719.50"></text></g><g><title>tracing::span::Span::do_exit (1 samples, 0.05%)</title><rect x="53.2397%" y="693" width="0.0453%" height="15" fill="rgb(229,222,32)" fg:x="1175" fg:w="1"/><text x="53.4897%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.05%)</title><rect x="53.2397%" y="677" width="0.0453%" height="15" fill="rgb(228,62,29)" fg:x="1175" fg:w="1"/><text x="53.4897%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.05%)</title><rect x="53.2850%" y="725" width="0.0453%" height="15" fill="rgb(251,103,34)" fg:x="1176" fg:w="1"/><text x="53.5350%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing::span::Inner&gt;&gt; (1 samples, 0.05%)</title><rect x="53.2850%" y="709" width="0.0453%" height="15" fill="rgb(233,12,30)" fg:x="1176" fg:w="1"/><text x="53.5350%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,H&gt; as tarpc::util::Compact&gt;::compact (1 samples, 0.05%)</title><rect x="53.5569%" y="709" width="0.0453%" height="15" fill="rgb(238,52,0)" fg:x="1182" fg:w="1"/><text x="53.8069%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::shrink_to (1 samples, 0.05%)</title><rect x="53.5569%" y="693" width="0.0453%" height="15" fill="rgb(223,98,5)" fg:x="1182" fg:w="1"/><text x="53.8069%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::shrink_to (1 samples, 0.05%)</title><rect x="53.5569%" y="677" width="0.0453%" height="15" fill="rgb(228,75,37)" fg:x="1182" fg:w="1"/><text x="53.8069%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::shrink_to (1 samples, 0.05%)</title><rect x="53.5569%" y="661" width="0.0453%" height="15" fill="rgb(205,115,49)" fg:x="1182" fg:w="1"/><text x="53.8069%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.05%)</title><rect x="53.5569%" y="645" width="0.0453%" height="15" fill="rgb(250,154,43)" fg:x="1182" fg:w="1"/><text x="53.8069%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.05%)</title><rect x="53.5569%" y="629" width="0.0453%" height="15" fill="rgb(226,43,29)" fg:x="1182" fg:w="1"/><text x="53.8069%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (1 samples, 0.05%)</title><rect x="53.5569%" y="613" width="0.0453%" height="15" fill="rgb(249,228,39)" fg:x="1182" fg:w="1"/><text x="53.8069%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (1 samples, 0.05%)</title><rect x="53.5569%" y="597" width="0.0453%" height="15" fill="rgb(216,79,43)" fg:x="1182" fg:w="1"/><text x="53.8069%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.05%)</title><rect x="53.5569%" y="581" width="0.0453%" height="15" fill="rgb(228,95,12)" fg:x="1182" fg:w="1"/><text x="53.8069%" y="591.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.05%)</title><rect x="53.5569%" y="565" width="0.0453%" height="15" fill="rgb(249,221,15)" fg:x="1182" fg:w="1"/><text x="53.8069%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="53.5569%" y="549" width="0.0453%" height="15" fill="rgb(233,34,13)" fg:x="1182" fg:w="1"/><text x="53.8069%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="53.5569%" y="533" width="0.0453%" height="15" fill="rgb(214,103,39)" fg:x="1182" fg:w="1"/><text x="53.8069%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="53.5569%" y="517" width="0.0453%" height="15" fill="rgb(251,126,39)" fg:x="1182" fg:w="1"/><text x="53.8069%" y="527.50"></text></g><g><title>malloc (1 samples, 0.05%)</title><rect x="53.5569%" y="501" width="0.0453%" height="15" fill="rgb(214,216,36)" fg:x="1182" fg:w="1"/><text x="53.8069%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="53.5569%" y="485" width="0.0453%" height="15" fill="rgb(220,221,8)" fg:x="1182" fg:w="1"/><text x="53.8069%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="53.5569%" y="469" width="0.0453%" height="15" fill="rgb(240,216,3)" fg:x="1182" fg:w="1"/><text x="53.8069%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="53.5569%" y="453" width="0.0453%" height="15" fill="rgb(232,218,17)" fg:x="1182" fg:w="1"/><text x="53.8069%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.23%)</title><rect x="53.7381%" y="661" width="0.2266%" height="15" fill="rgb(229,163,45)" fg:x="1186" fg:w="5"/><text x="53.9881%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.23%)</title><rect x="53.7381%" y="645" width="0.2266%" height="15" fill="rgb(231,110,42)" fg:x="1186" fg:w="5"/><text x="53.9881%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5 samples, 0.23%)</title><rect x="53.7381%" y="629" width="0.2266%" height="15" fill="rgb(208,170,48)" fg:x="1186" fg:w="5"/><text x="53.9881%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (5 samples, 0.23%)</title><rect x="53.7381%" y="613" width="0.2266%" height="15" fill="rgb(239,116,25)" fg:x="1186" fg:w="5"/><text x="53.9881%" y="623.50"></text></g><g><title>core::hash::Hasher::write_u64 (5 samples, 0.23%)</title><rect x="53.7381%" y="597" width="0.2266%" height="15" fill="rgb(219,200,50)" fg:x="1186" fg:w="5"/><text x="53.9881%" y="607.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (5 samples, 0.23%)</title><rect x="53.7381%" y="581" width="0.2266%" height="15" fill="rgb(245,200,0)" fg:x="1186" fg:w="5"/><text x="53.9881%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (4 samples, 0.18%)</title><rect x="53.7834%" y="565" width="0.1812%" height="15" fill="rgb(245,119,33)" fg:x="1187" fg:w="4"/><text x="54.0334%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.05%)</title><rect x="54.2365%" y="613" width="0.0453%" height="15" fill="rgb(231,125,12)" fg:x="1197" fg:w="1"/><text x="54.4865%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.05%)</title><rect x="54.2365%" y="597" width="0.0453%" height="15" fill="rgb(216,96,41)" fg:x="1197" fg:w="1"/><text x="54.4865%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.05%)</title><rect x="54.2365%" y="581" width="0.0453%" height="15" fill="rgb(248,43,45)" fg:x="1197" fg:w="1"/><text x="54.4865%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.05%)</title><rect x="54.2365%" y="565" width="0.0453%" height="15" fill="rgb(217,222,7)" fg:x="1197" fg:w="1"/><text x="54.4865%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.05%)</title><rect x="54.2365%" y="549" width="0.0453%" height="15" fill="rgb(233,28,6)" fg:x="1197" fg:w="1"/><text x="54.4865%" y="559.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.05%)</title><rect x="54.2818%" y="613" width="0.0453%" height="15" fill="rgb(231,218,15)" fg:x="1198" fg:w="1"/><text x="54.5318%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.41%)</title><rect x="53.9647%" y="645" width="0.4078%" height="15" fill="rgb(226,171,48)" fg:x="1191" fg:w="9"/><text x="54.2147%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (9 samples, 0.41%)</title><rect x="53.9647%" y="629" width="0.4078%" height="15" fill="rgb(235,201,9)" fg:x="1191" fg:w="9"/><text x="54.2147%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.05%)</title><rect x="54.3271%" y="613" width="0.0453%" height="15" fill="rgb(217,80,15)" fg:x="1199" fg:w="1"/><text x="54.5771%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.05%)</title><rect x="54.3271%" y="597" width="0.0453%" height="15" fill="rgb(219,152,8)" fg:x="1199" fg:w="1"/><text x="54.5771%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (18 samples, 0.82%)</title><rect x="53.6022%" y="709" width="0.8156%" height="15" fill="rgb(243,107,38)" fg:x="1183" fg:w="18"/><text x="53.8522%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (17 samples, 0.77%)</title><rect x="53.6475%" y="693" width="0.7703%" height="15" fill="rgb(231,17,5)" fg:x="1184" fg:w="17"/><text x="53.8975%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (15 samples, 0.68%)</title><rect x="53.7381%" y="677" width="0.6797%" height="15" fill="rgb(209,25,54)" fg:x="1186" fg:w="15"/><text x="53.9881%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (10 samples, 0.45%)</title><rect x="53.9647%" y="661" width="0.4531%" height="15" fill="rgb(219,0,2)" fg:x="1191" fg:w="10"/><text x="54.2147%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (1 samples, 0.05%)</title><rect x="54.3725%" y="645" width="0.0453%" height="15" fill="rgb(246,9,5)" fg:x="1200" fg:w="1"/><text x="54.6225%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::read (1 samples, 0.05%)</title><rect x="54.3725%" y="629" width="0.0453%" height="15" fill="rgb(226,159,4)" fg:x="1200" fg:w="1"/><text x="54.6225%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (1 samples, 0.05%)</title><rect x="54.3725%" y="613" width="0.0453%" height="15" fill="rgb(219,175,34)" fg:x="1200" fg:w="1"/><text x="54.6225%" y="623.50"></text></g><g><title>core::ptr::read (1 samples, 0.05%)</title><rect x="54.3725%" y="597" width="0.0453%" height="15" fill="rgb(236,10,46)" fg:x="1200" fg:w="1"/><text x="54.6225%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.05%)</title><rect x="54.5084%" y="693" width="0.0453%" height="15" fill="rgb(240,211,16)" fg:x="1203" fg:w="1"/><text x="54.7584%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;example_service::HelloWorldResponse,tarpc::client::RpcError&gt;&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="54.5537%" y="693" width="0.0453%" height="15" fill="rgb(205,3,43)" fg:x="1204" fg:w="1"/><text x="54.8037%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="54.5537%" y="677" width="0.0453%" height="15" fill="rgb(245,7,22)" fg:x="1204" fg:w="1"/><text x="54.8037%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Sender&lt;core::result::Result&lt;example_service::HelloWorldResponse,tarpc::client::RpcError&gt;&gt;&gt; (2 samples, 0.09%)</title><rect x="54.5990%" y="693" width="0.0906%" height="15" fill="rgb(239,132,32)" fg:x="1205" fg:w="2"/><text x="54.8490%" y="703.50"></text></g><g><title>&lt;tokio::sync::oneshot::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="54.5990%" y="677" width="0.0906%" height="15" fill="rgb(228,202,34)" fg:x="1205" fg:w="2"/><text x="54.8490%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.09%)</title><rect x="54.5990%" y="661" width="0.0906%" height="15" fill="rgb(254,200,22)" fg:x="1205" fg:w="2"/><text x="54.8490%" y="671.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (6 samples, 0.27%)</title><rect x="54.6896%" y="693" width="0.2719%" height="15" fill="rgb(219,10,39)" fg:x="1207" fg:w="6"/><text x="54.9396%" y="703.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send::_{{closure}} (6 samples, 0.27%)</title><rect x="54.6896%" y="677" width="0.2719%" height="15" fill="rgb(226,210,39)" fg:x="1207" fg:w="6"/><text x="54.9396%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::result::Result&lt;example_service::HelloWorldResponse,tarpc::client::RpcError&gt;&gt;&gt; (5 samples, 0.23%)</title><rect x="54.7349%" y="661" width="0.2266%" height="15" fill="rgb(208,219,16)" fg:x="1208" fg:w="5"/><text x="54.9849%" y="671.50"></text></g><g><title>tokio::sync::oneshot::State::set_complete (12 samples, 0.54%)</title><rect x="54.9615%" y="677" width="0.5437%" height="15" fill="rgb(216,158,51)" fg:x="1213" fg:w="12"/><text x="55.2115%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.05%)</title><rect x="55.7771%" y="501" width="0.0453%" height="15" fill="rgb(233,14,44)" fg:x="1231" fg:w="1"/><text x="56.0271%" y="511.50"></text></g><g><title>core::mem::replace (1 samples, 0.05%)</title><rect x="55.7771%" y="485" width="0.0453%" height="15" fill="rgb(237,97,39)" fg:x="1231" fg:w="1"/><text x="56.0271%" y="495.50"></text></g><g><title>core::ptr::write (1 samples, 0.05%)</title><rect x="55.7771%" y="469" width="0.0453%" height="15" fill="rgb(218,198,43)" fg:x="1231" fg:w="1"/><text x="56.0271%" y="479.50"></text></g><g><title>syscall (2 samples, 0.09%)</title><rect x="55.8224%" y="453" width="0.0906%" height="15" fill="rgb(231,104,20)" fg:x="1232" fg:w="2"/><text x="56.0724%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="55.8224%" y="437" width="0.0906%" height="15" fill="rgb(254,36,13)" fg:x="1232" fg:w="2"/><text x="56.0724%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="55.8224%" y="421" width="0.0906%" height="15" fill="rgb(248,14,50)" fg:x="1232" fg:w="2"/><text x="56.0724%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="55.8677%" y="405" width="0.0453%" height="15" fill="rgb(217,107,29)" fg:x="1233" fg:w="1"/><text x="56.1177%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="55.8677%" y="389" width="0.0453%" height="15" fill="rgb(251,169,33)" fg:x="1233" fg:w="1"/><text x="56.1177%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="55.8677%" y="373" width="0.0453%" height="15" fill="rgb(217,108,32)" fg:x="1233" fg:w="1"/><text x="56.1177%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="55.8677%" y="357" width="0.0453%" height="15" fill="rgb(219,66,42)" fg:x="1233" fg:w="1"/><text x="56.1177%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="55.8677%" y="341" width="0.0453%" height="15" fill="rgb(206,180,7)" fg:x="1233" fg:w="1"/><text x="56.1177%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="55.8677%" y="325" width="0.0453%" height="15" fill="rgb(208,226,31)" fg:x="1233" fg:w="1"/><text x="56.1177%" y="335.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (1 samples, 0.05%)</title><rect x="55.9130%" y="453" width="0.0453%" height="15" fill="rgb(218,26,49)" fg:x="1234" fg:w="1"/><text x="56.1630%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (1 samples, 0.05%)</title><rect x="55.9130%" y="437" width="0.0453%" height="15" fill="rgb(233,197,48)" fg:x="1234" fg:w="1"/><text x="56.1630%" y="447.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (1 samples, 0.05%)</title><rect x="55.9130%" y="421" width="0.0453%" height="15" fill="rgb(252,181,51)" fg:x="1234" fg:w="1"/><text x="56.1630%" y="431.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (1 samples, 0.05%)</title><rect x="55.9130%" y="405" width="0.0453%" height="15" fill="rgb(253,90,19)" fg:x="1234" fg:w="1"/><text x="56.1630%" y="415.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (1 samples, 0.05%)</title><rect x="55.9130%" y="389" width="0.0453%" height="15" fill="rgb(215,171,30)" fg:x="1234" fg:w="1"/><text x="56.1630%" y="399.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (1 samples, 0.05%)</title><rect x="55.9130%" y="373" width="0.0453%" height="15" fill="rgb(214,222,9)" fg:x="1234" fg:w="1"/><text x="56.1630%" y="383.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.05%)</title><rect x="55.9130%" y="357" width="0.0453%" height="15" fill="rgb(223,3,22)" fg:x="1234" fg:w="1"/><text x="56.1630%" y="367.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (1 samples, 0.05%)</title><rect x="55.9130%" y="341" width="0.0453%" height="15" fill="rgb(225,196,46)" fg:x="1234" fg:w="1"/><text x="56.1630%" y="351.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1 samples, 0.05%)</title><rect x="55.9130%" y="325" width="0.0453%" height="15" fill="rgb(209,110,37)" fg:x="1234" fg:w="1"/><text x="56.1630%" y="335.50"></text></g><g><title>write (1 samples, 0.05%)</title><rect x="55.9130%" y="309" width="0.0453%" height="15" fill="rgb(249,89,12)" fg:x="1234" fg:w="1"/><text x="56.1630%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="55.9130%" y="293" width="0.0453%" height="15" fill="rgb(226,27,33)" fg:x="1234" fg:w="1"/><text x="56.1630%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="55.9130%" y="277" width="0.0453%" height="15" fill="rgb(213,82,22)" fg:x="1234" fg:w="1"/><text x="56.1630%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="55.9130%" y="261" width="0.0453%" height="15" fill="rgb(248,140,0)" fg:x="1234" fg:w="1"/><text x="56.1630%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="55.9130%" y="245" width="0.0453%" height="15" fill="rgb(228,106,3)" fg:x="1234" fg:w="1"/><text x="56.1630%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="55.9130%" y="229" width="0.0453%" height="15" fill="rgb(209,23,37)" fg:x="1234" fg:w="1"/><text x="56.1630%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="55.9130%" y="213" width="0.0453%" height="15" fill="rgb(241,93,50)" fg:x="1234" fg:w="1"/><text x="56.1630%" y="223.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_finish (1 samples, 0.05%)</title><rect x="56.0036%" y="421" width="0.0453%" height="15" fill="rgb(253,46,43)" fg:x="1236" fg:w="1"/><text x="56.2536%" y="431.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.05%)</title><rect x="56.0036%" y="405" width="0.0453%" height="15" fill="rgb(226,206,43)" fg:x="1236" fg:w="1"/><text x="56.2536%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (3 samples, 0.14%)</title><rect x="56.0036%" y="437" width="0.1359%" height="15" fill="rgb(217,54,7)" fg:x="1236" fg:w="3"/><text x="56.2536%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (2 samples, 0.09%)</title><rect x="56.0489%" y="421" width="0.0906%" height="15" fill="rgb(223,5,52)" fg:x="1237" fg:w="2"/><text x="56.2989%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.05%)</title><rect x="56.1396%" y="405" width="0.0453%" height="15" fill="rgb(206,52,46)" fg:x="1239" fg:w="1"/><text x="56.3896%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (1 samples, 0.05%)</title><rect x="56.1849%" y="405" width="0.0453%" height="15" fill="rgb(253,136,11)" fg:x="1240" fg:w="1"/><text x="56.4349%" y="415.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="56.1849%" y="389" width="0.0453%" height="15" fill="rgb(208,106,33)" fg:x="1240" fg:w="1"/><text x="56.4349%" y="399.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::unlock (1 samples, 0.05%)</title><rect x="56.1849%" y="373" width="0.0453%" height="15" fill="rgb(206,54,4)" fg:x="1240" fg:w="1"/><text x="56.4349%" y="383.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.05%)</title><rect x="56.2302%" y="405" width="0.0453%" height="15" fill="rgb(213,3,15)" fg:x="1241" fg:w="1"/><text x="56.4802%" y="415.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.05%)</title><rect x="56.2302%" y="389" width="0.0453%" height="15" fill="rgb(252,211,39)" fg:x="1241" fg:w="1"/><text x="56.4802%" y="399.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.05%)</title><rect x="56.2302%" y="373" width="0.0453%" height="15" fill="rgb(223,6,36)" fg:x="1241" fg:w="1"/><text x="56.4802%" y="383.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (40 samples, 1.81%)</title><rect x="55.5052%" y="597" width="1.8124%" height="15" fill="rgb(252,169,45)" fg:x="1225" fg:w="40"/><text x="55.7552%" y="607.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (39 samples, 1.77%)</title><rect x="55.5505%" y="581" width="1.7671%" height="15" fill="rgb(212,48,26)" fg:x="1226" fg:w="39"/><text x="55.8005%" y="591.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (39 samples, 1.77%)</title><rect x="55.5505%" y="565" width="1.7671%" height="15" fill="rgb(251,102,48)" fg:x="1226" fg:w="39"/><text x="55.8005%" y="575.50"></text></g><g><title>tokio::runtime::context::with_scheduler (39 samples, 1.77%)</title><rect x="55.5505%" y="549" width="1.7671%" height="15" fill="rgb(243,208,16)" fg:x="1226" fg:w="39"/><text x="55.8005%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (34 samples, 1.54%)</title><rect x="55.7771%" y="533" width="1.5406%" height="15" fill="rgb(219,96,24)" fg:x="1231" fg:w="34"/><text x="56.0271%" y="543.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (34 samples, 1.54%)</title><rect x="55.7771%" y="517" width="1.5406%" height="15" fill="rgb(219,33,29)" fg:x="1231" fg:w="34"/><text x="56.0271%" y="527.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (33 samples, 1.50%)</title><rect x="55.8224%" y="501" width="1.4952%" height="15" fill="rgb(223,176,5)" fg:x="1232" fg:w="33"/><text x="56.0724%" y="511.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (33 samples, 1.50%)</title><rect x="55.8224%" y="485" width="1.4952%" height="15" fill="rgb(228,140,14)" fg:x="1232" fg:w="33"/><text x="56.0724%" y="495.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (33 samples, 1.50%)</title><rect x="55.8224%" y="469" width="1.4952%" height="15" fill="rgb(217,179,31)" fg:x="1232" fg:w="33"/><text x="56.0724%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (30 samples, 1.36%)</title><rect x="55.9583%" y="453" width="1.3593%" height="15" fill="rgb(230,9,30)" fg:x="1235" fg:w="30"/><text x="56.2083%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (26 samples, 1.18%)</title><rect x="56.1396%" y="437" width="1.1781%" height="15" fill="rgb(230,136,20)" fg:x="1239" fg:w="26"/><text x="56.3896%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (26 samples, 1.18%)</title><rect x="56.1396%" y="421" width="1.1781%" height="15" fill="rgb(215,210,22)" fg:x="1239" fg:w="26"/><text x="56.3896%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (23 samples, 1.04%)</title><rect x="56.2755%" y="405" width="1.0421%" height="15" fill="rgb(218,43,5)" fg:x="1242" fg:w="23"/><text x="56.5255%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (10 samples, 0.45%)</title><rect x="56.8645%" y="389" width="0.4531%" height="15" fill="rgb(216,11,5)" fg:x="1255" fg:w="10"/><text x="57.1145%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_add (10 samples, 0.45%)</title><rect x="56.8645%" y="373" width="0.4531%" height="15" fill="rgb(209,82,29)" fg:x="1255" fg:w="10"/><text x="57.1145%" y="383.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (78 samples, 3.53%)</title><rect x="54.4178%" y="709" width="3.5342%" height="15" fill="rgb(244,115,12)" fg:x="1201" fg:w="78"/><text x="54.6678%" y="719.50">tok..</text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (66 samples, 2.99%)</title><rect x="54.9615%" y="693" width="2.9905%" height="15" fill="rgb(222,82,18)" fg:x="1213" fg:w="66"/><text x="55.2115%" y="703.50">tok..</text></g><g><title>tokio::sync::oneshot::Task::with_task (54 samples, 2.45%)</title><rect x="55.5052%" y="677" width="2.4468%" height="15" fill="rgb(249,227,8)" fg:x="1225" fg:w="54"/><text x="55.7552%" y="687.50">to..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (54 samples, 2.45%)</title><rect x="55.5052%" y="661" width="2.4468%" height="15" fill="rgb(253,141,45)" fg:x="1225" fg:w="54"/><text x="55.7552%" y="671.50">to..</text></g><g><title>tokio::sync::oneshot::Task::with_task::_{{closure}} (54 samples, 2.45%)</title><rect x="55.5052%" y="645" width="2.4468%" height="15" fill="rgb(234,184,4)" fg:x="1225" fg:w="54"/><text x="55.7552%" y="655.50">to..</text></g><g><title>core::ops::function::FnOnce::call_once (54 samples, 2.45%)</title><rect x="55.5052%" y="629" width="2.4468%" height="15" fill="rgb(218,194,23)" fg:x="1225" fg:w="54"/><text x="55.7552%" y="639.50">co..</text></g><g><title>core::task::wake::Waker::wake_by_ref (54 samples, 2.45%)</title><rect x="55.5052%" y="613" width="2.4468%" height="15" fill="rgb(235,66,41)" fg:x="1225" fg:w="54"/><text x="55.7552%" y="623.50">co..</text></g><g><title>tokio::runtime::task::waker::wake_by_ref (14 samples, 0.63%)</title><rect x="57.3176%" y="597" width="0.6343%" height="15" fill="rgb(245,217,1)" fg:x="1265" fg:w="14"/><text x="57.5676%" y="607.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (14 samples, 0.63%)</title><rect x="57.3176%" y="581" width="0.6343%" height="15" fill="rgb(229,91,1)" fg:x="1265" fg:w="14"/><text x="57.5676%" y="591.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_ref (14 samples, 0.63%)</title><rect x="57.3176%" y="565" width="0.6343%" height="15" fill="rgb(207,101,30)" fg:x="1265" fg:w="14"/><text x="57.5676%" y="575.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (14 samples, 0.63%)</title><rect x="57.3176%" y="549" width="0.6343%" height="15" fill="rgb(223,82,49)" fg:x="1265" fg:w="14"/><text x="57.5676%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::load (4 samples, 0.18%)</title><rect x="57.7707%" y="533" width="0.1812%" height="15" fill="rgb(218,167,17)" fg:x="1275" fg:w="4"/><text x="58.0207%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.18%)</title><rect x="57.7707%" y="517" width="0.1812%" height="15" fill="rgb(208,103,14)" fg:x="1275" fg:w="4"/><text x="58.0207%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.18%)</title><rect x="57.7707%" y="501" width="0.1812%" height="15" fill="rgb(238,20,8)" fg:x="1275" fg:w="4"/><text x="58.0207%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;tokio::time::sleep::Sleep&gt;&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="57.9520%" y="693" width="0.0453%" height="15" fill="rgb(218,80,54)" fg:x="1279" fg:w="1"/><text x="58.2020%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;tokio::time::sleep::Sleep&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="57.9520%" y="677" width="0.0453%" height="15" fill="rgb(240,144,17)" fg:x="1279" fg:w="1"/><text x="58.2020%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::time::sleep::Sleep&gt;&gt; (1 samples, 0.05%)</title><rect x="57.9520%" y="661" width="0.0453%" height="15" fill="rgb(245,27,50)" fg:x="1279" fg:w="1"/><text x="58.2020%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::sleep::Sleep&gt; (1 samples, 0.05%)</title><rect x="57.9520%" y="645" width="0.0453%" height="15" fill="rgb(251,51,7)" fg:x="1279" fg:w="1"/><text x="58.2020%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::time::entry::TimerEntry&gt; (1 samples, 0.05%)</title><rect x="57.9520%" y="629" width="0.0453%" height="15" fill="rgb(245,217,29)" fg:x="1279" fg:w="1"/><text x="58.2020%" y="639.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::clear_entry (1 samples, 0.05%)</title><rect x="57.9520%" y="613" width="0.0453%" height="15" fill="rgb(221,176,29)" fg:x="1279" fg:w="1"/><text x="58.2020%" y="623.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::remove (1 samples, 0.05%)</title><rect x="57.9520%" y="597" width="0.0453%" height="15" fill="rgb(212,180,24)" fg:x="1279" fg:w="1"/><text x="58.2020%" y="607.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::remove_entry (1 samples, 0.05%)</title><rect x="57.9520%" y="581" width="0.0453%" height="15" fill="rgb(254,24,2)" fg:x="1279" fg:w="1"/><text x="58.2020%" y="591.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (1 samples, 0.05%)</title><rect x="57.9520%" y="565" width="0.0453%" height="15" fill="rgb(230,100,2)" fg:x="1279" fg:w="1"/><text x="58.2020%" y="575.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (1 samples, 0.05%)</title><rect x="57.9973%" y="645" width="0.0453%" height="15" fill="rgb(219,142,25)" fg:x="1280" fg:w="1"/><text x="58.2473%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.14%)</title><rect x="57.9973%" y="677" width="0.1359%" height="15" fill="rgb(240,73,43)" fg:x="1280" fg:w="3"/><text x="58.2473%" y="687.50"></text></g><g><title>tokio_util::time::delay_queue::DelayQueue&lt;T&gt;::next_deadline::_{{closure}} (3 samples, 0.14%)</title><rect x="57.9973%" y="661" width="0.1359%" height="15" fill="rgb(214,114,15)" fg:x="1280" fg:w="3"/><text x="58.2473%" y="671.50"></text></g><g><title>core::time::Duration::from_millis (2 samples, 0.09%)</title><rect x="58.0426%" y="645" width="0.0906%" height="15" fill="rgb(207,130,4)" fg:x="1281" fg:w="2"/><text x="58.2926%" y="655.50"></text></g><g><title>tokio_util::time::wheel::level::Level&lt;T&gt;::next_occupied_slot (7 samples, 0.32%)</title><rect x="58.9035%" y="629" width="0.3172%" height="15" fill="rgb(221,25,40)" fg:x="1300" fg:w="7"/><text x="59.1535%" y="639.50"></text></g><g><title>tokio_util::time::wheel::level::slot_range (4 samples, 0.18%)</title><rect x="59.0394%" y="613" width="0.1812%" height="15" fill="rgb(241,184,7)" fg:x="1303" fg:w="4"/><text x="59.2894%" y="623.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (3 samples, 0.14%)</title><rect x="59.0847%" y="597" width="0.1359%" height="15" fill="rgb(235,159,4)" fg:x="1304" fg:w="3"/><text x="59.3347%" y="607.50"></text></g><g><title>tokio_util::time::delay_queue::DelayQueue&lt;T&gt;::next_deadline (28 samples, 1.27%)</title><rect x="57.9973%" y="693" width="1.2687%" height="15" fill="rgb(214,87,48)" fg:x="1280" fg:w="28"/><text x="58.2473%" y="703.50"></text></g><g><title>tokio_util::time::wheel::Wheel&lt;T&gt;::poll_at (25 samples, 1.13%)</title><rect x="58.1332%" y="677" width="1.1328%" height="15" fill="rgb(246,198,24)" fg:x="1283" fg:w="25"/><text x="58.3832%" y="687.50"></text></g><g><title>tokio_util::time::wheel::Wheel&lt;T&gt;::next_expiration (25 samples, 1.13%)</title><rect x="58.1332%" y="661" width="1.1328%" height="15" fill="rgb(209,66,40)" fg:x="1283" fg:w="25"/><text x="58.3832%" y="671.50"></text></g><g><title>tokio_util::time::wheel::level::Level&lt;T&gt;::next_expiration (17 samples, 0.77%)</title><rect x="58.4957%" y="645" width="0.7703%" height="15" fill="rgb(233,147,39)" fg:x="1291" fg:w="17"/><text x="58.7457%" y="655.50"></text></g><g><title>tokio_util::time::wheel::level::slot_range (1 samples, 0.05%)</title><rect x="59.2207%" y="629" width="0.0453%" height="15" fill="rgb(231,145,52)" fg:x="1307" fg:w="1"/><text x="59.4707%" y="639.50"></text></g><g><title>&lt;tokio_util::time::delay_queue::Stack&lt;T&gt; as tokio_util::time::wheel::stack::Stack&gt;::when (1 samples, 0.05%)</title><rect x="59.2660%" y="661" width="0.0453%" height="15" fill="rgb(206,20,26)" fg:x="1308" fg:w="1"/><text x="59.5160%" y="671.50"></text></g><g><title>&lt;tokio_util::time::delay_queue::SlabStorage&lt;T&gt; as core::ops::index::Index&lt;tokio_util::time::delay_queue::Key&gt;&gt;::index (1 samples, 0.05%)</title><rect x="59.2660%" y="645" width="0.0453%" height="15" fill="rgb(238,220,4)" fg:x="1308" fg:w="1"/><text x="59.5160%" y="655.50"></text></g><g><title>tokio_util::time::delay_queue::SlabStorage&lt;T&gt;::remap_key (1 samples, 0.05%)</title><rect x="59.2660%" y="629" width="0.0453%" height="15" fill="rgb(252,195,42)" fg:x="1308" fg:w="1"/><text x="59.5160%" y="639.50"></text></g><g><title>tokio_util::time::wheel::Wheel&lt;T&gt;::level_for (1 samples, 0.05%)</title><rect x="59.3113%" y="661" width="0.0453%" height="15" fill="rgb(209,10,6)" fg:x="1309" fg:w="1"/><text x="59.5613%" y="671.50"></text></g><g><title>tokio_util::time::wheel::level_for (1 samples, 0.05%)</title><rect x="59.3113%" y="645" width="0.0453%" height="15" fill="rgb(229,3,52)" fg:x="1309" fg:w="1"/><text x="59.5613%" y="655.50"></text></g><g><title>&lt;tokio_util::time::delay_queue::Stack&lt;T&gt; as tokio_util::time::wheel::stack::Stack&gt;::remove (8 samples, 0.36%)</title><rect x="59.4019%" y="645" width="0.3625%" height="15" fill="rgb(253,49,37)" fg:x="1311" fg:w="8"/><text x="59.6519%" y="655.50"></text></g><g><title>&lt;tokio_util::time::delay_queue::SlabStorage&lt;T&gt; as core::ops::index::Index&lt;tokio_util::time::delay_queue::Key&gt;&gt;::index (6 samples, 0.27%)</title><rect x="59.4925%" y="629" width="0.2719%" height="15" fill="rgb(240,103,49)" fg:x="1313" fg:w="6"/><text x="59.7425%" y="639.50"></text></g><g><title>&lt;slab::Slab&lt;T&gt; as core::ops::index::Index&lt;usize&gt;&gt;::index (2 samples, 0.09%)</title><rect x="59.6738%" y="613" width="0.0906%" height="15" fill="rgb(250,182,30)" fg:x="1317" fg:w="2"/><text x="59.9238%" y="623.50"></text></g><g><title>tokio_util::time::delay_queue::DelayQueue&lt;T&gt;::remove_key (12 samples, 0.54%)</title><rect x="59.2660%" y="693" width="0.5437%" height="15" fill="rgb(248,8,30)" fg:x="1308" fg:w="12"/><text x="59.5160%" y="703.50"></text></g><g><title>tokio_util::time::wheel::Wheel&lt;T&gt;::remove (12 samples, 0.54%)</title><rect x="59.2660%" y="677" width="0.5437%" height="15" fill="rgb(237,120,30)" fg:x="1308" fg:w="12"/><text x="59.5160%" y="687.50"></text></g><g><title>tokio_util::time::wheel::level::Level&lt;T&gt;::remove_entry (10 samples, 0.45%)</title><rect x="59.3566%" y="661" width="0.4531%" height="15" fill="rgb(221,146,34)" fg:x="1310" fg:w="10"/><text x="59.6066%" y="671.50"></text></g><g><title>tokio_util::time::wheel::level::slot_for (1 samples, 0.05%)</title><rect x="59.7644%" y="645" width="0.0453%" height="15" fill="rgb(242,55,13)" fg:x="1319" fg:w="1"/><text x="60.0144%" y="655.50"></text></g><g><title>tarpc::client::in_flight_requests::InFlightRequests&lt;Res&gt;::complete_request (146 samples, 6.62%)</title><rect x="53.3303%" y="725" width="6.6153%" height="15" fill="rgb(242,112,31)" fg:x="1177" fg:w="146"/><text x="53.5803%" y="735.50">tarpc::cl..</text></g><g><title>tokio_util::time::delay_queue::DelayQueue&lt;T&gt;::remove (44 samples, 1.99%)</title><rect x="57.9520%" y="709" width="1.9937%" height="15" fill="rgb(249,192,27)" fg:x="1279" fg:w="44"/><text x="58.2020%" y="719.50">t..</text></g><g><title>tokio_util::time::delay_queue::SlabStorage&lt;T&gt;::remove (3 samples, 0.14%)</title><rect x="59.8097%" y="693" width="0.1359%" height="15" fill="rgb(208,204,44)" fg:x="1320" fg:w="3"/><text x="60.0597%" y="703.50"></text></g><g><title>slab::Slab&lt;T&gt;::remove (2 samples, 0.09%)</title><rect x="59.8550%" y="677" width="0.0906%" height="15" fill="rgb(208,93,54)" fg:x="1321" fg:w="2"/><text x="60.1050%" y="687.50"></text></g><g><title>slab::Slab&lt;T&gt;::try_remove (2 samples, 0.09%)</title><rect x="59.8550%" y="661" width="0.0906%" height="15" fill="rgb(242,1,31)" fg:x="1321" fg:w="2"/><text x="60.1050%" y="671.50"></text></g><g><title>core::mem::replace (2 samples, 0.09%)</title><rect x="59.8550%" y="645" width="0.0906%" height="15" fill="rgb(241,83,25)" fg:x="1321" fg:w="2"/><text x="60.1050%" y="655.50"></text></g><g><title>core::ptr::read (2 samples, 0.09%)</title><rect x="59.8550%" y="629" width="0.0906%" height="15" fill="rgb(205,169,50)" fg:x="1321" fg:w="2"/><text x="60.1050%" y="639.50"></text></g><g><title>tarpc::client::RequestDispatch&lt;Req,Resp,C&gt;::pump_read (287 samples, 13.00%)</title><rect x="46.9869%" y="789" width="13.0041%" height="15" fill="rgb(239,186,37)" fg:x="1037" fg:w="287"/><text x="47.2369%" y="799.50">tarpc::client::Reque..</text></g><g><title>core::task::poll::Poll&lt;core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::map_ok (150 samples, 6.80%)</title><rect x="53.1944%" y="773" width="6.7966%" height="15" fill="rgb(205,221,10)" fg:x="1174" fg:w="150"/><text x="53.4444%" y="783.50">core::tas..</text></g><g><title>tarpc::client::RequestDispatch&lt;Req,Resp,C&gt;::pump_read::_{{closure}} (150 samples, 6.80%)</title><rect x="53.1944%" y="757" width="6.7966%" height="15" fill="rgb(218,196,15)" fg:x="1174" fg:w="150"/><text x="53.4444%" y="767.50">tarpc::cl..</text></g><g><title>tarpc::client::RequestDispatch&lt;Req,Resp,C&gt;::complete (150 samples, 6.80%)</title><rect x="53.1944%" y="741" width="6.7966%" height="15" fill="rgb(218,196,35)" fg:x="1174" fg:w="150"/><text x="53.4444%" y="751.50">tarpc::cl..</text></g><g><title>tracing::span::Span::enter (1 samples, 0.05%)</title><rect x="59.9456%" y="725" width="0.0453%" height="15" fill="rgb(233,63,24)" fg:x="1323" fg:w="1"/><text x="60.1956%" y="735.50"></text></g><g><title>tracing::span::Span::do_enter (1 samples, 0.05%)</title><rect x="59.9456%" y="709" width="0.0453%" height="15" fill="rgb(225,8,4)" fg:x="1323" fg:w="1"/><text x="60.1956%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.05%)</title><rect x="59.9456%" y="693" width="0.0453%" height="15" fill="rgb(234,105,35)" fg:x="1323" fg:w="1"/><text x="60.1956%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::Error&gt; (1 samples, 0.05%)</title><rect x="60.0816%" y="661" width="0.0453%" height="15" fill="rgb(236,21,32)" fg:x="1326" fg:w="1"/><text x="60.3316%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::repr_bitpacked::Repr&gt; (1 samples, 0.05%)</title><rect x="60.0816%" y="645" width="0.0453%" height="15" fill="rgb(228,109,6)" fg:x="1326" fg:w="1"/><text x="60.3316%" y="655.50"></text></g><g><title>&lt;std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="60.0816%" y="629" width="0.0453%" height="15" fill="rgb(229,215,31)" fg:x="1326" fg:w="1"/><text x="60.3316%" y="639.50"></text></g><g><title>std::io::error::repr_bitpacked::decode_repr (1 samples, 0.05%)</title><rect x="60.0816%" y="613" width="0.0453%" height="15" fill="rgb(221,52,54)" fg:x="1326" fg:w="1"/><text x="60.3316%" y="623.50"></text></g><g><title>tokio_tungstenite::compat::cvt (4 samples, 0.18%)</title><rect x="60.0362%" y="677" width="0.1812%" height="15" fill="rgb(252,129,43)" fg:x="1325" fg:w="4"/><text x="60.2862%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tungstenite::error::Error&gt; (2 samples, 0.09%)</title><rect x="60.1269%" y="661" width="0.0906%" height="15" fill="rgb(248,183,27)" fg:x="1327" fg:w="2"/><text x="60.3769%" y="671.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 0.05%)</title><rect x="60.2628%" y="517" width="0.0453%" height="15" fill="rgb(250,0,22)" fg:x="1330" fg:w="1"/><text x="60.5128%" y="527.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.05%)</title><rect x="60.2628%" y="501" width="0.0453%" height="15" fill="rgb(213,166,10)" fg:x="1330" fg:w="1"/><text x="60.5128%" y="511.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (1 samples, 0.05%)</title><rect x="60.2628%" y="485" width="0.0453%" height="15" fill="rgb(207,163,36)" fg:x="1330" fg:w="1"/><text x="60.5128%" y="495.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (1 samples, 0.05%)</title><rect x="60.2628%" y="469" width="0.0453%" height="15" fill="rgb(208,122,22)" fg:x="1330" fg:w="1"/><text x="60.5128%" y="479.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.05%)</title><rect x="60.2628%" y="453" width="0.0453%" height="15" fill="rgb(207,104,49)" fg:x="1330" fg:w="1"/><text x="60.5128%" y="463.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.05%)</title><rect x="60.2628%" y="437" width="0.0453%" height="15" fill="rgb(248,211,50)" fg:x="1330" fg:w="1"/><text x="60.5128%" y="447.50"></text></g><g><title>__send (1 samples, 0.05%)</title><rect x="60.2628%" y="421" width="0.0453%" height="15" fill="rgb(217,13,45)" fg:x="1330" fg:w="1"/><text x="60.5128%" y="431.50"></text></g><g><title>&lt;tokio_tungstenite::compat::WakerProxy as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (2 samples, 0.09%)</title><rect x="60.3987%" y="373" width="0.0906%" height="15" fill="rgb(211,216,49)" fg:x="1333" fg:w="2"/><text x="60.6487%" y="383.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (2 samples, 0.09%)</title><rect x="60.3987%" y="357" width="0.0906%" height="15" fill="rgb(221,58,53)" fg:x="1333" fg:w="2"/><text x="60.6487%" y="367.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::take (1 samples, 0.05%)</title><rect x="60.4440%" y="341" width="0.0453%" height="15" fill="rgb(220,112,41)" fg:x="1334" fg:w="1"/><text x="60.6940%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.05%)</title><rect x="60.4440%" y="325" width="0.0453%" height="15" fill="rgb(236,38,28)" fg:x="1334" fg:w="1"/><text x="60.6940%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.05%)</title><rect x="60.4440%" y="309" width="0.0453%" height="15" fill="rgb(227,195,22)" fg:x="1334" fg:w="1"/><text x="60.6940%" y="319.50"></text></g><g><title>&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_sink::Sink&lt;tungstenite::protocol::message::Message&gt;&gt;::poll_flush::_{{closure}} (11 samples, 0.50%)</title><rect x="60.0362%" y="693" width="0.4984%" height="15" fill="rgb(214,55,33)" fg:x="1325" fg:w="11"/><text x="60.2862%" y="703.50"></text></g><g><title>tungstenite::protocol::WebSocket&lt;Stream&gt;::flush (7 samples, 0.32%)</title><rect x="60.2175%" y="677" width="0.3172%" height="15" fill="rgb(248,80,13)" fg:x="1329" fg:w="7"/><text x="60.4675%" y="687.50"></text></g><g><title>tungstenite::protocol::WebSocketContext::flush (7 samples, 0.32%)</title><rect x="60.2175%" y="661" width="0.3172%" height="15" fill="rgb(238,52,6)" fg:x="1329" fg:w="7"/><text x="60.4675%" y="671.50"></text></g><g><title>tungstenite::protocol::frame::FrameCodec::write_out_buffer (7 samples, 0.32%)</title><rect x="60.2175%" y="645" width="0.3172%" height="15" fill="rgb(224,198,47)" fg:x="1329" fg:w="7"/><text x="60.4675%" y="655.50"></text></g><g><title>&lt;tokio_tungstenite::compat::AllowStd&lt;S&gt; as std::io::Write&gt;::write (7 samples, 0.32%)</title><rect x="60.2175%" y="629" width="0.3172%" height="15" fill="rgb(233,171,20)" fg:x="1329" fg:w="7"/><text x="60.4675%" y="639.50"></text></g><g><title>tokio_tungstenite::compat::AllowStd&lt;S&gt;::with_context (7 samples, 0.32%)</title><rect x="60.2175%" y="613" width="0.3172%" height="15" fill="rgb(241,30,25)" fg:x="1329" fg:w="7"/><text x="60.4675%" y="623.50"></text></g><g><title>&lt;tokio_tungstenite::compat::AllowStd&lt;S&gt; as std::io::Write&gt;::write::_{{closure}} (7 samples, 0.32%)</title><rect x="60.2175%" y="597" width="0.3172%" height="15" fill="rgb(207,171,38)" fg:x="1329" fg:w="7"/><text x="60.4675%" y="607.50"></text></g><g><title>&lt;tokio_tungstenite::stream::MaybeTlsStream&lt;S&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (7 samples, 0.32%)</title><rect x="60.2175%" y="581" width="0.3172%" height="15" fill="rgb(234,70,1)" fg:x="1329" fg:w="7"/><text x="60.4675%" y="591.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (7 samples, 0.32%)</title><rect x="60.2175%" y="565" width="0.3172%" height="15" fill="rgb(232,178,18)" fg:x="1329" fg:w="7"/><text x="60.4675%" y="575.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (6 samples, 0.27%)</title><rect x="60.2628%" y="549" width="0.2719%" height="15" fill="rgb(241,78,40)" fg:x="1330" fg:w="6"/><text x="60.5128%" y="559.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (6 samples, 0.27%)</title><rect x="60.2628%" y="533" width="0.2719%" height="15" fill="rgb(222,35,25)" fg:x="1330" fg:w="6"/><text x="60.5128%" y="543.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (5 samples, 0.23%)</title><rect x="60.3081%" y="517" width="0.2266%" height="15" fill="rgb(207,92,16)" fg:x="1331" fg:w="5"/><text x="60.5581%" y="527.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (5 samples, 0.23%)</title><rect x="60.3081%" y="501" width="0.2266%" height="15" fill="rgb(216,59,51)" fg:x="1331" fg:w="5"/><text x="60.5581%" y="511.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (4 samples, 0.18%)</title><rect x="60.3534%" y="485" width="0.1812%" height="15" fill="rgb(213,80,28)" fg:x="1332" fg:w="4"/><text x="60.6034%" y="495.50"></text></g><g><title>tokio::runtime::context::budget (4 samples, 0.18%)</title><rect x="60.3534%" y="469" width="0.1812%" height="15" fill="rgb(220,93,7)" fg:x="1332" fg:w="4"/><text x="60.6034%" y="479.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.18%)</title><rect x="60.3534%" y="453" width="0.1812%" height="15" fill="rgb(225,24,44)" fg:x="1332" fg:w="4"/><text x="60.6034%" y="463.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (4 samples, 0.18%)</title><rect x="60.3534%" y="437" width="0.1812%" height="15" fill="rgb(243,74,40)" fg:x="1332" fg:w="4"/><text x="60.6034%" y="447.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (4 samples, 0.18%)</title><rect x="60.3534%" y="421" width="0.1812%" height="15" fill="rgb(228,39,7)" fg:x="1332" fg:w="4"/><text x="60.6034%" y="431.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (4 samples, 0.18%)</title><rect x="60.3534%" y="405" width="0.1812%" height="15" fill="rgb(227,79,8)" fg:x="1332" fg:w="4"/><text x="60.6034%" y="415.50"></text></g><g><title>futures_task::waker::wake_by_ref_arc_raw (3 samples, 0.14%)</title><rect x="60.3987%" y="389" width="0.1359%" height="15" fill="rgb(236,58,11)" fg:x="1333" fg:w="3"/><text x="60.6487%" y="399.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (1 samples, 0.05%)</title><rect x="60.4894%" y="373" width="0.0453%" height="15" fill="rgb(249,63,35)" fg:x="1335" fg:w="1"/><text x="60.7394%" y="383.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::take (1 samples, 0.05%)</title><rect x="60.4894%" y="357" width="0.0453%" height="15" fill="rgb(252,114,16)" fg:x="1335" fg:w="1"/><text x="60.7394%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.05%)</title><rect x="60.4894%" y="341" width="0.0453%" height="15" fill="rgb(254,151,24)" fg:x="1335" fg:w="1"/><text x="60.7394%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.05%)</title><rect x="60.4894%" y="325" width="0.0453%" height="15" fill="rgb(253,54,39)" fg:x="1335" fg:w="1"/><text x="60.7394%" y="335.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="60.6706%" y="661" width="0.0453%" height="15" fill="rgb(243,25,45)" fg:x="1339" fg:w="1"/><text x="60.9206%" y="671.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.05%)</title><rect x="60.6706%" y="645" width="0.0453%" height="15" fill="rgb(234,134,9)" fg:x="1339" fg:w="1"/><text x="60.9206%" y="655.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (1 samples, 0.05%)</title><rect x="60.6706%" y="629" width="0.0453%" height="15" fill="rgb(227,166,31)" fg:x="1339" fg:w="1"/><text x="60.9206%" y="639.50"></text></g><g><title>tarpc::client::RequestDispatch&lt;Req,Resp,C&gt;::poll_flush (18 samples, 0.82%)</title><rect x="59.9909%" y="773" width="0.8156%" height="15" fill="rgb(245,143,41)" fg:x="1324" fg:w="18"/><text x="60.2409%" y="783.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_flush (18 samples, 0.82%)</title><rect x="59.9909%" y="757" width="0.8156%" height="15" fill="rgb(238,181,32)" fg:x="1324" fg:w="18"/><text x="60.2409%" y="767.50"></text></g><g><title>&lt;tarpc_ws_transport::ClientTransport&lt;Req,Resp,Io&gt; as futures_sink::Sink&lt;Req&gt;&gt;::poll_flush (18 samples, 0.82%)</title><rect x="59.9909%" y="741" width="0.8156%" height="15" fill="rgb(224,113,18)" fg:x="1324" fg:w="18"/><text x="60.2409%" y="751.50"></text></g><g><title>&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_sink::Sink&lt;tungstenite::protocol::message::Message&gt;&gt;::poll_flush (18 samples, 0.82%)</title><rect x="59.9909%" y="725" width="0.8156%" height="15" fill="rgb(240,229,28)" fg:x="1324" fg:w="18"/><text x="60.2409%" y="735.50"></text></g><g><title>tokio_tungstenite::WebSocketStream&lt;S&gt;::with_context (17 samples, 0.77%)</title><rect x="60.0362%" y="709" width="0.7703%" height="15" fill="rgb(250,185,3)" fg:x="1325" fg:w="17"/><text x="60.2862%" y="719.50"></text></g><g><title>tokio_tungstenite::compat::AllowStd&lt;S&gt;::set_waker (6 samples, 0.27%)</title><rect x="60.5347%" y="693" width="0.2719%" height="15" fill="rgb(212,59,25)" fg:x="1336" fg:w="6"/><text x="60.7847%" y="703.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (6 samples, 0.27%)</title><rect x="60.5347%" y="677" width="0.2719%" height="15" fill="rgb(221,87,20)" fg:x="1336" fg:w="6"/><text x="60.7847%" y="687.50"></text></g><g><title>core::task::wake::Waker::will_wake (2 samples, 0.09%)</title><rect x="60.7159%" y="661" width="0.0906%" height="15" fill="rgb(213,74,28)" fg:x="1340" fg:w="2"/><text x="60.9659%" y="671.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (2 samples, 0.09%)</title><rect x="60.7159%" y="645" width="0.0906%" height="15" fill="rgb(224,132,34)" fg:x="1340" fg:w="2"/><text x="60.9659%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.09%)</title><rect x="60.7159%" y="629" width="0.0906%" height="15" fill="rgb(222,101,24)" fg:x="1340" fg:w="2"/><text x="60.9659%" y="639.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (2 samples, 0.09%)</title><rect x="60.7159%" y="613" width="0.0906%" height="15" fill="rgb(254,142,4)" fg:x="1340" fg:w="2"/><text x="60.9659%" y="623.50"></text></g><g><title>tarpc::client::RequestDispatch&lt;Req,Resp,C&gt;::poll_write_cancel (1 samples, 0.05%)</title><rect x="60.8065%" y="773" width="0.0453%" height="15" fill="rgb(230,229,49)" fg:x="1342" fg:w="1"/><text x="61.0565%" y="783.50"></text></g><g><title>tarpc::client::RequestDispatch&lt;Req,Resp,C&gt;::poll_next_cancellation (1 samples, 0.05%)</title><rect x="60.8065%" y="757" width="0.0453%" height="15" fill="rgb(238,70,47)" fg:x="1342" fg:w="1"/><text x="61.0565%" y="767.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1 samples, 0.05%)</title><rect x="60.8065%" y="741" width="0.0453%" height="15" fill="rgb(231,160,17)" fg:x="1342" fg:w="1"/><text x="61.0565%" y="751.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (1 samples, 0.05%)</title><rect x="60.8065%" y="725" width="0.0453%" height="15" fill="rgb(218,68,53)" fg:x="1342" fg:w="1"/><text x="61.0565%" y="735.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.05%)</title><rect x="60.8971%" y="757" width="0.0453%" height="15" fill="rgb(236,111,10)" fg:x="1344" fg:w="1"/><text x="61.1471%" y="767.50"></text></g><g><title>&lt;tracing::span::Span as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="60.9425%" y="757" width="0.0453%" height="15" fill="rgb(224,34,41)" fg:x="1345" fg:w="1"/><text x="61.1925%" y="767.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="60.9425%" y="741" width="0.0453%" height="15" fill="rgb(241,118,19)" fg:x="1345" fg:w="1"/><text x="61.1925%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.05%)</title><rect x="60.9878%" y="757" width="0.0453%" height="15" fill="rgb(238,129,25)" fg:x="1346" fg:w="1"/><text x="61.2378%" y="767.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (4 samples, 0.18%)</title><rect x="61.1690%" y="709" width="0.1812%" height="15" fill="rgb(238,22,31)" fg:x="1350" fg:w="4"/><text x="61.4190%" y="719.50"></text></g><g><title>&lt;tarpc_ws_transport::ClientTransport&lt;Req,Resp,Io&gt; as futures_sink::Sink&lt;Req&gt;&gt;::poll_ready (4 samples, 0.18%)</title><rect x="61.1690%" y="693" width="0.1812%" height="15" fill="rgb(222,174,48)" fg:x="1350" fg:w="4"/><text x="61.4190%" y="703.50"></text></g><g><title>&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_sink::Sink&lt;tungstenite::protocol::message::Message&gt;&gt;::poll_ready (1 samples, 0.05%)</title><rect x="61.3049%" y="677" width="0.0453%" height="15" fill="rgb(206,152,40)" fg:x="1353" fg:w="1"/><text x="61.5549%" y="687.50"></text></g><g><title>tarpc::client::RequestDispatch&lt;Req,Resp,C&gt;::ensure_writeable (5 samples, 0.23%)</title><rect x="61.1690%" y="741" width="0.2266%" height="15" fill="rgb(218,99,54)" fg:x="1350" fg:w="5"/><text x="61.4190%" y="751.50"></text></g><g><title>tarpc::client::RequestDispatch&lt;Req,Resp,C&gt;::poll_ready (5 samples, 0.23%)</title><rect x="61.1690%" y="725" width="0.2266%" height="15" fill="rgb(220,174,26)" fg:x="1350" fg:w="5"/><text x="61.4190%" y="735.50"></text></g><g><title>core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (1 samples, 0.05%)</title><rect x="61.3502%" y="709" width="0.0453%" height="15" fill="rgb(245,116,9)" fg:x="1354" fg:w="1"/><text x="61.6002%" y="719.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (4 samples, 0.18%)</title><rect x="61.7580%" y="677" width="0.1812%" height="15" fill="rgb(209,72,35)" fg:x="1363" fg:w="4"/><text x="62.0080%" y="687.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (4 samples, 0.18%)</title><rect x="61.7580%" y="661" width="0.1812%" height="15" fill="rgb(226,126,21)" fg:x="1363" fg:w="4"/><text x="62.0080%" y="671.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.18%)</title><rect x="61.7580%" y="645" width="0.1812%" height="15" fill="rgb(227,192,1)" fg:x="1363" fg:w="4"/><text x="62.0080%" y="655.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.18%)</title><rect x="61.7580%" y="629" width="0.1812%" height="15" fill="rgb(237,180,29)" fg:x="1363" fg:w="4"/><text x="62.0080%" y="639.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (4 samples, 0.18%)</title><rect x="61.7580%" y="613" width="0.1812%" height="15" fill="rgb(230,197,35)" fg:x="1363" fg:w="4"/><text x="62.0080%" y="623.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::assign_permits (20 samples, 0.91%)</title><rect x="62.0752%" y="661" width="0.9062%" height="15" fill="rgb(246,193,31)" fg:x="1370" fg:w="20"/><text x="62.3252%" y="671.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (2 samples, 0.09%)</title><rect x="62.9814%" y="661" width="0.0906%" height="15" fill="rgb(241,36,4)" fg:x="1390" fg:w="2"/><text x="63.2314%" y="671.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::set_next (2 samples, 0.09%)</title><rect x="62.9814%" y="645" width="0.0906%" height="15" fill="rgb(241,130,17)" fg:x="1390" fg:w="2"/><text x="63.2314%" y="655.50"></text></g><g><title>core::ptr::write (2 samples, 0.09%)</title><rect x="62.9814%" y="629" width="0.0906%" height="15" fill="rgb(206,137,32)" fg:x="1390" fg:w="2"/><text x="63.2314%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (1 samples, 0.05%)</title><rect x="63.0720%" y="597" width="0.0453%" height="15" fill="rgb(237,228,51)" fg:x="1392" fg:w="1"/><text x="63.3220%" y="607.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.05%)</title><rect x="63.1627%" y="501" width="0.0453%" height="15" fill="rgb(243,6,42)" fg:x="1394" fg:w="1"/><text x="63.4127%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.05%)</title><rect x="63.1627%" y="485" width="0.0453%" height="15" fill="rgb(251,74,28)" fg:x="1394" fg:w="1"/><text x="63.4127%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.05%)</title><rect x="63.2080%" y="485" width="0.0453%" height="15" fill="rgb(218,20,49)" fg:x="1395" fg:w="1"/><text x="63.4580%" y="495.50"></text></g><g><title>core::mem::replace (1 samples, 0.05%)</title><rect x="63.2080%" y="469" width="0.0453%" height="15" fill="rgb(238,28,14)" fg:x="1395" fg:w="1"/><text x="63.4580%" y="479.50"></text></g><g><title>core::ptr::write (1 samples, 0.05%)</title><rect x="63.2080%" y="453" width="0.0453%" height="15" fill="rgb(229,40,46)" fg:x="1395" fg:w="1"/><text x="63.4580%" y="463.50"></text></g><g><title>syscall (2 samples, 0.09%)</title><rect x="63.2986%" y="437" width="0.0906%" height="15" fill="rgb(244,195,20)" fg:x="1397" fg:w="2"/><text x="63.5486%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="63.2986%" y="421" width="0.0906%" height="15" fill="rgb(253,56,35)" fg:x="1397" fg:w="2"/><text x="63.5486%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="63.3439%" y="405" width="0.0453%" height="15" fill="rgb(210,149,44)" fg:x="1398" fg:w="1"/><text x="63.5939%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="63.3439%" y="389" width="0.0453%" height="15" fill="rgb(240,135,12)" fg:x="1398" fg:w="1"/><text x="63.5939%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="63.3439%" y="373" width="0.0453%" height="15" fill="rgb(251,24,50)" fg:x="1398" fg:w="1"/><text x="63.5939%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="63.3439%" y="357" width="0.0453%" height="15" fill="rgb(243,200,47)" fg:x="1398" fg:w="1"/><text x="63.5939%" y="367.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.05%)</title><rect x="63.4345%" y="405" width="0.0453%" height="15" fill="rgb(224,166,26)" fg:x="1400" fg:w="1"/><text x="63.6845%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (3 samples, 0.14%)</title><rect x="63.3892%" y="421" width="0.1359%" height="15" fill="rgb(233,0,47)" fg:x="1399" fg:w="3"/><text x="63.6392%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_finish (1 samples, 0.05%)</title><rect x="63.4798%" y="405" width="0.0453%" height="15" fill="rgb(253,80,5)" fg:x="1401" fg:w="1"/><text x="63.7298%" y="415.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.05%)</title><rect x="63.4798%" y="389" width="0.0453%" height="15" fill="rgb(214,133,25)" fg:x="1401" fg:w="1"/><text x="63.7298%" y="399.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.05%)</title><rect x="63.5251%" y="389" width="0.0453%" height="15" fill="rgb(209,27,14)" fg:x="1402" fg:w="1"/><text x="63.7751%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.05%)</title><rect x="63.5251%" y="373" width="0.0453%" height="15" fill="rgb(219,102,51)" fg:x="1402" fg:w="1"/><text x="63.7751%" y="383.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.05%)</title><rect x="63.5251%" y="357" width="0.0453%" height="15" fill="rgb(237,18,16)" fg:x="1402" fg:w="1"/><text x="63.7751%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (18 samples, 0.82%)</title><rect x="63.8876%" y="373" width="0.8156%" height="15" fill="rgb(241,85,17)" fg:x="1410" fg:w="18"/><text x="64.1376%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_add (18 samples, 0.82%)</title><rect x="63.8876%" y="357" width="0.8156%" height="15" fill="rgb(236,90,42)" fg:x="1410" fg:w="18"/><text x="64.1376%" y="367.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (37 samples, 1.68%)</title><rect x="63.1174%" y="597" width="1.6765%" height="15" fill="rgb(249,57,21)" fg:x="1393" fg:w="37"/><text x="63.3674%" y="607.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (37 samples, 1.68%)</title><rect x="63.1174%" y="581" width="1.6765%" height="15" fill="rgb(243,12,36)" fg:x="1393" fg:w="37"/><text x="63.3674%" y="591.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (37 samples, 1.68%)</title><rect x="63.1174%" y="565" width="1.6765%" height="15" fill="rgb(253,128,47)" fg:x="1393" fg:w="37"/><text x="63.3674%" y="575.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (37 samples, 1.68%)</title><rect x="63.1174%" y="549" width="1.6765%" height="15" fill="rgb(207,33,20)" fg:x="1393" fg:w="37"/><text x="63.3674%" y="559.50"></text></g><g><title>tokio::runtime::context::with_scheduler (37 samples, 1.68%)</title><rect x="63.1174%" y="533" width="1.6765%" height="15" fill="rgb(233,215,35)" fg:x="1393" fg:w="37"/><text x="63.3674%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (36 samples, 1.63%)</title><rect x="63.1627%" y="517" width="1.6312%" height="15" fill="rgb(249,188,52)" fg:x="1394" fg:w="36"/><text x="63.4127%" y="527.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (35 samples, 1.59%)</title><rect x="63.2080%" y="501" width="1.5859%" height="15" fill="rgb(225,12,32)" fg:x="1395" fg:w="35"/><text x="63.4580%" y="511.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (34 samples, 1.54%)</title><rect x="63.2533%" y="485" width="1.5406%" height="15" fill="rgb(247,98,14)" fg:x="1396" fg:w="34"/><text x="63.5033%" y="495.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (34 samples, 1.54%)</title><rect x="63.2533%" y="469" width="1.5406%" height="15" fill="rgb(247,219,48)" fg:x="1396" fg:w="34"/><text x="63.5033%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (33 samples, 1.50%)</title><rect x="63.2986%" y="453" width="1.4952%" height="15" fill="rgb(253,60,48)" fg:x="1397" fg:w="33"/><text x="63.5486%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (31 samples, 1.40%)</title><rect x="63.3892%" y="437" width="1.4046%" height="15" fill="rgb(245,15,52)" fg:x="1399" fg:w="31"/><text x="63.6392%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (28 samples, 1.27%)</title><rect x="63.5251%" y="421" width="1.2687%" height="15" fill="rgb(220,133,28)" fg:x="1402" fg:w="28"/><text x="63.7751%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (28 samples, 1.27%)</title><rect x="63.5251%" y="405" width="1.2687%" height="15" fill="rgb(217,180,4)" fg:x="1402" fg:w="28"/><text x="63.7751%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (27 samples, 1.22%)</title><rect x="63.5705%" y="389" width="1.2234%" height="15" fill="rgb(251,24,1)" fg:x="1403" fg:w="27"/><text x="63.8205%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::num_unparked (2 samples, 0.09%)</title><rect x="64.7032%" y="373" width="0.0906%" height="15" fill="rgb(212,185,49)" fg:x="1428" fg:w="2"/><text x="64.9532%" y="383.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (66 samples, 2.99%)</title><rect x="61.9393%" y="677" width="2.9905%" height="15" fill="rgb(215,175,22)" fg:x="1367" fg:w="66"/><text x="62.1893%" y="687.50">tok..</text></g><g><title>tokio::util::wake_list::WakeList::wake_all (41 samples, 1.86%)</title><rect x="63.0720%" y="661" width="1.8577%" height="15" fill="rgb(250,205,14)" fg:x="1392" fg:w="41"/><text x="63.3220%" y="671.50">t..</text></g><g><title>core::task::wake::Waker::wake (41 samples, 1.86%)</title><rect x="63.0720%" y="645" width="1.8577%" height="15" fill="rgb(225,211,22)" fg:x="1392" fg:w="41"/><text x="63.3220%" y="655.50">c..</text></g><g><title>tokio::runtime::task::waker::wake_by_val (41 samples, 1.86%)</title><rect x="63.0720%" y="629" width="1.8577%" height="15" fill="rgb(251,179,42)" fg:x="1392" fg:w="41"/><text x="63.3220%" y="639.50">t..</text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (41 samples, 1.86%)</title><rect x="63.0720%" y="613" width="1.8577%" height="15" fill="rgb(208,216,51)" fg:x="1392" fg:w="41"/><text x="63.3220%" y="623.50">t..</text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (3 samples, 0.14%)</title><rect x="64.7938%" y="597" width="0.1359%" height="15" fill="rgb(235,36,11)" fg:x="1430" fg:w="3"/><text x="65.0438%" y="607.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (3 samples, 0.14%)</title><rect x="64.7938%" y="581" width="0.1359%" height="15" fill="rgb(213,189,28)" fg:x="1430" fg:w="3"/><text x="65.0438%" y="591.50"></text></g><g><title>tokio::runtime::task::state::State::load (3 samples, 0.14%)</title><rect x="64.7938%" y="565" width="0.1359%" height="15" fill="rgb(227,203,42)" fg:x="1430" fg:w="3"/><text x="65.0438%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.14%)</title><rect x="64.7938%" y="549" width="0.1359%" height="15" fill="rgb(244,72,36)" fg:x="1430" fg:w="3"/><text x="65.0438%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.14%)</title><rect x="64.7938%" y="533" width="0.1359%" height="15" fill="rgb(213,53,17)" fg:x="1430" fg:w="3"/><text x="65.0438%" y="543.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (2 samples, 0.09%)</title><rect x="65.1563%" y="645" width="0.0906%" height="15" fill="rgb(207,167,3)" fg:x="1438" fg:w="2"/><text x="65.4063%" y="655.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read::_{{closure}} (2 samples, 0.09%)</title><rect x="65.1563%" y="629" width="0.0906%" height="15" fill="rgb(216,98,30)" fg:x="1438" fg:w="2"/><text x="65.4063%" y="639.50"></text></g><g><title>core::ptr::read (2 samples, 0.09%)</title><rect x="65.1563%" y="613" width="0.0906%" height="15" fill="rgb(236,123,15)" fg:x="1438" fg:w="2"/><text x="65.4063%" y="623.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read (3 samples, 0.14%)</title><rect x="65.1563%" y="661" width="0.1359%" height="15" fill="rgb(248,81,50)" fg:x="1438" fg:w="3"/><text x="65.4063%" y="671.50"></text></g><g><title>tokio::sync::mpsc::block::is_ready (1 samples, 0.05%)</title><rect x="65.2469%" y="645" width="0.0453%" height="15" fill="rgb(214,120,4)" fg:x="1440" fg:w="1"/><text x="65.4969%" y="655.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::reclaim_blocks (2 samples, 0.09%)</title><rect x="65.2923%" y="661" width="0.0906%" height="15" fill="rgb(208,179,34)" fg:x="1441" fg:w="2"/><text x="65.5423%" y="671.50"></text></g><g><title>core::cmp::PartialEq::ne (2 samples, 0.09%)</title><rect x="65.2923%" y="645" width="0.0906%" height="15" fill="rgb(227,140,7)" fg:x="1441" fg:w="2"/><text x="65.5423%" y="655.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.09%)</title><rect x="65.2923%" y="629" width="0.0906%" height="15" fill="rgb(214,22,6)" fg:x="1441" fg:w="2"/><text x="65.5423%" y="639.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (13 samples, 0.59%)</title><rect x="64.9298%" y="677" width="0.5890%" height="15" fill="rgb(207,137,27)" fg:x="1433" fg:w="13"/><text x="65.1798%" y="687.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::try_advancing_head (3 samples, 0.14%)</title><rect x="65.3829%" y="661" width="0.1359%" height="15" fill="rgb(210,8,46)" fg:x="1443" fg:w="3"/><text x="65.6329%" y="671.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (88 samples, 3.99%)</title><rect x="61.5768%" y="709" width="3.9873%" height="15" fill="rgb(240,16,54)" fg:x="1359" fg:w="88"/><text x="61.8268%" y="719.50">toki..</text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv::_{{closure}} (88 samples, 3.99%)</title><rect x="61.5768%" y="693" width="3.9873%" height="15" fill="rgb(211,209,29)" fg:x="1359" fg:w="88"/><text x="61.8268%" y="703.50">toki..</text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (1 samples, 0.05%)</title><rect x="65.5188%" y="677" width="0.0453%" height="15" fill="rgb(226,228,24)" fg:x="1446" fg:w="1"/><text x="65.7688%" y="687.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (1 samples, 0.05%)</title><rect x="65.5188%" y="661" width="0.0453%" height="15" fill="rgb(222,84,9)" fg:x="1446" fg:w="1"/><text x="65.7688%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (1 samples, 0.05%)</title><rect x="65.5641%" y="693" width="0.0453%" height="15" fill="rgb(234,203,30)" fg:x="1447" fg:w="1"/><text x="65.8141%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::poll::Poll&lt;tokio::runtime::coop::RestoreOnPending&gt;&gt; (1 samples, 0.05%)</title><rect x="65.5641%" y="677" width="0.0453%" height="15" fill="rgb(238,109,14)" fg:x="1447" fg:w="1"/><text x="65.8141%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::RestoreOnPending&gt; (1 samples, 0.05%)</title><rect x="65.5641%" y="661" width="0.0453%" height="15" fill="rgb(233,206,34)" fg:x="1447" fg:w="1"/><text x="65.8141%" y="671.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="65.5641%" y="645" width="0.0453%" height="15" fill="rgb(220,167,47)" fg:x="1447" fg:w="1"/><text x="65.8141%" y="655.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::poll_recv (94 samples, 4.26%)</title><rect x="61.3956%" y="741" width="4.2592%" height="15" fill="rgb(238,105,10)" fg:x="1355" fg:w="94"/><text x="61.6456%" y="751.50">tokio..</text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (93 samples, 4.21%)</title><rect x="61.4409%" y="725" width="4.2139%" height="15" fill="rgb(213,227,17)" fg:x="1356" fg:w="93"/><text x="61.6909%" y="735.50">tokio..</text></g><g><title>tokio::runtime::coop::poll_proceed (2 samples, 0.09%)</title><rect x="65.5641%" y="709" width="0.0906%" height="15" fill="rgb(217,132,38)" fg:x="1447" fg:w="2"/><text x="65.8141%" y="719.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.05%)</title><rect x="65.6094%" y="693" width="0.0453%" height="15" fill="rgb(242,146,4)" fg:x="1448" fg:w="1"/><text x="65.8594%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.05%)</title><rect x="65.6094%" y="677" width="0.0453%" height="15" fill="rgb(212,61,9)" fg:x="1448" fg:w="1"/><text x="65.8594%" y="687.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (1 samples, 0.05%)</title><rect x="65.6094%" y="661" width="0.0453%" height="15" fill="rgb(247,126,22)" fg:x="1448" fg:w="1"/><text x="65.8594%" y="671.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (1 samples, 0.05%)</title><rect x="65.6094%" y="645" width="0.0453%" height="15" fill="rgb(220,196,2)" fg:x="1448" fg:w="1"/><text x="65.8594%" y="655.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (1 samples, 0.05%)</title><rect x="65.6094%" y="629" width="0.0453%" height="15" fill="rgb(208,46,4)" fg:x="1448" fg:w="1"/><text x="65.8594%" y="639.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (1 samples, 0.05%)</title><rect x="65.6094%" y="613" width="0.0453%" height="15" fill="rgb(252,104,46)" fg:x="1448" fg:w="1"/><text x="65.8594%" y="623.50"></text></g><g><title>tarpc::client::RequestDispatch&lt;Req,Resp,C&gt;::poll_next_request (103 samples, 4.67%)</title><rect x="61.0331%" y="757" width="4.6670%" height="15" fill="rgb(237,152,48)" fg:x="1347" fg:w="103"/><text x="61.2831%" y="767.50">tarpc..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::is_closed (1 samples, 0.05%)</title><rect x="65.6547%" y="741" width="0.0453%" height="15" fill="rgb(221,59,37)" fg:x="1449" fg:w="1"/><text x="65.9047%" y="751.50"></text></g><g><title>tokio::sync::oneshot::State::load (1 samples, 0.05%)</title><rect x="65.6547%" y="725" width="0.0453%" height="15" fill="rgb(209,202,51)" fg:x="1449" fg:w="1"/><text x="65.9047%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.05%)</title><rect x="65.6547%" y="709" width="0.0453%" height="15" fill="rgb(228,81,30)" fg:x="1449" fg:w="1"/><text x="65.9047%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.05%)</title><rect x="65.6547%" y="693" width="0.0453%" height="15" fill="rgb(227,42,39)" fg:x="1449" fg:w="1"/><text x="65.9047%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.05%)</title><rect x="65.7454%" y="709" width="0.0453%" height="15" fill="rgb(221,26,2)" fg:x="1451" fg:w="1"/><text x="65.9954%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.05%)</title><rect x="66.1078%" y="613" width="0.0453%" height="15" fill="rgb(254,61,31)" fg:x="1459" fg:w="1"/><text x="66.3578%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.05%)</title><rect x="66.1531%" y="613" width="0.0453%" height="15" fill="rgb(222,173,38)" fg:x="1460" fg:w="1"/><text x="66.4031%" y="623.50"></text></g><g><title>core::mem::replace (1 samples, 0.05%)</title><rect x="66.1531%" y="597" width="0.0453%" height="15" fill="rgb(218,50,12)" fg:x="1460" fg:w="1"/><text x="66.4031%" y="607.50"></text></g><g><title>core::ptr::write (1 samples, 0.05%)</title><rect x="66.1531%" y="581" width="0.0453%" height="15" fill="rgb(223,88,40)" fg:x="1460" fg:w="1"/><text x="66.4031%" y="591.50"></text></g><g><title>&lt;core::result::Result&lt;T,tungstenite::error::Error&gt; as tungstenite::protocol::CheckConnectionReset&gt;::check_connection_reset (5 samples, 0.23%)</title><rect x="66.3797%" y="597" width="0.2266%" height="15" fill="rgb(237,54,19)" fg:x="1465" fg:w="5"/><text x="66.6297%" y="607.50"></text></g><g><title>[libc.so.6] (4 samples, 0.18%)</title><rect x="66.4250%" y="581" width="0.1812%" height="15" fill="rgb(251,129,25)" fg:x="1466" fg:w="4"/><text x="66.6750%" y="591.50"></text></g><g><title>__rust_dealloc (1 samples, 0.05%)</title><rect x="66.6063%" y="469" width="0.0453%" height="15" fill="rgb(238,97,19)" fg:x="1470" fg:w="1"/><text x="66.8563%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tungstenite::protocol::frame::frame::Frame&gt; (7 samples, 0.32%)</title><rect x="66.6063%" y="565" width="0.3172%" height="15" fill="rgb(240,169,18)" fg:x="1470" fg:w="7"/><text x="66.8563%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.32%)</title><rect x="66.6063%" y="549" width="0.3172%" height="15" fill="rgb(230,187,49)" fg:x="1470" fg:w="7"/><text x="66.8563%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.32%)</title><rect x="66.6063%" y="533" width="0.3172%" height="15" fill="rgb(209,44,26)" fg:x="1470" fg:w="7"/><text x="66.8563%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.32%)</title><rect x="66.6063%" y="517" width="0.3172%" height="15" fill="rgb(244,0,6)" fg:x="1470" fg:w="7"/><text x="66.8563%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.32%)</title><rect x="66.6063%" y="501" width="0.3172%" height="15" fill="rgb(248,18,21)" fg:x="1470" fg:w="7"/><text x="66.8563%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.32%)</title><rect x="66.6063%" y="485" width="0.3172%" height="15" fill="rgb(245,180,19)" fg:x="1470" fg:w="7"/><text x="66.8563%" y="495.50"></text></g><g><title>cfree (6 samples, 0.27%)</title><rect x="66.6516%" y="469" width="0.2719%" height="15" fill="rgb(252,118,36)" fg:x="1471" fg:w="6"/><text x="66.9016%" y="479.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.18%)</title><rect x="66.9234%" y="565" width="0.1812%" height="15" fill="rgb(210,224,19)" fg:x="1477" fg:w="4"/><text x="67.1734%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.18%)</title><rect x="66.9234%" y="549" width="0.1812%" height="15" fill="rgb(218,30,24)" fg:x="1477" fg:w="4"/><text x="67.1734%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.18%)</title><rect x="66.9234%" y="533" width="0.1812%" height="15" fill="rgb(219,75,50)" fg:x="1477" fg:w="4"/><text x="67.1734%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.18%)</title><rect x="66.9234%" y="517" width="0.1812%" height="15" fill="rgb(234,72,50)" fg:x="1477" fg:w="4"/><text x="67.1734%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.18%)</title><rect x="66.9234%" y="501" width="0.1812%" height="15" fill="rgb(219,100,48)" fg:x="1477" fg:w="4"/><text x="67.1734%" y="511.50"></text></g><g><title>[libc.so.6] (3 samples, 0.14%)</title><rect x="66.9687%" y="485" width="0.1359%" height="15" fill="rgb(253,5,41)" fg:x="1478" fg:w="3"/><text x="67.2187%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.05%)</title><rect x="67.1500%" y="501" width="0.0453%" height="15" fill="rgb(247,181,11)" fg:x="1482" fg:w="1"/><text x="67.4000%" y="511.50"></text></g><g><title>tungstenite::protocol::frame::frame::Frame::apply_mask (3 samples, 0.14%)</title><rect x="67.1047%" y="565" width="0.1359%" height="15" fill="rgb(222,223,25)" fg:x="1481" fg:w="3"/><text x="67.3547%" y="575.50"></text></g><g><title>tungstenite::protocol::frame::mask::apply_mask (3 samples, 0.14%)</title><rect x="67.1047%" y="549" width="0.1359%" height="15" fill="rgb(214,198,28)" fg:x="1481" fg:w="3"/><text x="67.3547%" y="559.50"></text></g><g><title>tungstenite::protocol::frame::mask::apply_mask_fast32 (3 samples, 0.14%)</title><rect x="67.1047%" y="533" width="0.1359%" height="15" fill="rgb(230,46,43)" fg:x="1481" fg:w="3"/><text x="67.3547%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::align_to_mut (3 samples, 0.14%)</title><rect x="67.1047%" y="517" width="0.1359%" height="15" fill="rgb(233,65,53)" fg:x="1481" fg:w="3"/><text x="67.3547%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::align_to_offsets (1 samples, 0.05%)</title><rect x="67.1953%" y="501" width="0.0453%" height="15" fill="rgb(221,121,27)" fg:x="1483" fg:w="1"/><text x="67.4453%" y="511.50"></text></g><g><title>tungstenite::protocol::frame::FrameCodec::buffer_frame (16 samples, 0.72%)</title><rect x="66.6063%" y="597" width="0.7250%" height="15" fill="rgb(247,70,47)" fg:x="1470" fg:w="16"/><text x="66.8563%" y="607.50"></text></g><g><title>tungstenite::protocol::frame::frame::Frame::format (16 samples, 0.72%)</title><rect x="66.6063%" y="581" width="0.7250%" height="15" fill="rgb(228,85,35)" fg:x="1470" fg:w="16"/><text x="66.8563%" y="591.50"></text></g><g><title>tungstenite::protocol::frame::frame::FrameHeader::format (2 samples, 0.09%)</title><rect x="67.2406%" y="565" width="0.0906%" height="15" fill="rgb(209,50,18)" fg:x="1484" fg:w="2"/><text x="67.4906%" y="575.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.05%)</title><rect x="67.3765%" y="293" width="0.0453%" height="15" fill="rgb(250,19,35)" fg:x="1487" fg:w="1"/><text x="67.6265%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.05%)</title><rect x="67.3765%" y="277" width="0.0453%" height="15" fill="rgb(253,107,29)" fg:x="1487" fg:w="1"/><text x="67.6265%" y="287.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (1 samples, 0.05%)</title><rect x="67.3765%" y="261" width="0.0453%" height="15" fill="rgb(252,179,29)" fg:x="1487" fg:w="1"/><text x="67.6265%" y="271.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.05%)</title><rect x="67.3765%" y="245" width="0.0453%" height="15" fill="rgb(238,194,6)" fg:x="1487" fg:w="1"/><text x="67.6265%" y="255.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (1 samples, 0.05%)</title><rect x="67.4218%" y="293" width="0.0453%" height="15" fill="rgb(238,164,29)" fg:x="1488" fg:w="1"/><text x="67.6718%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (1 samples, 0.05%)</title><rect x="67.4218%" y="277" width="0.0453%" height="15" fill="rgb(224,25,9)" fg:x="1488" fg:w="1"/><text x="67.6718%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.05%)</title><rect x="67.4218%" y="261" width="0.0453%" height="15" fill="rgb(244,153,23)" fg:x="1488" fg:w="1"/><text x="67.6718%" y="271.50"></text></g><g><title>rand_chacha::guts::round (3 samples, 0.14%)</title><rect x="67.3765%" y="309" width="0.1359%" height="15" fill="rgb(212,203,14)" fg:x="1487" fg:w="3"/><text x="67.6265%" y="319.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (1 samples, 0.05%)</title><rect x="67.4671%" y="293" width="0.0453%" height="15" fill="rgb(220,164,20)" fg:x="1489" fg:w="1"/><text x="67.7171%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (1 samples, 0.05%)</title><rect x="67.4671%" y="277" width="0.0453%" height="15" fill="rgb(222,203,48)" fg:x="1489" fg:w="1"/><text x="67.7171%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.05%)</title><rect x="67.4671%" y="261" width="0.0453%" height="15" fill="rgb(215,159,22)" fg:x="1489" fg:w="1"/><text x="67.7171%" y="271.50"></text></g><g><title>rand::rng::Rng::gen (5 samples, 0.23%)</title><rect x="67.3312%" y="533" width="0.2266%" height="15" fill="rgb(216,183,47)" fg:x="1486" fg:w="5"/><text x="67.5812%" y="543.50"></text></g><g><title>rand::distributions::other::_&lt;impl rand::distributions::distribution::Distribution&lt;[T: _]&gt; for rand::distributions::Standard&gt;::sample (5 samples, 0.23%)</title><rect x="67.3312%" y="517" width="0.2266%" height="15" fill="rgb(229,195,25)" fg:x="1486" fg:w="5"/><text x="67.5812%" y="527.50"></text></g><g><title>rand::rng::Rng::gen (5 samples, 0.23%)</title><rect x="67.3312%" y="501" width="0.2266%" height="15" fill="rgb(224,132,51)" fg:x="1486" fg:w="5"/><text x="67.5812%" y="511.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u8&gt; for rand::distributions::Standard&gt;::sample (5 samples, 0.23%)</title><rect x="67.3312%" y="485" width="0.2266%" height="15" fill="rgb(240,63,7)" fg:x="1486" fg:w="5"/><text x="67.5812%" y="495.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (5 samples, 0.23%)</title><rect x="67.3312%" y="469" width="0.2266%" height="15" fill="rgb(249,182,41)" fg:x="1486" fg:w="5"/><text x="67.5812%" y="479.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (5 samples, 0.23%)</title><rect x="67.3312%" y="453" width="0.2266%" height="15" fill="rgb(243,47,26)" fg:x="1486" fg:w="5"/><text x="67.5812%" y="463.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (5 samples, 0.23%)</title><rect x="67.3312%" y="437" width="0.2266%" height="15" fill="rgb(233,48,2)" fg:x="1486" fg:w="5"/><text x="67.5812%" y="447.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (4 samples, 0.18%)</title><rect x="67.3765%" y="421" width="0.1812%" height="15" fill="rgb(244,165,34)" fg:x="1487" fg:w="4"/><text x="67.6265%" y="431.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (4 samples, 0.18%)</title><rect x="67.3765%" y="405" width="0.1812%" height="15" fill="rgb(207,89,7)" fg:x="1487" fg:w="4"/><text x="67.6265%" y="415.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (4 samples, 0.18%)</title><rect x="67.3765%" y="389" width="0.1812%" height="15" fill="rgb(244,117,36)" fg:x="1487" fg:w="4"/><text x="67.6265%" y="399.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (4 samples, 0.18%)</title><rect x="67.3765%" y="373" width="0.1812%" height="15" fill="rgb(226,144,34)" fg:x="1487" fg:w="4"/><text x="67.6265%" y="383.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (4 samples, 0.18%)</title><rect x="67.3765%" y="357" width="0.1812%" height="15" fill="rgb(213,23,19)" fg:x="1487" fg:w="4"/><text x="67.6265%" y="367.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (4 samples, 0.18%)</title><rect x="67.3765%" y="341" width="0.1812%" height="15" fill="rgb(217,75,12)" fg:x="1487" fg:w="4"/><text x="67.6265%" y="351.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (4 samples, 0.18%)</title><rect x="67.3765%" y="325" width="0.1812%" height="15" fill="rgb(224,159,17)" fg:x="1487" fg:w="4"/><text x="67.6265%" y="335.50"></text></g><g><title>rand_chacha::guts::undiagonalize (1 samples, 0.05%)</title><rect x="67.5125%" y="309" width="0.0453%" height="15" fill="rgb(217,118,1)" fg:x="1490" fg:w="1"/><text x="67.7625%" y="319.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (1 samples, 0.05%)</title><rect x="67.5125%" y="293" width="0.0453%" height="15" fill="rgb(232,180,48)" fg:x="1490" fg:w="1"/><text x="67.7625%" y="303.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (1 samples, 0.05%)</title><rect x="67.5125%" y="277" width="0.0453%" height="15" fill="rgb(230,27,33)" fg:x="1490" fg:w="1"/><text x="67.7625%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.05%)</title><rect x="67.5125%" y="261" width="0.0453%" height="15" fill="rgb(205,31,21)" fg:x="1490" fg:w="1"/><text x="67.7625%" y="271.50"></text></g><g><title>&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_sink::Sink&lt;tungstenite::protocol::message::Message&gt;&gt;::start_send (40 samples, 1.81%)</title><rect x="65.7907%" y="709" width="1.8124%" height="15" fill="rgb(253,59,4)" fg:x="1452" fg:w="40"/><text x="66.0407%" y="719.50">&lt;..</text></g><g><title>tokio_tungstenite::WebSocketStream&lt;S&gt;::with_context (40 samples, 1.81%)</title><rect x="65.7907%" y="693" width="1.8124%" height="15" fill="rgb(224,201,9)" fg:x="1452" fg:w="40"/><text x="66.0407%" y="703.50">t..</text></g><g><title>&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_sink::Sink&lt;tungstenite::protocol::message::Message&gt;&gt;::start_send::_{{closure}} (40 samples, 1.81%)</title><rect x="65.7907%" y="677" width="1.8124%" height="15" fill="rgb(229,206,30)" fg:x="1452" fg:w="40"/><text x="66.0407%" y="687.50">&lt;..</text></g><g><title>tungstenite::protocol::WebSocket&lt;Stream&gt;::write (40 samples, 1.81%)</title><rect x="65.7907%" y="661" width="1.8124%" height="15" fill="rgb(212,67,47)" fg:x="1452" fg:w="40"/><text x="66.0407%" y="671.50">t..</text></g><g><title>tungstenite::protocol::WebSocketContext::write (40 samples, 1.81%)</title><rect x="65.7907%" y="645" width="1.8124%" height="15" fill="rgb(211,96,50)" fg:x="1452" fg:w="40"/><text x="66.0407%" y="655.50">t..</text></g><g><title>tungstenite::protocol::WebSocketContext::_write (35 samples, 1.59%)</title><rect x="66.0172%" y="629" width="1.5859%" height="15" fill="rgb(252,114,18)" fg:x="1457" fg:w="35"/><text x="66.2672%" y="639.50"></text></g><g><title>tungstenite::protocol::WebSocketContext::buffer_frame (31 samples, 1.40%)</title><rect x="66.1985%" y="613" width="1.4046%" height="15" fill="rgb(223,58,37)" fg:x="1461" fg:w="31"/><text x="66.4485%" y="623.50"></text></g><g><title>tungstenite::protocol::frame::frame::Frame::set_random_mask (6 samples, 0.27%)</title><rect x="67.3312%" y="597" width="0.2719%" height="15" fill="rgb(237,70,4)" fg:x="1486" fg:w="6"/><text x="67.5812%" y="607.50"></text></g><g><title>tungstenite::protocol::frame::frame::FrameHeader::set_random_mask (6 samples, 0.27%)</title><rect x="67.3312%" y="581" width="0.2719%" height="15" fill="rgb(244,85,46)" fg:x="1486" fg:w="6"/><text x="67.5812%" y="591.50"></text></g><g><title>tungstenite::protocol::frame::mask::generate_mask (6 samples, 0.27%)</title><rect x="67.3312%" y="565" width="0.2719%" height="15" fill="rgb(223,39,52)" fg:x="1486" fg:w="6"/><text x="67.5812%" y="575.50"></text></g><g><title>rand::random (6 samples, 0.27%)</title><rect x="67.3312%" y="549" width="0.2719%" height="15" fill="rgb(218,200,14)" fg:x="1486" fg:w="6"/><text x="67.5812%" y="559.50"></text></g><g><title>rand::rngs::thread::thread_rng (1 samples, 0.05%)</title><rect x="67.5578%" y="533" width="0.0453%" height="15" fill="rgb(208,171,16)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.05%)</title><rect x="67.5578%" y="517" width="0.0453%" height="15" fill="rgb(234,200,18)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.05%)</title><rect x="67.5578%" y="501" width="0.0453%" height="15" fill="rgb(228,45,11)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="511.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__getit (1 samples, 0.05%)</title><rect x="67.5578%" y="485" width="0.0453%" height="15" fill="rgb(237,182,11)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="495.50"></text></g><g><title>std::sys::pal::common::thread_local::fast_local::Key&lt;T&gt;::get (1 samples, 0.05%)</title><rect x="67.5578%" y="469" width="0.0453%" height="15" fill="rgb(241,175,49)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="479.50"></text></g><g><title>std::sys::pal::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::initialize (1 samples, 0.05%)</title><rect x="67.5578%" y="453" width="0.0453%" height="15" fill="rgb(247,38,35)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="463.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__getit::_{{closure}} (1 samples, 0.05%)</title><rect x="67.5578%" y="437" width="0.0453%" height="15" fill="rgb(228,39,49)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="447.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__init (1 samples, 0.05%)</title><rect x="67.5578%" y="421" width="0.0453%" height="15" fill="rgb(226,101,26)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="431.50"></text></g><g><title>rand_core::SeedableRng::from_rng (1 samples, 0.05%)</title><rect x="67.5578%" y="405" width="0.0453%" height="15" fill="rgb(206,141,19)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="415.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (1 samples, 0.05%)</title><rect x="67.5578%" y="389" width="0.0453%" height="15" fill="rgb(211,200,13)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="399.50"></text></g><g><title>getrandom::getrandom (1 samples, 0.05%)</title><rect x="67.5578%" y="373" width="0.0453%" height="15" fill="rgb(241,121,6)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="383.50"></text></g><g><title>getrandom::getrandom_uninit (1 samples, 0.05%)</title><rect x="67.5578%" y="357" width="0.0453%" height="15" fill="rgb(234,221,29)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="367.50"></text></g><g><title>getrandom::imp::getrandom_inner (1 samples, 0.05%)</title><rect x="67.5578%" y="341" width="0.0453%" height="15" fill="rgb(229,136,5)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="351.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (1 samples, 0.05%)</title><rect x="67.5578%" y="325" width="0.0453%" height="15" fill="rgb(238,36,11)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="335.50"></text></g><g><title>getrandom::imp::getrandom_inner::_{{closure}} (1 samples, 0.05%)</title><rect x="67.5578%" y="309" width="0.0453%" height="15" fill="rgb(251,55,41)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="319.50"></text></g><g><title>getrandom::imp::getrandom (1 samples, 0.05%)</title><rect x="67.5578%" y="293" width="0.0453%" height="15" fill="rgb(242,34,40)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="303.50"></text></g><g><title>syscall (1 samples, 0.05%)</title><rect x="67.5578%" y="277" width="0.0453%" height="15" fill="rgb(215,42,17)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="67.5578%" y="261" width="0.0453%" height="15" fill="rgb(207,44,46)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="67.5578%" y="245" width="0.0453%" height="15" fill="rgb(211,206,28)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="67.5578%" y="229" width="0.0453%" height="15" fill="rgb(237,167,16)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="67.5578%" y="213" width="0.0453%" height="15" fill="rgb(233,66,6)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="67.5578%" y="197" width="0.0453%" height="15" fill="rgb(246,123,29)" fg:x="1491" fg:w="1"/><text x="67.8078%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.09%)</title><rect x="67.6484%" y="661" width="0.0906%" height="15" fill="rgb(209,62,40)" fg:x="1493" fg:w="2"/><text x="67.8984%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.09%)</title><rect x="67.6484%" y="645" width="0.0906%" height="15" fill="rgb(218,4,25)" fg:x="1493" fg:w="2"/><text x="67.8984%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.09%)</title><rect x="67.6484%" y="629" width="0.0906%" height="15" fill="rgb(253,91,49)" fg:x="1493" fg:w="2"/><text x="67.8984%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.09%)</title><rect x="67.6484%" y="613" width="0.0906%" height="15" fill="rgb(228,155,29)" fg:x="1493" fg:w="2"/><text x="67.8984%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.05%)</title><rect x="67.6937%" y="597" width="0.0453%" height="15" fill="rgb(243,57,37)" fg:x="1494" fg:w="1"/><text x="67.9437%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.05%)</title><rect x="67.6937%" y="581" width="0.0453%" height="15" fill="rgb(244,167,17)" fg:x="1494" fg:w="1"/><text x="67.9437%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.05%)</title><rect x="67.6937%" y="565" width="0.0453%" height="15" fill="rgb(207,181,38)" fg:x="1494" fg:w="1"/><text x="67.9437%" y="575.50"></text></g><g><title>malloc (1 samples, 0.05%)</title><rect x="67.6937%" y="549" width="0.0453%" height="15" fill="rgb(211,8,23)" fg:x="1494" fg:w="1"/><text x="67.9437%" y="559.50"></text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_struct_variant (2 samples, 0.09%)</title><rect x="67.7843%" y="565" width="0.0906%" height="15" fill="rgb(235,11,44)" fg:x="1496" fg:w="2"/><text x="68.0343%" y="575.50"></text></g><g><title>&lt;bincode::config::int::FixintEncoding as bincode::config::int::IntEncoding&gt;::serialize_u32 (2 samples, 0.09%)</title><rect x="67.7843%" y="549" width="0.0906%" height="15" fill="rgb(248,18,52)" fg:x="1496" fg:w="2"/><text x="68.0343%" y="559.50"></text></g><g><title>bincode::ser::Serializer&lt;W,O&gt;::serialize_literal_u32 (2 samples, 0.09%)</title><rect x="67.7843%" y="533" width="0.0906%" height="15" fill="rgb(208,4,7)" fg:x="1496" fg:w="2"/><text x="68.0343%" y="543.50"></text></g><g><title>bincode::byteorder::WriteBytesExt::write_u32 (2 samples, 0.09%)</title><rect x="67.7843%" y="517" width="0.0906%" height="15" fill="rgb(240,17,39)" fg:x="1496" fg:w="2"/><text x="68.0343%" y="527.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.09%)</title><rect x="67.7843%" y="501" width="0.0906%" height="15" fill="rgb(207,170,3)" fg:x="1496" fg:w="2"/><text x="68.0343%" y="511.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.09%)</title><rect x="67.7843%" y="485" width="0.0906%" height="15" fill="rgb(236,100,52)" fg:x="1496" fg:w="2"/><text x="68.0343%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.09%)</title><rect x="67.7843%" y="469" width="0.0906%" height="15" fill="rgb(246,78,51)" fg:x="1496" fg:w="2"/><text x="68.0343%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.09%)</title><rect x="67.7843%" y="453" width="0.0906%" height="15" fill="rgb(211,17,15)" fg:x="1496" fg:w="2"/><text x="68.0343%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.09%)</title><rect x="67.7843%" y="437" width="0.0906%" height="15" fill="rgb(209,59,46)" fg:x="1496" fg:w="2"/><text x="68.0343%" y="447.50"></text></g><g><title>example_service::_::&lt;impl serde::ser::Serialize for example_service::HelloWorldRequest&gt;::serialize (9 samples, 0.41%)</title><rect x="67.7843%" y="581" width="0.4078%" height="15" fill="rgb(210,92,25)" fg:x="1496" fg:w="9"/><text x="68.0343%" y="591.50"></text></g><g><title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (7 samples, 0.32%)</title><rect x="67.8749%" y="565" width="0.3172%" height="15" fill="rgb(238,174,52)" fg:x="1498" fg:w="7"/><text x="68.1249%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (7 samples, 0.32%)</title><rect x="67.8749%" y="549" width="0.3172%" height="15" fill="rgb(230,73,7)" fg:x="1498" fg:w="7"/><text x="68.1249%" y="559.50"></text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_str (7 samples, 0.32%)</title><rect x="67.8749%" y="533" width="0.3172%" height="15" fill="rgb(243,124,40)" fg:x="1498" fg:w="7"/><text x="68.1249%" y="543.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (7 samples, 0.32%)</title><rect x="67.8749%" y="517" width="0.3172%" height="15" fill="rgb(244,170,11)" fg:x="1498" fg:w="7"/><text x="68.1249%" y="527.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (7 samples, 0.32%)</title><rect x="67.8749%" y="501" width="0.3172%" height="15" fill="rgb(207,114,54)" fg:x="1498" fg:w="7"/><text x="68.1249%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.32%)</title><rect x="67.8749%" y="485" width="0.3172%" height="15" fill="rgb(205,42,20)" fg:x="1498" fg:w="7"/><text x="68.1249%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.32%)</title><rect x="67.8749%" y="469" width="0.3172%" height="15" fill="rgb(230,30,28)" fg:x="1498" fg:w="7"/><text x="68.1249%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.32%)</title><rect x="67.8749%" y="453" width="0.3172%" height="15" fill="rgb(205,73,54)" fg:x="1498" fg:w="7"/><text x="68.1249%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.32%)</title><rect x="67.8749%" y="437" width="0.3172%" height="15" fill="rgb(254,227,23)" fg:x="1498" fg:w="7"/><text x="68.1249%" y="447.50"></text></g><g><title>[libc.so.6] (7 samples, 0.32%)</title><rect x="67.8749%" y="421" width="0.3172%" height="15" fill="rgb(228,202,34)" fg:x="1498" fg:w="7"/><text x="68.1249%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (3 samples, 0.14%)</title><rect x="68.1921%" y="581" width="0.1359%" height="15" fill="rgb(222,225,37)" fg:x="1505" fg:w="3"/><text x="68.4421%" y="591.50"></text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_u64 (3 samples, 0.14%)</title><rect x="68.1921%" y="565" width="0.1359%" height="15" fill="rgb(221,14,54)" fg:x="1505" fg:w="3"/><text x="68.4421%" y="575.50"></text></g><g><title>&lt;bincode::config::int::FixintEncoding as bincode::config::int::IntEncoding&gt;::serialize_u64 (3 samples, 0.14%)</title><rect x="68.1921%" y="549" width="0.1359%" height="15" fill="rgb(254,102,2)" fg:x="1505" fg:w="3"/><text x="68.4421%" y="559.50"></text></g><g><title>bincode::ser::Serializer&lt;W,O&gt;::serialize_literal_u64 (3 samples, 0.14%)</title><rect x="68.1921%" y="533" width="0.1359%" height="15" fill="rgb(232,104,17)" fg:x="1505" fg:w="3"/><text x="68.4421%" y="543.50"></text></g><g><title>bincode::byteorder::WriteBytesExt::write_u64 (3 samples, 0.14%)</title><rect x="68.1921%" y="517" width="0.1359%" height="15" fill="rgb(250,220,14)" fg:x="1505" fg:w="3"/><text x="68.4421%" y="527.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (3 samples, 0.14%)</title><rect x="68.1921%" y="501" width="0.1359%" height="15" fill="rgb(241,158,9)" fg:x="1505" fg:w="3"/><text x="68.4421%" y="511.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.14%)</title><rect x="68.1921%" y="485" width="0.1359%" height="15" fill="rgb(246,9,43)" fg:x="1505" fg:w="3"/><text x="68.4421%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.14%)</title><rect x="68.1921%" y="469" width="0.1359%" height="15" fill="rgb(206,73,33)" fg:x="1505" fg:w="3"/><text x="68.4421%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.14%)</title><rect x="68.1921%" y="453" width="0.1359%" height="15" fill="rgb(222,79,8)" fg:x="1505" fg:w="3"/><text x="68.4421%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.14%)</title><rect x="68.1921%" y="437" width="0.1359%" height="15" fill="rgb(234,8,54)" fg:x="1505" fg:w="3"/><text x="68.4421%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.09%)</title><rect x="68.2374%" y="421" width="0.0906%" height="15" fill="rgb(209,134,38)" fg:x="1506" fg:w="2"/><text x="68.4874%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.09%)</title><rect x="68.2374%" y="405" width="0.0906%" height="15" fill="rgb(230,127,29)" fg:x="1506" fg:w="2"/><text x="68.4874%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.05%)</title><rect x="68.2827%" y="389" width="0.0453%" height="15" fill="rgb(242,44,41)" fg:x="1507" fg:w="1"/><text x="68.5327%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.05%)</title><rect x="68.2827%" y="373" width="0.0453%" height="15" fill="rgb(222,56,43)" fg:x="1507" fg:w="1"/><text x="68.5327%" y="383.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::convert::From&lt;libc::unix::timespec&gt;&gt;::from (1 samples, 0.05%)</title><rect x="68.3280%" y="501" width="0.0453%" height="15" fill="rgb(238,39,47)" fg:x="1508" fg:w="1"/><text x="68.5780%" y="511.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::new (1 samples, 0.05%)</title><rect x="68.3280%" y="485" width="0.0453%" height="15" fill="rgb(226,79,43)" fg:x="1508" fg:w="1"/><text x="68.5780%" y="495.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (12 samples, 0.54%)</title><rect x="68.3280%" y="517" width="0.5437%" height="15" fill="rgb(242,105,53)" fg:x="1508" fg:w="12"/><text x="68.5780%" y="527.50"></text></g><g><title>clock_gettime (11 samples, 0.50%)</title><rect x="68.3734%" y="501" width="0.4984%" height="15" fill="rgb(251,132,46)" fg:x="1509" fg:w="11"/><text x="68.6234%" y="511.50"></text></g><g><title>__vdso_clock_gettime (11 samples, 0.50%)</title><rect x="68.3734%" y="485" width="0.4984%" height="15" fill="rgb(231,77,14)" fg:x="1509" fg:w="11"/><text x="68.6234%" y="495.50"></text></g><g><title>&lt;tarpc::context::_::&lt;impl serde::ser::Serialize for tarpc::context::Context&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (15 samples, 0.68%)</title><rect x="68.3280%" y="549" width="0.6797%" height="15" fill="rgb(240,135,9)" fg:x="1508" fg:w="15"/><text x="68.5780%" y="559.50"></text></g><g><title>tarpc::context::absolute_to_relative_time::serialize (15 samples, 0.68%)</title><rect x="68.3280%" y="533" width="0.6797%" height="15" fill="rgb(248,109,14)" fg:x="1508" fg:w="15"/><text x="68.5780%" y="543.50"></text></g><g><title>std::time::SystemTime::duration_since (3 samples, 0.14%)</title><rect x="68.8718%" y="517" width="0.1359%" height="15" fill="rgb(227,146,52)" fg:x="1520" fg:w="3"/><text x="69.1218%" y="527.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::sub_time (3 samples, 0.14%)</title><rect x="68.8718%" y="501" width="0.1359%" height="15" fill="rgb(232,54,3)" fg:x="1520" fg:w="3"/><text x="69.1218%" y="511.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (3 samples, 0.14%)</title><rect x="68.8718%" y="485" width="0.1359%" height="15" fill="rgb(229,201,43)" fg:x="1520" fg:w="3"/><text x="69.1218%" y="495.50"></text></g><g><title>core::time::Duration::new (2 samples, 0.09%)</title><rect x="68.9171%" y="469" width="0.0906%" height="15" fill="rgb(252,161,33)" fg:x="1521" fg:w="2"/><text x="69.1671%" y="479.50"></text></g><g><title>tarpc::trace::_::&lt;impl serde::ser::Serialize for tarpc::trace::SamplingDecision&gt;::serialize (1 samples, 0.05%)</title><rect x="69.0077%" y="517" width="0.0453%" height="15" fill="rgb(226,146,40)" fg:x="1523" fg:w="1"/><text x="69.2577%" y="527.50"></text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_unit_variant (1 samples, 0.05%)</title><rect x="69.0077%" y="501" width="0.0453%" height="15" fill="rgb(219,47,25)" fg:x="1523" fg:w="1"/><text x="69.2577%" y="511.50"></text></g><g><title>&lt;bincode::config::int::FixintEncoding as bincode::config::int::IntEncoding&gt;::serialize_u32 (1 samples, 0.05%)</title><rect x="69.0077%" y="485" width="0.0453%" height="15" fill="rgb(250,135,13)" fg:x="1523" fg:w="1"/><text x="69.2577%" y="495.50"></text></g><g><title>bincode::ser::Serializer&lt;W,O&gt;::serialize_literal_u32 (1 samples, 0.05%)</title><rect x="69.0077%" y="469" width="0.0453%" height="15" fill="rgb(219,229,18)" fg:x="1523" fg:w="1"/><text x="69.2577%" y="479.50"></text></g><g><title>bincode::byteorder::WriteBytesExt::write_u32 (1 samples, 0.05%)</title><rect x="69.0077%" y="453" width="0.0453%" height="15" fill="rgb(217,152,27)" fg:x="1523" fg:w="1"/><text x="69.2577%" y="463.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="69.0077%" y="437" width="0.0453%" height="15" fill="rgb(225,71,47)" fg:x="1523" fg:w="1"/><text x="69.2577%" y="447.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="69.0077%" y="421" width="0.0453%" height="15" fill="rgb(220,139,14)" fg:x="1523" fg:w="1"/><text x="69.2577%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="69.0077%" y="405" width="0.0453%" height="15" fill="rgb(247,54,32)" fg:x="1523" fg:w="1"/><text x="69.2577%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="69.0077%" y="389" width="0.0453%" height="15" fill="rgb(252,131,39)" fg:x="1523" fg:w="1"/><text x="69.2577%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="69.0077%" y="373" width="0.0453%" height="15" fill="rgb(210,108,39)" fg:x="1523" fg:w="1"/><text x="69.2577%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="69.0077%" y="357" width="0.0453%" height="15" fill="rgb(205,23,29)" fg:x="1523" fg:w="1"/><text x="69.2577%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="69.0077%" y="341" width="0.0453%" height="15" fill="rgb(246,139,46)" fg:x="1523" fg:w="1"/><text x="69.2577%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.05%)</title><rect x="69.0077%" y="325" width="0.0453%" height="15" fill="rgb(250,81,26)" fg:x="1523" fg:w="1"/><text x="69.2577%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.05%)</title><rect x="69.0077%" y="309" width="0.0453%" height="15" fill="rgb(214,104,7)" fg:x="1523" fg:w="1"/><text x="69.2577%" y="319.50"></text></g><g><title>tarpc::trace::_::&lt;impl serde::ser::Serialize for tarpc::trace::SpanId&gt;::serialize (1 samples, 0.05%)</title><rect x="69.0530%" y="517" width="0.0453%" height="15" fill="rgb(233,189,8)" fg:x="1524" fg:w="1"/><text x="69.3030%" y="527.50"></text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.05%)</title><rect x="69.0530%" y="501" width="0.0453%" height="15" fill="rgb(228,141,17)" fg:x="1524" fg:w="1"/><text x="69.3030%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (1 samples, 0.05%)</title><rect x="69.0530%" y="485" width="0.0453%" height="15" fill="rgb(247,157,1)" fg:x="1524" fg:w="1"/><text x="69.3030%" y="495.50"></text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_u64 (1 samples, 0.05%)</title><rect x="69.0530%" y="469" width="0.0453%" height="15" fill="rgb(249,225,5)" fg:x="1524" fg:w="1"/><text x="69.3030%" y="479.50"></text></g><g><title>&lt;bincode::config::int::FixintEncoding as bincode::config::int::IntEncoding&gt;::serialize_u64 (1 samples, 0.05%)</title><rect x="69.0530%" y="453" width="0.0453%" height="15" fill="rgb(242,55,13)" fg:x="1524" fg:w="1"/><text x="69.3030%" y="463.50"></text></g><g><title>bincode::ser::Serializer&lt;W,O&gt;::serialize_literal_u64 (1 samples, 0.05%)</title><rect x="69.0530%" y="437" width="0.0453%" height="15" fill="rgb(230,49,50)" fg:x="1524" fg:w="1"/><text x="69.3030%" y="447.50"></text></g><g><title>bincode::byteorder::WriteBytesExt::write_u64 (1 samples, 0.05%)</title><rect x="69.0530%" y="421" width="0.0453%" height="15" fill="rgb(241,111,38)" fg:x="1524" fg:w="1"/><text x="69.3030%" y="431.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="69.0530%" y="405" width="0.0453%" height="15" fill="rgb(252,155,4)" fg:x="1524" fg:w="1"/><text x="69.3030%" y="415.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="69.0530%" y="389" width="0.0453%" height="15" fill="rgb(212,69,32)" fg:x="1524" fg:w="1"/><text x="69.3030%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="69.0530%" y="373" width="0.0453%" height="15" fill="rgb(243,107,47)" fg:x="1524" fg:w="1"/><text x="69.3030%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="69.0530%" y="357" width="0.0453%" height="15" fill="rgb(247,130,12)" fg:x="1524" fg:w="1"/><text x="69.3030%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="69.0530%" y="341" width="0.0453%" height="15" fill="rgb(233,74,16)" fg:x="1524" fg:w="1"/><text x="69.3030%" y="351.50"></text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_u8 (1 samples, 0.05%)</title><rect x="69.0983%" y="485" width="0.0453%" height="15" fill="rgb(208,58,18)" fg:x="1525" fg:w="1"/><text x="69.3483%" y="495.50"></text></g><g><title>bincode::ser::Serializer&lt;W,O&gt;::serialize_byte (1 samples, 0.05%)</title><rect x="69.0983%" y="469" width="0.0453%" height="15" fill="rgb(242,225,1)" fg:x="1525" fg:w="1"/><text x="69.3483%" y="479.50"></text></g><g><title>bincode::byteorder::WriteBytesExt::write_u8 (1 samples, 0.05%)</title><rect x="69.0983%" y="453" width="0.0453%" height="15" fill="rgb(249,39,40)" fg:x="1525" fg:w="1"/><text x="69.3483%" y="463.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.05%)</title><rect x="69.0983%" y="437" width="0.0453%" height="15" fill="rgb(207,72,44)" fg:x="1525" fg:w="1"/><text x="69.3483%" y="447.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.05%)</title><rect x="69.0983%" y="421" width="0.0453%" height="15" fill="rgb(215,193,12)" fg:x="1525" fg:w="1"/><text x="69.3483%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.05%)</title><rect x="69.0983%" y="405" width="0.0453%" height="15" fill="rgb(248,41,39)" fg:x="1525" fg:w="1"/><text x="69.3483%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="69.0983%" y="389" width="0.0453%" height="15" fill="rgb(253,85,4)" fg:x="1525" fg:w="1"/><text x="69.3483%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.05%)</title><rect x="69.0983%" y="373" width="0.0453%" height="15" fill="rgb(243,70,31)" fg:x="1525" fg:w="1"/><text x="69.3483%" y="383.50"></text></g><g><title>bincode::internal::serialize_into (43 samples, 1.95%)</title><rect x="67.7390%" y="661" width="1.9483%" height="15" fill="rgb(253,195,26)" fg:x="1495" fg:w="43"/><text x="67.9890%" y="671.50">b..</text></g><g><title>tarpc::_::&lt;impl serde::ser::Serialize for tarpc::ClientMessage&lt;T&gt;&gt;::serialize (43 samples, 1.95%)</title><rect x="67.7390%" y="645" width="1.9483%" height="15" fill="rgb(243,42,11)" fg:x="1495" fg:w="43"/><text x="67.9890%" y="655.50">t..</text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (43 samples, 1.95%)</title><rect x="67.7390%" y="629" width="1.9483%" height="15" fill="rgb(239,66,17)" fg:x="1495" fg:w="43"/><text x="67.9890%" y="639.50">&lt;..</text></g><g><title>tarpc::_::&lt;impl serde::ser::Serialize for tarpc::Request&lt;T&gt;&gt;::serialize (43 samples, 1.95%)</title><rect x="67.7390%" y="613" width="1.9483%" height="15" fill="rgb(217,132,21)" fg:x="1495" fg:w="43"/><text x="67.9890%" y="623.50">t..</text></g><g><title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (43 samples, 1.95%)</title><rect x="67.7390%" y="597" width="1.9483%" height="15" fill="rgb(252,202,21)" fg:x="1495" fg:w="43"/><text x="67.9890%" y="607.50">&lt;..</text></g><g><title>tarpc::context::_::&lt;impl serde::ser::Serialize for tarpc::context::Context&gt;::serialize (30 samples, 1.36%)</title><rect x="68.3280%" y="581" width="1.3593%" height="15" fill="rgb(233,98,36)" fg:x="1508" fg:w="30"/><text x="68.5780%" y="591.50"></text></g><g><title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (30 samples, 1.36%)</title><rect x="68.3280%" y="565" width="1.3593%" height="15" fill="rgb(216,153,54)" fg:x="1508" fg:w="30"/><text x="68.5780%" y="575.50"></text></g><g><title>tarpc::trace::_::&lt;impl serde::ser::Serialize for tarpc::trace::Context&gt;::serialize (15 samples, 0.68%)</title><rect x="69.0077%" y="549" width="0.6797%" height="15" fill="rgb(250,99,7)" fg:x="1523" fg:w="15"/><text x="69.2577%" y="559.50"></text></g><g><title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 0.68%)</title><rect x="69.0077%" y="533" width="0.6797%" height="15" fill="rgb(207,56,50)" fg:x="1523" fg:w="15"/><text x="69.2577%" y="543.50"></text></g><g><title>tarpc::trace::_::&lt;impl serde::ser::Serialize for tarpc::trace::TraceId&gt;::serialize (13 samples, 0.59%)</title><rect x="69.0983%" y="517" width="0.5890%" height="15" fill="rgb(244,61,34)" fg:x="1525" fg:w="13"/><text x="69.3483%" y="527.50"></text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 0.59%)</title><rect x="69.0983%" y="501" width="0.5890%" height="15" fill="rgb(241,50,38)" fg:x="1525" fg:w="13"/><text x="69.3483%" y="511.50"></text></g><g><title>&lt;tarpc::trace::_::&lt;impl serde::ser::Serialize for tarpc::trace::TraceId&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (12 samples, 0.54%)</title><rect x="69.1436%" y="485" width="0.5437%" height="15" fill="rgb(212,166,30)" fg:x="1526" fg:w="12"/><text x="69.3936%" y="495.50"></text></g><g><title>tarpc::trace::u128_serde::serialize (12 samples, 0.54%)</title><rect x="69.1436%" y="469" width="0.5437%" height="15" fill="rgb(249,127,32)" fg:x="1526" fg:w="12"/><text x="69.3936%" y="479.50"></text></g><g><title>serde::ser::impls::_&lt;impl serde::ser::Serialize for [T: 16]&gt;::serialize (12 samples, 0.54%)</title><rect x="69.1436%" y="453" width="0.5437%" height="15" fill="rgb(209,103,0)" fg:x="1526" fg:w="12"/><text x="69.3936%" y="463.50"></text></g><g><title>&lt;bincode::ser::Compound&lt;W,O&gt; as serde::ser::SerializeTuple&gt;::serialize_element (11 samples, 0.50%)</title><rect x="69.1889%" y="437" width="0.4984%" height="15" fill="rgb(238,209,51)" fg:x="1527" fg:w="11"/><text x="69.4389%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (11 samples, 0.50%)</title><rect x="69.1889%" y="421" width="0.4984%" height="15" fill="rgb(237,56,23)" fg:x="1527" fg:w="11"/><text x="69.4389%" y="431.50"></text></g><g><title>&lt;&amp;mut bincode::ser::Serializer&lt;W,O&gt; as serde::ser::Serializer&gt;::serialize_u8 (9 samples, 0.41%)</title><rect x="69.2796%" y="405" width="0.4078%" height="15" fill="rgb(215,153,46)" fg:x="1529" fg:w="9"/><text x="69.5296%" y="415.50"></text></g><g><title>bincode::ser::Serializer&lt;W,O&gt;::serialize_byte (7 samples, 0.32%)</title><rect x="69.3702%" y="389" width="0.3172%" height="15" fill="rgb(224,49,31)" fg:x="1531" fg:w="7"/><text x="69.6202%" y="399.50"></text></g><g><title>bincode::byteorder::WriteBytesExt::write_u8 (7 samples, 0.32%)</title><rect x="69.3702%" y="373" width="0.3172%" height="15" fill="rgb(250,18,42)" fg:x="1531" fg:w="7"/><text x="69.6202%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (7 samples, 0.32%)</title><rect x="69.3702%" y="357" width="0.3172%" height="15" fill="rgb(215,176,39)" fg:x="1531" fg:w="7"/><text x="69.6202%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (7 samples, 0.32%)</title><rect x="69.3702%" y="341" width="0.3172%" height="15" fill="rgb(223,77,29)" fg:x="1531" fg:w="7"/><text x="69.6202%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.32%)</title><rect x="69.3702%" y="325" width="0.3172%" height="15" fill="rgb(234,94,52)" fg:x="1531" fg:w="7"/><text x="69.6202%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.32%)</title><rect x="69.3702%" y="309" width="0.3172%" height="15" fill="rgb(220,154,50)" fg:x="1531" fg:w="7"/><text x="69.6202%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.32%)</title><rect x="69.3702%" y="293" width="0.3172%" height="15" fill="rgb(212,11,10)" fg:x="1531" fg:w="7"/><text x="69.6202%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.18%)</title><rect x="69.5061%" y="277" width="0.1812%" height="15" fill="rgb(205,166,19)" fg:x="1534" fg:w="4"/><text x="69.7561%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="69.6420%" y="261" width="0.0453%" height="15" fill="rgb(244,198,16)" fg:x="1537" fg:w="1"/><text x="69.8920%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.05%)</title><rect x="69.6420%" y="245" width="0.0453%" height="15" fill="rgb(219,69,12)" fg:x="1537" fg:w="1"/><text x="69.8920%" y="255.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::convert::From&lt;libc::unix::timespec&gt;&gt;::from (1 samples, 0.05%)</title><rect x="69.6874%" y="501" width="0.0453%" height="15" fill="rgb(245,30,7)" fg:x="1538" fg:w="1"/><text x="69.9374%" y="511.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::new (1 samples, 0.05%)</title><rect x="69.6874%" y="485" width="0.0453%" height="15" fill="rgb(218,221,48)" fg:x="1538" fg:w="1"/><text x="69.9374%" y="495.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (6 samples, 0.27%)</title><rect x="69.6874%" y="517" width="0.2719%" height="15" fill="rgb(216,66,15)" fg:x="1538" fg:w="6"/><text x="69.9374%" y="527.50"></text></g><g><title>clock_gettime (5 samples, 0.23%)</title><rect x="69.7327%" y="501" width="0.2266%" height="15" fill="rgb(226,122,50)" fg:x="1539" fg:w="5"/><text x="69.9827%" y="511.50"></text></g><g><title>__vdso_clock_gettime (5 samples, 0.23%)</title><rect x="69.7327%" y="485" width="0.2266%" height="15" fill="rgb(239,156,16)" fg:x="1539" fg:w="5"/><text x="69.9827%" y="495.50"></text></g><g><title>std::time::SystemTime::duration_since (2 samples, 0.09%)</title><rect x="69.9592%" y="517" width="0.0906%" height="15" fill="rgb(224,27,38)" fg:x="1544" fg:w="2"/><text x="70.2092%" y="527.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::sub_time (1 samples, 0.05%)</title><rect x="70.0045%" y="501" width="0.0453%" height="15" fill="rgb(224,39,27)" fg:x="1545" fg:w="1"/><text x="70.2545%" y="511.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (1 samples, 0.05%)</title><rect x="70.0045%" y="485" width="0.0453%" height="15" fill="rgb(215,92,29)" fg:x="1545" fg:w="1"/><text x="70.2545%" y="495.50"></text></g><g><title>bincode::serialize (55 samples, 2.49%)</title><rect x="67.6031%" y="709" width="2.4921%" height="15" fill="rgb(207,159,16)" fg:x="1492" fg:w="55"/><text x="67.8531%" y="719.50">bi..</text></g><g><title>bincode::config::Options::serialize (55 samples, 2.49%)</title><rect x="67.6031%" y="693" width="2.4921%" height="15" fill="rgb(238,163,47)" fg:x="1492" fg:w="55"/><text x="67.8531%" y="703.50">bi..</text></g><g><title>bincode::internal::serialize (55 samples, 2.49%)</title><rect x="67.6031%" y="677" width="2.4921%" height="15" fill="rgb(219,91,49)" fg:x="1492" fg:w="55"/><text x="67.8531%" y="687.50">bi..</text></g><g><title>bincode::internal::serialized_size (9 samples, 0.41%)</title><rect x="69.6874%" y="661" width="0.4078%" height="15" fill="rgb(227,167,31)" fg:x="1538" fg:w="9"/><text x="69.9374%" y="671.50"></text></g><g><title>tarpc::_::&lt;impl serde::ser::Serialize for tarpc::ClientMessage&lt;T&gt;&gt;::serialize (9 samples, 0.41%)</title><rect x="69.6874%" y="645" width="0.4078%" height="15" fill="rgb(234,80,54)" fg:x="1538" fg:w="9"/><text x="69.9374%" y="655.50"></text></g><g><title>&lt;&amp;mut bincode::ser::SizeChecker&lt;O&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (9 samples, 0.41%)</title><rect x="69.6874%" y="629" width="0.4078%" height="15" fill="rgb(212,114,2)" fg:x="1538" fg:w="9"/><text x="69.9374%" y="639.50"></text></g><g><title>tarpc::_::&lt;impl serde::ser::Serialize for tarpc::Request&lt;T&gt;&gt;::serialize (9 samples, 0.41%)</title><rect x="69.6874%" y="613" width="0.4078%" height="15" fill="rgb(234,50,24)" fg:x="1538" fg:w="9"/><text x="69.9374%" y="623.50"></text></g><g><title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.41%)</title><rect x="69.6874%" y="597" width="0.4078%" height="15" fill="rgb(221,68,8)" fg:x="1538" fg:w="9"/><text x="69.9374%" y="607.50"></text></g><g><title>tarpc::context::_::&lt;impl serde::ser::Serialize for tarpc::context::Context&gt;::serialize (9 samples, 0.41%)</title><rect x="69.6874%" y="581" width="0.4078%" height="15" fill="rgb(254,180,31)" fg:x="1538" fg:w="9"/><text x="69.9374%" y="591.50"></text></g><g><title>&lt;bincode::ser::SizeCompound&lt;O&gt; as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.41%)</title><rect x="69.6874%" y="565" width="0.4078%" height="15" fill="rgb(247,130,50)" fg:x="1538" fg:w="9"/><text x="69.9374%" y="575.50"></text></g><g><title>&lt;tarpc::context::_::&lt;impl serde::ser::Serialize for tarpc::context::Context&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (9 samples, 0.41%)</title><rect x="69.6874%" y="549" width="0.4078%" height="15" fill="rgb(211,109,4)" fg:x="1538" fg:w="9"/><text x="69.9374%" y="559.50"></text></g><g><title>tarpc::context::absolute_to_relative_time::serialize (9 samples, 0.41%)</title><rect x="69.6874%" y="533" width="0.4078%" height="15" fill="rgb(238,50,21)" fg:x="1538" fg:w="9"/><text x="69.9374%" y="543.50"></text></g><g><title>std::time::SystemTime::now (1 samples, 0.05%)</title><rect x="70.0498%" y="517" width="0.0453%" height="15" fill="rgb(225,57,45)" fg:x="1546" fg:w="1"/><text x="70.2998%" y="527.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (1 samples, 0.05%)</title><rect x="70.0498%" y="501" width="0.0453%" height="15" fill="rgb(209,196,50)" fg:x="1546" fg:w="1"/><text x="70.2998%" y="511.50"></text></g><g><title>__rust_dealloc (1 samples, 0.05%)</title><rect x="70.0952%" y="565" width="0.0453%" height="15" fill="rgb(242,140,13)" fg:x="1547" fg:w="1"/><text x="70.3452%" y="575.50"></text></g><g><title>tarpc::client::RequestDispatch&lt;Req,Resp,C&gt;::start_send (107 samples, 4.85%)</title><rect x="65.7000%" y="757" width="4.8482%" height="15" fill="rgb(217,111,7)" fg:x="1450" fg:w="107"/><text x="65.9500%" y="767.50">tarpc:..</text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_sink::Sink&lt;Item&gt;&gt;::start_send (107 samples, 4.85%)</title><rect x="65.7000%" y="741" width="4.8482%" height="15" fill="rgb(253,193,51)" fg:x="1450" fg:w="107"/><text x="65.9500%" y="751.50">&lt;futur..</text></g><g><title>&lt;tarpc_ws_transport::ClientTransport&lt;Req,Resp,Io&gt; as futures_sink::Sink&lt;Req&gt;&gt;::start_send (107 samples, 4.85%)</title><rect x="65.7000%" y="725" width="4.8482%" height="15" fill="rgb(252,70,29)" fg:x="1450" fg:w="107"/><text x="65.9500%" y="735.50">&lt;tarpc..</text></g><g><title>core::ptr::drop_in_place&lt;tarpc::ClientMessage&lt;example_service::HelloWorldRequest&gt;&gt; (10 samples, 0.45%)</title><rect x="70.0952%" y="709" width="0.4531%" height="15" fill="rgb(232,127,12)" fg:x="1547" fg:w="10"/><text x="70.3452%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;tarpc::Request&lt;example_service::HelloWorldRequest&gt;&gt; (10 samples, 0.45%)</title><rect x="70.0952%" y="693" width="0.4531%" height="15" fill="rgb(211,180,21)" fg:x="1547" fg:w="10"/><text x="70.3452%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;example_service::HelloWorldRequest&gt; (10 samples, 0.45%)</title><rect x="70.0952%" y="677" width="0.4531%" height="15" fill="rgb(229,72,13)" fg:x="1547" fg:w="10"/><text x="70.3452%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (10 samples, 0.45%)</title><rect x="70.0952%" y="661" width="0.4531%" height="15" fill="rgb(240,211,49)" fg:x="1547" fg:w="10"/><text x="70.3452%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (10 samples, 0.45%)</title><rect x="70.0952%" y="645" width="0.4531%" height="15" fill="rgb(219,149,40)" fg:x="1547" fg:w="10"/><text x="70.3452%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (10 samples, 0.45%)</title><rect x="70.0952%" y="629" width="0.4531%" height="15" fill="rgb(210,127,46)" fg:x="1547" fg:w="10"/><text x="70.3452%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.45%)</title><rect x="70.0952%" y="613" width="0.4531%" height="15" fill="rgb(220,106,7)" fg:x="1547" fg:w="10"/><text x="70.3452%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.45%)</title><rect x="70.0952%" y="597" width="0.4531%" height="15" fill="rgb(249,31,22)" fg:x="1547" fg:w="10"/><text x="70.3452%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.45%)</title><rect x="70.0952%" y="581" width="0.4531%" height="15" fill="rgb(253,1,49)" fg:x="1547" fg:w="10"/><text x="70.3452%" y="591.50"></text></g><g><title>cfree (9 samples, 0.41%)</title><rect x="70.1405%" y="565" width="0.4078%" height="15" fill="rgb(227,144,33)" fg:x="1548" fg:w="9"/><text x="70.3905%" y="575.50"></text></g><g><title>[libc.so.6] (6 samples, 0.27%)</title><rect x="70.2764%" y="549" width="0.2719%" height="15" fill="rgb(249,163,44)" fg:x="1551" fg:w="6"/><text x="70.5264%" y="559.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (14 samples, 0.63%)</title><rect x="70.6389%" y="725" width="0.6343%" height="15" fill="rgb(234,15,39)" fg:x="1559" fg:w="14"/><text x="70.8889%" y="735.50"></text></g><g><title>clock_gettime (14 samples, 0.63%)</title><rect x="70.6389%" y="709" width="0.6343%" height="15" fill="rgb(207,66,16)" fg:x="1559" fg:w="14"/><text x="70.8889%" y="719.50"></text></g><g><title>__vdso_clock_gettime (13 samples, 0.59%)</title><rect x="70.6842%" y="693" width="0.5890%" height="15" fill="rgb(233,112,24)" fg:x="1560" fg:w="13"/><text x="70.9342%" y="703.50"></text></g><g><title>&lt;std::time::SystemTime as tarpc::util::TimeUntil&gt;::time_until (15 samples, 0.68%)</title><rect x="70.6389%" y="741" width="0.6797%" height="15" fill="rgb(230,90,22)" fg:x="1559" fg:w="15"/><text x="70.8889%" y="751.50"></text></g><g><title>std::time::SystemTime::now (1 samples, 0.05%)</title><rect x="71.2732%" y="725" width="0.0453%" height="15" fill="rgb(229,61,13)" fg:x="1573" fg:w="1"/><text x="71.5232%" y="735.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (1 samples, 0.05%)</title><rect x="71.2732%" y="709" width="0.0453%" height="15" fill="rgb(225,57,24)" fg:x="1573" fg:w="1"/><text x="71.5232%" y="719.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (1 samples, 0.05%)</title><rect x="71.3185%" y="629" width="0.0453%" height="15" fill="rgb(208,169,48)" fg:x="1574" fg:w="1"/><text x="71.5685%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.09%)</title><rect x="71.3185%" y="709" width="0.0906%" height="15" fill="rgb(244,218,51)" fg:x="1574" fg:w="2"/><text x="71.5685%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.09%)</title><rect x="71.3185%" y="693" width="0.0906%" height="15" fill="rgb(214,148,10)" fg:x="1574" fg:w="2"/><text x="71.5685%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.09%)</title><rect x="71.3185%" y="677" width="0.0906%" height="15" fill="rgb(225,174,27)" fg:x="1574" fg:w="2"/><text x="71.5685%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (2 samples, 0.09%)</title><rect x="71.3185%" y="661" width="0.0906%" height="15" fill="rgb(230,96,26)" fg:x="1574" fg:w="2"/><text x="71.5685%" y="671.50"></text></g><g><title>core::hash::Hasher::write_u64 (2 samples, 0.09%)</title><rect x="71.3185%" y="645" width="0.0906%" height="15" fill="rgb(232,10,30)" fg:x="1574" fg:w="2"/><text x="71.5685%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::to_ne_bytes (1 samples, 0.05%)</title><rect x="71.3638%" y="629" width="0.0453%" height="15" fill="rgb(222,8,50)" fg:x="1575" fg:w="1"/><text x="71.6138%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3 samples, 0.14%)</title><rect x="71.3185%" y="741" width="0.1359%" height="15" fill="rgb(213,81,27)" fg:x="1574" fg:w="3"/><text x="71.5685%" y="751.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.14%)</title><rect x="71.3185%" y="725" width="0.1359%" height="15" fill="rgb(245,50,10)" fg:x="1574" fg:w="3"/><text x="71.5685%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.05%)</title><rect x="71.4092%" y="709" width="0.0453%" height="15" fill="rgb(216,100,18)" fg:x="1576" fg:w="1"/><text x="71.6592%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.05%)</title><rect x="71.4092%" y="693" width="0.0453%" height="15" fill="rgb(236,147,54)" fg:x="1576" fg:w="1"/><text x="71.6592%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.05%)</title><rect x="71.4092%" y="677" width="0.0453%" height="15" fill="rgb(205,143,26)" fg:x="1576" fg:w="1"/><text x="71.6592%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.05%)</title><rect x="71.4092%" y="661" width="0.0453%" height="15" fill="rgb(236,26,9)" fg:x="1576" fg:w="1"/><text x="71.6592%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (5 samples, 0.23%)</title><rect x="71.4545%" y="693" width="0.2266%" height="15" fill="rgb(221,165,53)" fg:x="1577" fg:w="5"/><text x="71.7045%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (5 samples, 0.23%)</title><rect x="71.4545%" y="677" width="0.2266%" height="15" fill="rgb(214,110,17)" fg:x="1577" fg:w="5"/><text x="71.7045%" y="687.50"></text></g><g><title>core::ptr::write (5 samples, 0.23%)</title><rect x="71.4545%" y="661" width="0.2266%" height="15" fill="rgb(237,197,12)" fg:x="1577" fg:w="5"/><text x="71.7045%" y="671.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (7 samples, 0.32%)</title><rect x="71.4545%" y="741" width="0.3172%" height="15" fill="rgb(205,84,17)" fg:x="1577" fg:w="7"/><text x="71.7045%" y="751.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (7 samples, 0.32%)</title><rect x="71.4545%" y="725" width="0.3172%" height="15" fill="rgb(237,18,45)" fg:x="1577" fg:w="7"/><text x="71.7045%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (7 samples, 0.32%)</title><rect x="71.4545%" y="709" width="0.3172%" height="15" fill="rgb(221,87,14)" fg:x="1577" fg:w="7"/><text x="71.7045%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::bucket (2 samples, 0.09%)</title><rect x="71.6810%" y="693" width="0.0906%" height="15" fill="rgb(238,186,15)" fg:x="1582" fg:w="2"/><text x="71.9310%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (2 samples, 0.09%)</title><rect x="71.6810%" y="677" width="0.0906%" height="15" fill="rgb(208,115,11)" fg:x="1582" fg:w="2"/><text x="71.9310%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.09%)</title><rect x="71.6810%" y="661" width="0.0906%" height="15" fill="rgb(254,175,0)" fg:x="1582" fg:w="2"/><text x="71.9310%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.09%)</title><rect x="71.6810%" y="645" width="0.0906%" height="15" fill="rgb(227,24,42)" fg:x="1582" fg:w="2"/><text x="71.9310%" y="655.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (1 samples, 0.05%)</title><rect x="71.7716%" y="725" width="0.0453%" height="15" fill="rgb(223,211,37)" fg:x="1584" fg:w="1"/><text x="72.0216%" y="735.50"></text></g><g><title>std::time::Instant::checked_add (1 samples, 0.05%)</title><rect x="71.7716%" y="709" width="0.0453%" height="15" fill="rgb(235,49,27)" fg:x="1584" fg:w="1"/><text x="72.0216%" y="719.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_add_duration (1 samples, 0.05%)</title><rect x="71.7716%" y="693" width="0.0453%" height="15" fill="rgb(254,97,51)" fg:x="1584" fg:w="1"/><text x="72.0216%" y="703.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::checked_add_duration (1 samples, 0.05%)</title><rect x="71.7716%" y="677" width="0.0453%" height="15" fill="rgb(249,51,40)" fg:x="1584" fg:w="1"/><text x="72.0216%" y="687.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (16 samples, 0.72%)</title><rect x="71.8169%" y="725" width="0.7250%" height="15" fill="rgb(210,128,45)" fg:x="1585" fg:w="16"/><text x="72.0669%" y="735.50"></text></g><g><title>clock_gettime (16 samples, 0.72%)</title><rect x="71.8169%" y="709" width="0.7250%" height="15" fill="rgb(224,137,50)" fg:x="1585" fg:w="16"/><text x="72.0669%" y="719.50"></text></g><g><title>__vdso_clock_gettime (16 samples, 0.72%)</title><rect x="71.8169%" y="693" width="0.7250%" height="15" fill="rgb(242,15,9)" fg:x="1585" fg:w="16"/><text x="72.0669%" y="703.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.05%)</title><rect x="72.5419%" y="725" width="0.0453%" height="15" fill="rgb(233,187,41)" fg:x="1601" fg:w="1"/><text x="72.7919%" y="735.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (1 samples, 0.05%)</title><rect x="72.5419%" y="709" width="0.0453%" height="15" fill="rgb(227,2,29)" fg:x="1601" fg:w="1"/><text x="72.7919%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2 samples, 0.09%)</title><rect x="72.6325%" y="677" width="0.0906%" height="15" fill="rgb(222,70,3)" fg:x="1603" fg:w="2"/><text x="72.8825%" y="687.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.09%)</title><rect x="72.6325%" y="661" width="0.0906%" height="15" fill="rgb(213,11,42)" fg:x="1603" fg:w="2"/><text x="72.8825%" y="671.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.09%)</title><rect x="72.6325%" y="645" width="0.0906%" height="15" fill="rgb(225,150,9)" fg:x="1603" fg:w="2"/><text x="72.8825%" y="655.50"></text></g><g><title>tokio_util::time::wheel::Wheel&lt;T&gt;::level_for (3 samples, 0.14%)</title><rect x="72.7232%" y="677" width="0.1359%" height="15" fill="rgb(230,162,45)" fg:x="1605" fg:w="3"/><text x="72.9732%" y="687.50"></text></g><g><title>tokio_util::time::wheel::level_for (3 samples, 0.14%)</title><rect x="72.7232%" y="661" width="0.1359%" height="15" fill="rgb(222,14,52)" fg:x="1605" fg:w="3"/><text x="72.9732%" y="671.50"></text></g><g><title>&lt;tokio_util::time::delay_queue::SlabStorage&lt;T&gt; as core::ops::index::Index&lt;tokio_util::time::delay_queue::Key&gt;&gt;::index (1 samples, 0.05%)</title><rect x="72.8591%" y="645" width="0.0453%" height="15" fill="rgb(254,198,14)" fg:x="1608" fg:w="1"/><text x="73.1091%" y="655.50"></text></g><g><title>&lt;tokio_util::time::delay_queue::Stack&lt;T&gt; as tokio_util::time::wheel::stack::Stack&gt;::push (2 samples, 0.09%)</title><rect x="72.8591%" y="661" width="0.0906%" height="15" fill="rgb(220,217,30)" fg:x="1608" fg:w="2"/><text x="73.1091%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.05%)</title><rect x="72.9044%" y="645" width="0.0453%" height="15" fill="rgb(215,146,41)" fg:x="1609" fg:w="1"/><text x="73.1544%" y="655.50"></text></g><g><title>core::mem::replace (1 samples, 0.05%)</title><rect x="72.9044%" y="629" width="0.0453%" height="15" fill="rgb(217,27,36)" fg:x="1609" fg:w="1"/><text x="73.1544%" y="639.50"></text></g><g><title>core::ptr::write (1 samples, 0.05%)</title><rect x="72.9044%" y="613" width="0.0453%" height="15" fill="rgb(219,218,39)" fg:x="1609" fg:w="1"/><text x="73.1544%" y="623.50"></text></g><g><title>tokio_util::time::delay_queue::DelayQueue&lt;T&gt;::insert_idx (8 samples, 0.36%)</title><rect x="72.6325%" y="709" width="0.3625%" height="15" fill="rgb(219,4,42)" fg:x="1603" fg:w="8"/><text x="72.8825%" y="719.50"></text></g><g><title>tokio_util::time::wheel::Wheel&lt;T&gt;::insert (8 samples, 0.36%)</title><rect x="72.6325%" y="693" width="0.3625%" height="15" fill="rgb(249,119,36)" fg:x="1603" fg:w="8"/><text x="72.8825%" y="703.50"></text></g><g><title>tokio_util::time::wheel::level::Level&lt;T&gt;::add_entry (3 samples, 0.14%)</title><rect x="72.8591%" y="677" width="0.1359%" height="15" fill="rgb(209,23,33)" fg:x="1608" fg:w="3"/><text x="73.1091%" y="687.50"></text></g><g><title>tokio_util::time::wheel::level::slot_for (1 samples, 0.05%)</title><rect x="72.9497%" y="661" width="0.0453%" height="15" fill="rgb(211,10,0)" fg:x="1610" fg:w="1"/><text x="73.1997%" y="671.50"></text></g><g><title>&lt;tokio::time::instant::Instant as core::ops::arith::Sub&gt;::sub (4 samples, 0.18%)</title><rect x="72.9950%" y="693" width="0.1812%" height="15" fill="rgb(208,99,37)" fg:x="1611" fg:w="4"/><text x="73.2450%" y="703.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.05%)</title><rect x="73.1309%" y="677" width="0.0453%" height="15" fill="rgb(213,132,31)" fg:x="1614" fg:w="1"/><text x="73.3809%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_default (1 samples, 0.05%)</title><rect x="73.1309%" y="661" width="0.0453%" height="15" fill="rgb(243,129,40)" fg:x="1614" fg:w="1"/><text x="73.3809%" y="671.50"></text></g><g><title>core::cmp::PartialOrd::lt (1 samples, 0.05%)</title><rect x="73.1763%" y="693" width="0.0453%" height="15" fill="rgb(210,66,33)" fg:x="1615" fg:w="1"/><text x="73.4263%" y="703.50"></text></g><g><title>&lt;tokio::time::instant::Instant as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.05%)</title><rect x="73.1763%" y="677" width="0.0453%" height="15" fill="rgb(209,189,4)" fg:x="1615" fg:w="1"/><text x="73.4263%" y="687.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.05%)</title><rect x="73.1763%" y="661" width="0.0453%" height="15" fill="rgb(214,107,37)" fg:x="1615" fg:w="1"/><text x="73.4263%" y="671.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Instant as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.05%)</title><rect x="73.1763%" y="645" width="0.0453%" height="15" fill="rgb(245,88,54)" fg:x="1615" fg:w="1"/><text x="73.4263%" y="655.50"></text></g><g><title>tokio_util::time::delay_queue::DelayQueue&lt;T&gt;::normalize_deadline (7 samples, 0.32%)</title><rect x="72.9950%" y="709" width="0.3172%" height="15" fill="rgb(205,146,20)" fg:x="1611" fg:w="7"/><text x="73.2450%" y="719.50"></text></g><g><title>tokio_util::time::ms (2 samples, 0.09%)</title><rect x="73.2216%" y="693" width="0.0906%" height="15" fill="rgb(220,161,25)" fg:x="1616" fg:w="2"/><text x="73.4716%" y="703.50"></text></g><g><title>tarpc::client::in_flight_requests::InFlightRequests&lt;Res&gt;::insert_request (64 samples, 2.90%)</title><rect x="70.5483%" y="757" width="2.8999%" height="15" fill="rgb(215,152,15)" fg:x="1557" fg:w="64"/><text x="70.7983%" y="767.50">ta..</text></g><g><title>tokio_util::time::delay_queue::DelayQueue&lt;T&gt;::insert (37 samples, 1.68%)</title><rect x="71.7716%" y="741" width="1.6765%" height="15" fill="rgb(233,192,44)" fg:x="1584" fg:w="37"/><text x="72.0216%" y="751.50"></text></g><g><title>tokio_util::time::delay_queue::DelayQueue&lt;T&gt;::insert_at (19 samples, 0.86%)</title><rect x="72.5872%" y="725" width="0.8609%" height="15" fill="rgb(240,170,46)" fg:x="1602" fg:w="19"/><text x="72.8372%" y="735.50"></text></g><g><title>tokio_util::time::delay_queue::SlabStorage&lt;T&gt;::insert (3 samples, 0.14%)</title><rect x="73.3122%" y="709" width="0.1359%" height="15" fill="rgb(207,104,33)" fg:x="1618" fg:w="3"/><text x="73.5622%" y="719.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (3 samples, 0.14%)</title><rect x="73.3122%" y="693" width="0.1359%" height="15" fill="rgb(219,21,39)" fg:x="1618" fg:w="3"/><text x="73.5622%" y="703.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (3 samples, 0.14%)</title><rect x="73.3122%" y="677" width="0.1359%" height="15" fill="rgb(214,133,29)" fg:x="1618" fg:w="3"/><text x="73.5622%" y="687.50"></text></g><g><title>tracing::span::Span::enter (1 samples, 0.05%)</title><rect x="73.4481%" y="757" width="0.0453%" height="15" fill="rgb(226,93,6)" fg:x="1621" fg:w="1"/><text x="73.6981%" y="767.50"></text></g><g><title>tracing::span::Span::do_enter (1 samples, 0.05%)</title><rect x="73.4481%" y="741" width="0.0453%" height="15" fill="rgb(252,222,34)" fg:x="1621" fg:w="1"/><text x="73.6981%" y="751.50"></text></g><g><title>tarpc::client::RequestDispatch&lt;Req,Resp,C&gt;::poll_write_request (280 samples, 12.69%)</title><rect x="60.8518%" y="773" width="12.6869%" height="15" fill="rgb(252,92,48)" fg:x="1343" fg:w="280"/><text x="61.1018%" y="783.50">tarpc::client::Requ..</text></g><g><title>tracing_core::dispatcher::has_been_set (1 samples, 0.05%)</title><rect x="73.4934%" y="757" width="0.0453%" height="15" fill="rgb(245,223,24)" fg:x="1622" fg:w="1"/><text x="73.7434%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.05%)</title><rect x="73.4934%" y="741" width="0.0453%" height="15" fill="rgb(205,176,3)" fg:x="1622" fg:w="1"/><text x="73.7434%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.05%)</title><rect x="73.4934%" y="725" width="0.0453%" height="15" fill="rgb(235,151,15)" fg:x="1622" fg:w="1"/><text x="73.7434%" y="735.50"></text></g><g><title>&lt;futures_util::future::try_future::UnwrapOrElse&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (587 samples, 26.60%)</title><rect x="46.9869%" y="885" width="26.5972%" height="15" fill="rgb(237,209,11)" fg:x="1037" fg:w="587"/><text x="47.2369%" y="895.50">&lt;futures_util::future::try_future::UnwrapOr..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (587 samples, 26.60%)</title><rect x="46.9869%" y="869" width="26.5972%" height="15" fill="rgb(243,227,24)" fg:x="1037" fg:w="587"/><text x="47.2369%" y="879.50">&lt;futures_util::future::future::Map&lt;Fut,F&gt; a..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (587 samples, 26.60%)</title><rect x="46.9869%" y="853" width="26.5972%" height="15" fill="rgb(239,193,16)" fg:x="1037" fg:w="587"/><text x="47.2369%" y="863.50">&lt;futures_util::future::future::map::Map&lt;Fut..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (587 samples, 26.60%)</title><rect x="46.9869%" y="837" width="26.5972%" height="15" fill="rgb(231,27,9)" fg:x="1037" fg:w="587"/><text x="47.2369%" y="847.50">&lt;futures_util::future::try_future::into_fut..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (587 samples, 26.60%)</title><rect x="46.9869%" y="821" width="26.5972%" height="15" fill="rgb(219,169,10)" fg:x="1037" fg:w="587"/><text x="47.2369%" y="831.50">&lt;F as futures_core::future::TryFuture&gt;::try..</text></g><g><title>&lt;tarpc::client::RequestDispatch&lt;Req,Resp,C&gt; as core::future::future::Future&gt;::poll (587 samples, 26.60%)</title><rect x="46.9869%" y="805" width="26.5972%" height="15" fill="rgb(244,229,43)" fg:x="1037" fg:w="587"/><text x="47.2369%" y="815.50">&lt;tarpc::client::RequestDispatch&lt;Req,Resp,C&gt;..</text></g><g><title>tarpc::client::RequestDispatch&lt;Req,Resp,C&gt;::pump_write (300 samples, 13.59%)</title><rect x="59.9909%" y="789" width="13.5931%" height="15" fill="rgb(254,38,20)" fg:x="1324" fg:w="300"/><text x="60.2409%" y="799.50">tarpc::client::Reques..</text></g><g><title>tarpc::client::in_flight_requests::InFlightRequests&lt;Res&gt;::poll_expired (1 samples, 0.05%)</title><rect x="73.5387%" y="773" width="0.0453%" height="15" fill="rgb(250,47,30)" fg:x="1623" fg:w="1"/><text x="73.7887%" y="783.50"></text></g><g><title>tokio_util::time::delay_queue::DelayQueue&lt;T&gt;::poll_expired (1 samples, 0.05%)</title><rect x="73.5387%" y="757" width="0.0453%" height="15" fill="rgb(224,124,36)" fg:x="1623" fg:w="1"/><text x="73.7887%" y="767.50"></text></g><g><title>tokio_util::time::delay_queue::DelayQueue&lt;T&gt;::poll_idx (1 samples, 0.05%)</title><rect x="73.5387%" y="741" width="0.0453%" height="15" fill="rgb(246,68,51)" fg:x="1623" fg:w="1"/><text x="73.7887%" y="751.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="73.5387%" y="725" width="0.0453%" height="15" fill="rgb(253,43,49)" fg:x="1623" fg:w="1"/><text x="73.7887%" y="735.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (1 samples, 0.05%)</title><rect x="73.5387%" y="709" width="0.0453%" height="15" fill="rgb(219,54,36)" fg:x="1623" fg:w="1"/><text x="73.7887%" y="719.50"></text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed (1 samples, 0.05%)</title><rect x="73.5387%" y="693" width="0.0453%" height="15" fill="rgb(227,133,34)" fg:x="1623" fg:w="1"/><text x="73.7887%" y="703.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (1 samples, 0.05%)</title><rect x="73.5387%" y="677" width="0.0453%" height="15" fill="rgb(247,227,15)" fg:x="1623" fg:w="1"/><text x="73.7887%" y="687.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::driver (1 samples, 0.05%)</title><rect x="73.5387%" y="661" width="0.0453%" height="15" fill="rgb(229,96,14)" fg:x="1623" fg:w="1"/><text x="73.7887%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::Handle::driver (1 samples, 0.05%)</title><rect x="73.5387%" y="645" width="0.0453%" height="15" fill="rgb(220,79,17)" fg:x="1623" fg:w="1"/><text x="73.7887%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;example_service::HelloWorldClient&gt;&gt; (4 samples, 0.18%)</title><rect x="73.9918%" y="869" width="0.1812%" height="15" fill="rgb(205,131,53)" fg:x="1633" fg:w="4"/><text x="74.2418%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.18%)</title><rect x="73.9918%" y="853" width="0.1812%" height="15" fill="rgb(209,50,29)" fg:x="1633" fg:w="4"/><text x="74.2418%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.18%)</title><rect x="73.9918%" y="837" width="0.1812%" height="15" fill="rgb(245,86,46)" fg:x="1633" fg:w="4"/><text x="74.2418%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.18%)</title><rect x="73.9918%" y="821" width="0.1812%" height="15" fill="rgb(235,66,46)" fg:x="1633" fg:w="4"/><text x="74.2418%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;example_service::HelloWorldClient::hello::{{closure}}&gt; (1 samples, 0.05%)</title><rect x="74.1731%" y="869" width="0.0453%" height="15" fill="rgb(232,148,31)" fg:x="1637" fg:w="1"/><text x="74.4231%" y="879.50"></text></g><g><title>&lt;tracing_core::metadata::Level as core::cmp::PartialOrd&lt;tracing_core::metadata::LevelFilter&gt;&gt;::le (1 samples, 0.05%)</title><rect x="74.9434%" y="821" width="0.0453%" height="15" fill="rgb(217,149,8)" fg:x="1654" fg:w="1"/><text x="75.1934%" y="831.50"></text></g><g><title>[libc.so.6] (5 samples, 0.23%)</title><rect x="74.9887%" y="821" width="0.2266%" height="15" fill="rgb(209,183,11)" fg:x="1655" fg:w="5"/><text x="75.2387%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (5 samples, 0.23%)</title><rect x="75.2152%" y="821" width="0.2266%" height="15" fill="rgb(208,55,20)" fg:x="1660" fg:w="5"/><text x="75.4652%" y="831.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (5 samples, 0.23%)</title><rect x="75.2152%" y="805" width="0.2266%" height="15" fill="rgb(218,39,14)" fg:x="1660" fg:w="5"/><text x="75.4652%" y="815.50"></text></g><g><title>core::fmt::Arguments::new_v1 (1 samples, 0.05%)</title><rect x="75.3965%" y="789" width="0.0453%" height="15" fill="rgb(216,169,33)" fg:x="1664" fg:w="1"/><text x="75.6465%" y="799.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (9 samples, 0.41%)</title><rect x="76.0761%" y="805" width="0.4078%" height="15" fill="rgb(233,80,24)" fg:x="1679" fg:w="9"/><text x="76.3261%" y="815.50"></text></g><g><title>[libc.so.6] (6 samples, 0.27%)</title><rect x="76.2121%" y="789" width="0.2719%" height="15" fill="rgb(213,179,31)" fg:x="1682" fg:w="6"/><text x="76.4621%" y="799.50"></text></g><g><title>&lt;opentelemetry_api::context::Context as opentelemetry_api::trace::context::TraceContextExt&gt;::has_active_span (1 samples, 0.05%)</title><rect x="76.5292%" y="789" width="0.0453%" height="15" fill="rgb(209,19,5)" fg:x="1689" fg:w="1"/><text x="76.7792%" y="799.50"></text></g><g><title>opentelemetry_api::context::Context::get (1 samples, 0.05%)</title><rect x="76.5292%" y="773" width="0.0453%" height="15" fill="rgb(219,18,35)" fg:x="1689" fg:w="1"/><text x="76.7792%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.05%)</title><rect x="76.5292%" y="757" width="0.0453%" height="15" fill="rgb(209,169,16)" fg:x="1689" fg:w="1"/><text x="76.7792%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.05%)</title><rect x="76.5292%" y="741" width="0.0453%" height="15" fill="rgb(245,90,51)" fg:x="1689" fg:w="1"/><text x="76.7792%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.05%)</title><rect x="76.5292%" y="725" width="0.0453%" height="15" fill="rgb(220,99,45)" fg:x="1689" fg:w="1"/><text x="76.7792%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_default (2 samples, 0.09%)</title><rect x="76.6198%" y="773" width="0.0906%" height="15" fill="rgb(249,89,25)" fg:x="1691" fg:w="2"/><text x="76.8698%" y="783.50"></text></g><g><title>&lt;opentelemetry_api::context::Context as core::default::Default&gt;::default (2 samples, 0.09%)</title><rect x="76.6198%" y="757" width="0.0906%" height="15" fill="rgb(239,193,0)" fg:x="1691" fg:w="2"/><text x="76.8698%" y="767.50"></text></g><g><title>&lt;tarpc::trace::Context as core::convert::TryFrom&lt;&amp;tracing::span::Span&gt;&gt;::try_from (6 samples, 0.27%)</title><rect x="76.4839%" y="805" width="0.2719%" height="15" fill="rgb(231,126,1)" fg:x="1688" fg:w="6"/><text x="76.7339%" y="815.50"></text></g><g><title>&lt;tracing::span::Span as tracing_opentelemetry::span_ext::OpenTelemetrySpanExt&gt;::context (4 samples, 0.18%)</title><rect x="76.5745%" y="789" width="0.1812%" height="15" fill="rgb(243,166,3)" fg:x="1690" fg:w="4"/><text x="76.8245%" y="799.50"></text></g><g><title>tracing::span::Span::with_subscriber (1 samples, 0.05%)</title><rect x="76.7105%" y="773" width="0.0453%" height="15" fill="rgb(223,22,34)" fg:x="1693" fg:w="1"/><text x="76.9605%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.05%)</title><rect x="76.7105%" y="757" width="0.0453%" height="15" fill="rgb(251,52,51)" fg:x="1693" fg:w="1"/><text x="76.9605%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="76.7558%" y="805" width="0.0453%" height="15" fill="rgb(221,165,28)" fg:x="1694" fg:w="1"/><text x="77.0058%" y="815.50"></text></g><g><title>tarpc::trace::Context::new_child (2 samples, 0.09%)</title><rect x="76.8011%" y="773" width="0.0906%" height="15" fill="rgb(218,121,47)" fg:x="1695" fg:w="2"/><text x="77.0511%" y="783.50"></text></g><g><title>rand::rngs::thread::thread_rng (1 samples, 0.05%)</title><rect x="76.8464%" y="757" width="0.0453%" height="15" fill="rgb(209,120,9)" fg:x="1696" fg:w="1"/><text x="77.0964%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.05%)</title><rect x="76.8464%" y="741" width="0.0453%" height="15" fill="rgb(236,68,12)" fg:x="1696" fg:w="1"/><text x="77.0964%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.05%)</title><rect x="76.8464%" y="725" width="0.0453%" height="15" fill="rgb(225,194,26)" fg:x="1696" fg:w="1"/><text x="77.0964%" y="735.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__getit (1 samples, 0.05%)</title><rect x="76.8464%" y="709" width="0.0453%" height="15" fill="rgb(231,84,39)" fg:x="1696" fg:w="1"/><text x="77.0964%" y="719.50"></text></g><g><title>std::sys::pal::common::thread_local::fast_local::Key&lt;T&gt;::get (1 samples, 0.05%)</title><rect x="76.8464%" y="693" width="0.0453%" height="15" fill="rgb(210,11,45)" fg:x="1696" fg:w="1"/><text x="77.0964%" y="703.50"></text></g><g><title>std::sys::pal::common::thread_local::fast_local::Key&lt;T&gt;::try_initialize (1 samples, 0.05%)</title><rect x="76.8464%" y="677" width="0.0453%" height="15" fill="rgb(224,54,52)" fg:x="1696" fg:w="1"/><text x="77.0964%" y="687.50"></text></g><g><title>std::sys::pal::common::thread_local::fast_local::Key&lt;T&gt;::try_register_dtor (1 samples, 0.05%)</title><rect x="76.8464%" y="661" width="0.0453%" height="15" fill="rgb(238,102,14)" fg:x="1696" fg:w="1"/><text x="77.0964%" y="671.50"></text></g><g><title>__cxa_thread_atexit_impl (1 samples, 0.05%)</title><rect x="76.8464%" y="645" width="0.0453%" height="15" fill="rgb(243,160,52)" fg:x="1696" fg:w="1"/><text x="77.0964%" y="655.50"></text></g><g><title>_dl_find_dso_for_object (1 samples, 0.05%)</title><rect x="76.8464%" y="629" width="0.0453%" height="15" fill="rgb(216,114,19)" fg:x="1696" fg:w="1"/><text x="77.0964%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (3 samples, 0.14%)</title><rect x="76.8011%" y="805" width="0.1359%" height="15" fill="rgb(244,166,37)" fg:x="1695" fg:w="3"/><text x="77.0511%" y="815.50"></text></g><g><title>tarpc::client::Channel&lt;Req,Resp&gt;::call::_{{closure}}::_{{closure}}::_{{closure}} (3 samples, 0.14%)</title><rect x="76.8011%" y="789" width="0.1359%" height="15" fill="rgb(246,29,44)" fg:x="1695" fg:w="3"/><text x="77.0511%" y="799.50"></text></g><g><title>tracing_core::metadata::LevelFilter::current (1 samples, 0.05%)</title><rect x="76.8917%" y="773" width="0.0453%" height="15" fill="rgb(215,56,53)" fg:x="1697" fg:w="1"/><text x="77.1417%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.05%)</title><rect x="76.8917%" y="757" width="0.0453%" height="15" fill="rgb(217,60,2)" fg:x="1697" fg:w="1"/><text x="77.1417%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.05%)</title><rect x="76.8917%" y="741" width="0.0453%" height="15" fill="rgb(207,26,24)" fg:x="1697" fg:w="1"/><text x="77.1417%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.14%)</title><rect x="77.2089%" y="741" width="0.1359%" height="15" fill="rgb(252,210,15)" fg:x="1704" fg:w="3"/><text x="77.4589%" y="751.50"></text></g><g><title>core::mem::drop (2 samples, 0.09%)</title><rect x="77.3448%" y="677" width="0.0906%" height="15" fill="rgb(253,209,26)" fg:x="1707" fg:w="2"/><text x="77.5948%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;example_service::HelloWorldResponse,tarpc::client::RpcError&gt;&gt;,&amp;alloc::alloc::Global&gt;&gt; (2 samples, 0.09%)</title><rect x="77.3448%" y="661" width="0.0906%" height="15" fill="rgb(238,170,14)" fg:x="1707" fg:w="2"/><text x="77.5948%" y="671.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="77.3448%" y="645" width="0.0906%" height="15" fill="rgb(216,178,15)" fg:x="1707" fg:w="2"/><text x="77.5948%" y="655.50"></text></g><g><title>&lt;tokio::sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="77.4354%" y="661" width="0.0906%" height="15" fill="rgb(250,197,2)" fg:x="1709" fg:w="2"/><text x="77.6854%" y="671.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (2 samples, 0.09%)</title><rect x="77.4354%" y="645" width="0.0906%" height="15" fill="rgb(212,70,42)" fg:x="1709" fg:w="2"/><text x="77.6854%" y="655.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (2 samples, 0.09%)</title><rect x="77.4354%" y="629" width="0.0906%" height="15" fill="rgb(227,213,9)" fg:x="1709" fg:w="2"/><text x="77.6854%" y="639.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (2 samples, 0.09%)</title><rect x="77.4354%" y="613" width="0.0906%" height="15" fill="rgb(245,99,25)" fg:x="1709" fg:w="2"/><text x="77.6854%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.05%)</title><rect x="77.4807%" y="597" width="0.0453%" height="15" fill="rgb(250,82,29)" fg:x="1710" fg:w="1"/><text x="77.7307%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.05%)</title><rect x="77.4807%" y="581" width="0.0453%" height="15" fill="rgb(241,226,54)" fg:x="1710" fg:w="1"/><text x="77.7307%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (5 samples, 0.23%)</title><rect x="77.3448%" y="693" width="0.2266%" height="15" fill="rgb(221,99,41)" fg:x="1707" fg:w="5"/><text x="77.5948%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;example_service::HelloWorldResponse,tarpc::client::RpcError&gt;&gt;&gt; (3 samples, 0.14%)</title><rect x="77.4354%" y="677" width="0.1359%" height="15" fill="rgb(213,90,21)" fg:x="1709" fg:w="3"/><text x="77.6854%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;core::result::Result&lt;example_service::HelloWorldResponse,tarpc::client::RpcError&gt;&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="77.5261%" y="661" width="0.0453%" height="15" fill="rgb(205,208,24)" fg:x="1711" fg:w="1"/><text x="77.7761%" y="671.50"></text></g><g><title>cfree (7 samples, 0.32%)</title><rect x="77.5714%" y="693" width="0.3172%" height="15" fill="rgb(246,31,12)" fg:x="1712" fg:w="7"/><text x="77.8214%" y="703.50"></text></g><g><title>[libc.so.6] (5 samples, 0.23%)</title><rect x="77.6620%" y="677" width="0.2266%" height="15" fill="rgb(213,154,6)" fg:x="1714" fg:w="5"/><text x="77.9120%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;example_service::HelloWorldResponse,tarpc::client::RpcError&gt;&gt;&gt;&gt;&gt; (13 samples, 0.59%)</title><rect x="77.3448%" y="741" width="0.5890%" height="15" fill="rgb(222,163,29)" fg:x="1707" fg:w="13"/><text x="77.5948%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;example_service::HelloWorldResponse,tarpc::client::RpcError&gt;&gt;&gt;&gt; (13 samples, 0.59%)</title><rect x="77.3448%" y="725" width="0.5890%" height="15" fill="rgb(227,201,8)" fg:x="1707" fg:w="13"/><text x="77.5948%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.59%)</title><rect x="77.3448%" y="709" width="0.5890%" height="15" fill="rgb(233,9,32)" fg:x="1707" fg:w="13"/><text x="77.5948%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.05%)</title><rect x="77.8885%" y="693" width="0.0453%" height="15" fill="rgb(217,54,24)" fg:x="1719" fg:w="1"/><text x="78.1385%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.05%)</title><rect x="77.8885%" y="677" width="0.0453%" height="15" fill="rgb(235,192,0)" fg:x="1719" fg:w="1"/><text x="78.1385%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::RestoreOnPending&gt; (1 samples, 0.05%)</title><rect x="77.9338%" y="725" width="0.0453%" height="15" fill="rgb(235,45,9)" fg:x="1720" fg:w="1"/><text x="78.1838%" y="735.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="77.9338%" y="709" width="0.0453%" height="15" fill="rgb(246,42,40)" fg:x="1720" fg:w="1"/><text x="78.1838%" y="719.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (1 samples, 0.05%)</title><rect x="77.9792%" y="725" width="0.0453%" height="15" fill="rgb(248,111,24)" fg:x="1721" fg:w="1"/><text x="78.2292%" y="735.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.05%)</title><rect x="77.9792%" y="709" width="0.0453%" height="15" fill="rgb(249,65,22)" fg:x="1721" fg:w="1"/><text x="78.2292%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.05%)</title><rect x="77.9792%" y="693" width="0.0453%" height="15" fill="rgb(238,111,51)" fg:x="1721" fg:w="1"/><text x="78.2292%" y="703.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (1 samples, 0.05%)</title><rect x="77.9792%" y="677" width="0.0453%" height="15" fill="rgb(250,118,22)" fg:x="1721" fg:w="1"/><text x="78.2292%" y="687.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (1 samples, 0.05%)</title><rect x="77.9792%" y="661" width="0.0453%" height="15" fill="rgb(234,84,26)" fg:x="1721" fg:w="1"/><text x="78.2292%" y="671.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.05%)</title><rect x="77.9792%" y="645" width="0.0453%" height="15" fill="rgb(243,172,12)" fg:x="1721" fg:w="1"/><text x="78.2292%" y="655.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value (3 samples, 0.14%)</title><rect x="78.0245%" y="725" width="0.1359%" height="15" fill="rgb(236,150,49)" fg:x="1722" fg:w="3"/><text x="78.2745%" y="735.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.14%)</title><rect x="78.0245%" y="709" width="0.1359%" height="15" fill="rgb(225,197,26)" fg:x="1722" fg:w="3"/><text x="78.2745%" y="719.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value::_{{closure}} (3 samples, 0.14%)</title><rect x="78.0245%" y="693" width="0.1359%" height="15" fill="rgb(214,17,42)" fg:x="1722" fg:w="3"/><text x="78.2745%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (3 samples, 0.14%)</title><rect x="78.0245%" y="677" width="0.1359%" height="15" fill="rgb(224,165,40)" fg:x="1722" fg:w="3"/><text x="78.2745%" y="687.50"></text></g><g><title>core::mem::replace (3 samples, 0.14%)</title><rect x="78.0245%" y="661" width="0.1359%" height="15" fill="rgb(246,100,4)" fg:x="1722" fg:w="3"/><text x="78.2745%" y="671.50"></text></g><g><title>core::ptr::read (3 samples, 0.14%)</title><rect x="78.0245%" y="645" width="0.1359%" height="15" fill="rgb(222,103,0)" fg:x="1722" fg:w="3"/><text x="78.2745%" y="655.50"></text></g><g><title>tokio::sync::oneshot::State::load (17 samples, 0.77%)</title><rect x="78.1604%" y="725" width="0.7703%" height="15" fill="rgb(227,189,26)" fg:x="1725" fg:w="17"/><text x="78.4104%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.09%)</title><rect x="78.8401%" y="709" width="0.0906%" height="15" fill="rgb(214,202,17)" fg:x="1740" fg:w="2"/><text x="79.0901%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.09%)</title><rect x="78.8401%" y="693" width="0.0906%" height="15" fill="rgb(229,111,3)" fg:x="1740" fg:w="2"/><text x="79.0901%" y="703.50"></text></g><g><title>tokio::sync::oneshot::State::set_rx_task (6 samples, 0.27%)</title><rect x="78.9307%" y="725" width="0.2719%" height="15" fill="rgb(229,172,15)" fg:x="1742" fg:w="6"/><text x="79.1807%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (6 samples, 0.27%)</title><rect x="78.9307%" y="709" width="0.2719%" height="15" fill="rgb(230,224,35)" fg:x="1742" fg:w="6"/><text x="79.1807%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_or (6 samples, 0.27%)</title><rect x="78.9307%" y="693" width="0.2719%" height="15" fill="rgb(251,141,6)" fg:x="1742" fg:w="6"/><text x="79.1807%" y="703.50"></text></g><g><title>tarpc::client::ResponseGuard&lt;Resp&gt;::response::_{{closure}} (53 samples, 2.40%)</title><rect x="76.9370%" y="805" width="2.4014%" height="15" fill="rgb(225,208,6)" fg:x="1698" fg:w="53"/><text x="77.1870%" y="815.50">ta..</text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (48 samples, 2.17%)</title><rect x="77.1636%" y="789" width="2.1749%" height="15" fill="rgb(246,181,16)" fg:x="1703" fg:w="48"/><text x="77.4136%" y="799.50">&lt;..</text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (48 samples, 2.17%)</title><rect x="77.1636%" y="773" width="2.1749%" height="15" fill="rgb(227,129,36)" fg:x="1703" fg:w="48"/><text x="77.4136%" y="783.50">&lt;..</text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (48 samples, 2.17%)</title><rect x="77.1636%" y="757" width="2.1749%" height="15" fill="rgb(248,117,24)" fg:x="1703" fg:w="48"/><text x="77.4136%" y="767.50">&lt;..</text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (31 samples, 1.40%)</title><rect x="77.9338%" y="741" width="1.4046%" height="15" fill="rgb(214,185,35)" fg:x="1720" fg:w="31"/><text x="78.1838%" y="751.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task (3 samples, 0.14%)</title><rect x="79.2025%" y="725" width="0.1359%" height="15" fill="rgb(236,150,34)" fg:x="1748" fg:w="3"/><text x="79.4525%" y="735.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.05%)</title><rect x="79.2932%" y="709" width="0.0453%" height="15" fill="rgb(243,228,27)" fg:x="1750" fg:w="1"/><text x="79.5432%" y="719.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task::_{{closure}} (1 samples, 0.05%)</title><rect x="79.2932%" y="693" width="0.0453%" height="15" fill="rgb(245,77,44)" fg:x="1750" fg:w="1"/><text x="79.5432%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.05%)</title><rect x="79.2932%" y="677" width="0.0453%" height="15" fill="rgb(235,214,42)" fg:x="1750" fg:w="1"/><text x="79.5432%" y="687.50"></text></g><g><title>core::ptr::write (1 samples, 0.05%)</title><rect x="79.2932%" y="661" width="0.0453%" height="15" fill="rgb(221,74,3)" fg:x="1750" fg:w="1"/><text x="79.5432%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.14%)</title><rect x="79.7916%" y="725" width="0.1359%" height="15" fill="rgb(206,121,29)" fg:x="1761" fg:w="3"/><text x="80.0416%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.14%)</title><rect x="79.7916%" y="709" width="0.1359%" height="15" fill="rgb(249,131,53)" fg:x="1761" fg:w="3"/><text x="80.0416%" y="719.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::write (1 samples, 0.05%)</title><rect x="79.9275%" y="725" width="0.0453%" height="15" fill="rgb(236,170,29)" fg:x="1764" fg:w="1"/><text x="80.1775%" y="735.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.05%)</title><rect x="79.9275%" y="709" width="0.0453%" height="15" fill="rgb(247,96,15)" fg:x="1764" fg:w="1"/><text x="80.1775%" y="719.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::write::_{{closure}} (1 samples, 0.05%)</title><rect x="79.9275%" y="693" width="0.0453%" height="15" fill="rgb(211,210,7)" fg:x="1764" fg:w="1"/><text x="80.1775%" y="703.50"></text></g><g><title>core::ptr::write (1 samples, 0.05%)</title><rect x="79.9275%" y="677" width="0.0453%" height="15" fill="rgb(240,88,50)" fg:x="1764" fg:w="1"/><text x="80.1775%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (5 samples, 0.23%)</title><rect x="80.1541%" y="709" width="0.2266%" height="15" fill="rgb(209,229,26)" fg:x="1769" fg:w="5"/><text x="80.4041%" y="719.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::find_block::_{{closure}} (5 samples, 0.23%)</title><rect x="80.1541%" y="693" width="0.2266%" height="15" fill="rgb(210,68,23)" fg:x="1769" fg:w="5"/><text x="80.4041%" y="703.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::grow (5 samples, 0.23%)</title><rect x="80.1541%" y="677" width="0.2266%" height="15" fill="rgb(229,180,13)" fg:x="1769" fg:w="5"/><text x="80.4041%" y="687.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::new (5 samples, 0.23%)</title><rect x="80.1541%" y="661" width="0.2266%" height="15" fill="rgb(236,53,44)" fg:x="1769" fg:w="5"/><text x="80.4041%" y="671.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.23%)</title><rect x="80.1541%" y="645" width="0.2266%" height="15" fill="rgb(244,214,29)" fg:x="1769" fg:w="5"/><text x="80.4041%" y="655.50"></text></g><g><title>malloc (5 samples, 0.23%)</title><rect x="80.1541%" y="629" width="0.2266%" height="15" fill="rgb(220,75,29)" fg:x="1769" fg:w="5"/><text x="80.4041%" y="639.50"></text></g><g><title>[libc.so.6] (5 samples, 0.23%)</title><rect x="80.1541%" y="613" width="0.2266%" height="15" fill="rgb(214,183,37)" fg:x="1769" fg:w="5"/><text x="80.4041%" y="623.50"></text></g><g><title>[libc.so.6] (5 samples, 0.23%)</title><rect x="80.1541%" y="597" width="0.2266%" height="15" fill="rgb(239,117,29)" fg:x="1769" fg:w="5"/><text x="80.4041%" y="607.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="80.3353%" y="581" width="0.0453%" height="15" fill="rgb(237,171,35)" fg:x="1773" fg:w="1"/><text x="80.5853%" y="591.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::distance (1 samples, 0.05%)</title><rect x="80.3806%" y="709" width="0.0453%" height="15" fill="rgb(229,178,53)" fg:x="1774" fg:w="1"/><text x="80.6306%" y="719.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (17 samples, 0.77%)</title><rect x="79.7010%" y="741" width="0.7703%" height="15" fill="rgb(210,102,19)" fg:x="1759" fg:w="17"/><text x="79.9510%" y="751.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::find_block (11 samples, 0.50%)</title><rect x="79.9728%" y="725" width="0.4984%" height="15" fill="rgb(235,127,22)" fg:x="1765" fg:w="11"/><text x="80.2228%" y="735.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::tx_release (1 samples, 0.05%)</title><rect x="80.4259%" y="709" width="0.0453%" height="15" fill="rgb(244,31,31)" fg:x="1775" fg:w="1"/><text x="80.6759%" y="719.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.05%)</title><rect x="80.4259%" y="693" width="0.0453%" height="15" fill="rgb(231,43,21)" fg:x="1775" fg:w="1"/><text x="80.6759%" y="703.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::tx_release::_{{closure}} (1 samples, 0.05%)</title><rect x="80.4259%" y="677" width="0.0453%" height="15" fill="rgb(217,131,35)" fg:x="1775" fg:w="1"/><text x="80.6759%" y="687.50"></text></g><g><title>tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (28 samples, 1.27%)</title><rect x="79.6556%" y="789" width="1.2687%" height="15" fill="rgb(221,149,4)" fg:x="1758" fg:w="28"/><text x="79.9056%" y="799.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (28 samples, 1.27%)</title><rect x="79.6556%" y="773" width="1.2687%" height="15" fill="rgb(232,170,28)" fg:x="1758" fg:w="28"/><text x="79.9056%" y="783.50"></text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (27 samples, 1.22%)</title><rect x="79.7010%" y="757" width="1.2234%" height="15" fill="rgb(238,56,10)" fg:x="1759" fg:w="27"/><text x="79.9510%" y="767.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (10 samples, 0.45%)</title><rect x="80.4712%" y="741" width="0.4531%" height="15" fill="rgb(235,196,14)" fg:x="1776" fg:w="10"/><text x="80.7212%" y="751.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker (8 samples, 0.36%)</title><rect x="80.5618%" y="725" width="0.3625%" height="15" fill="rgb(216,45,48)" fg:x="1778" fg:w="8"/><text x="80.8118%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (8 samples, 0.36%)</title><rect x="80.5618%" y="709" width="0.3625%" height="15" fill="rgb(238,213,17)" fg:x="1778" fg:w="8"/><text x="80.8118%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_or (8 samples, 0.36%)</title><rect x="80.5618%" y="693" width="0.3625%" height="15" fill="rgb(212,13,2)" fg:x="1778" fg:w="8"/><text x="80.8118%" y="703.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (2 samples, 0.09%)</title><rect x="81.3321%" y="757" width="0.0906%" height="15" fill="rgb(240,114,20)" fg:x="1795" fg:w="2"/><text x="81.5821%" y="767.50"></text></g><g><title>core::mem::drop (2 samples, 0.09%)</title><rect x="81.5587%" y="725" width="0.0906%" height="15" fill="rgb(228,41,40)" fg:x="1800" fg:w="2"/><text x="81.8087%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::sync::batch_semaphore::Waitlist&gt;&gt; (2 samples, 0.09%)</title><rect x="81.5587%" y="709" width="0.0906%" height="15" fill="rgb(244,132,35)" fg:x="1800" fg:w="2"/><text x="81.8087%" y="719.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="81.5587%" y="693" width="0.0906%" height="15" fill="rgb(253,189,4)" fg:x="1800" fg:w="2"/><text x="81.8087%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::unlock (2 samples, 0.09%)</title><rect x="81.5587%" y="677" width="0.0906%" height="15" fill="rgb(224,37,19)" fg:x="1800" fg:w="2"/><text x="81.8087%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.09%)</title><rect x="81.6493%" y="725" width="0.0906%" height="15" fill="rgb(235,223,18)" fg:x="1802" fg:w="2"/><text x="81.8993%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.09%)</title><rect x="81.6493%" y="709" width="0.0906%" height="15" fill="rgb(235,163,25)" fg:x="1802" fg:w="2"/><text x="81.8993%" y="719.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (1 samples, 0.05%)</title><rect x="81.7852%" y="661" width="0.0453%" height="15" fill="rgb(217,145,28)" fg:x="1805" fg:w="1"/><text x="82.0352%" y="671.50"></text></g><g><title>syscall (1 samples, 0.05%)</title><rect x="81.7852%" y="645" width="0.0453%" height="15" fill="rgb(223,223,32)" fg:x="1805" fg:w="1"/><text x="82.0352%" y="655.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (5 samples, 0.23%)</title><rect x="81.7399%" y="725" width="0.2266%" height="15" fill="rgb(227,189,39)" fg:x="1804" fg:w="5"/><text x="81.9899%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (5 samples, 0.23%)</title><rect x="81.7399%" y="709" width="0.2266%" height="15" fill="rgb(248,10,22)" fg:x="1804" fg:w="5"/><text x="81.9899%" y="719.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (5 samples, 0.23%)</title><rect x="81.7399%" y="693" width="0.2266%" height="15" fill="rgb(248,46,39)" fg:x="1804" fg:w="5"/><text x="81.9899%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (4 samples, 0.18%)</title><rect x="81.7852%" y="677" width="0.1812%" height="15" fill="rgb(248,113,48)" fg:x="1805" fg:w="4"/><text x="82.0352%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::spin (3 samples, 0.14%)</title><rect x="81.8305%" y="661" width="0.1359%" height="15" fill="rgb(245,16,25)" fg:x="1806" fg:w="3"/><text x="82.0805%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.05%)</title><rect x="81.9212%" y="645" width="0.0453%" height="15" fill="rgb(249,152,16)" fg:x="1808" fg:w="1"/><text x="82.1712%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.05%)</title><rect x="81.9212%" y="629" width="0.0453%" height="15" fill="rgb(250,16,1)" fg:x="1808" fg:w="1"/><text x="82.1712%" y="639.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (3 samples, 0.14%)</title><rect x="81.9665%" y="725" width="0.1359%" height="15" fill="rgb(249,138,3)" fg:x="1809" fg:w="3"/><text x="82.2165%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;std::sync::mutex::MutexGuard&lt;tokio::sync::batch_semaphore::Waitlist&gt;&gt;&gt; (3 samples, 0.14%)</title><rect x="81.9665%" y="709" width="0.1359%" height="15" fill="rgb(227,71,41)" fg:x="1809" fg:w="3"/><text x="82.2165%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::sync::batch_semaphore::Waitlist&gt;&gt; (3 samples, 0.14%)</title><rect x="81.9665%" y="693" width="0.1359%" height="15" fill="rgb(209,184,23)" fg:x="1809" fg:w="3"/><text x="82.2165%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.14%)</title><rect x="81.9665%" y="677" width="0.1359%" height="15" fill="rgb(223,215,31)" fg:x="1809" fg:w="3"/><text x="82.2165%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::unlock (3 samples, 0.14%)</title><rect x="81.9665%" y="661" width="0.1359%" height="15" fill="rgb(210,146,28)" fg:x="1809" fg:w="3"/><text x="82.2165%" y="671.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::assign_permits (1 samples, 0.05%)</title><rect x="82.1024%" y="725" width="0.0453%" height="15" fill="rgb(209,183,41)" fg:x="1812" fg:w="1"/><text x="82.3524%" y="735.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (17 samples, 0.77%)</title><rect x="81.4227%" y="757" width="0.7703%" height="15" fill="rgb(209,224,45)" fg:x="1797" fg:w="17"/><text x="81.6727%" y="767.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (14 samples, 0.63%)</title><rect x="81.5587%" y="741" width="0.6343%" height="15" fill="rgb(224,209,51)" fg:x="1800" fg:w="14"/><text x="81.8087%" y="751.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (1 samples, 0.05%)</title><rect x="82.1477%" y="725" width="0.0453%" height="15" fill="rgb(223,17,39)" fg:x="1813" fg:w="1"/><text x="82.3977%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.05%)</title><rect x="82.1477%" y="709" width="0.0453%" height="15" fill="rgb(234,204,37)" fg:x="1813" fg:w="1"/><text x="82.3977%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.05%)</title><rect x="82.1477%" y="693" width="0.0453%" height="15" fill="rgb(236,120,5)" fg:x="1813" fg:w="1"/><text x="82.3977%" y="703.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::_{{closure}} (65 samples, 2.95%)</title><rect x="79.3385%" y="805" width="2.9452%" height="15" fill="rgb(248,97,27)" fg:x="1751" fg:w="65"/><text x="79.5885%" y="815.50">to..</text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve::_{{closure}} (30 samples, 1.36%)</title><rect x="80.9243%" y="789" width="1.3593%" height="15" fill="rgb(240,66,17)" fg:x="1786" fg:w="30"/><text x="81.1743%" y="799.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve_inner::_{{closure}} (24 samples, 1.09%)</title><rect x="81.1962%" y="773" width="1.0874%" height="15" fill="rgb(210,79,3)" fg:x="1792" fg:w="24"/><text x="81.4462%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::batch_semaphore::Acquire&gt; (2 samples, 0.09%)</title><rect x="82.1930%" y="757" width="0.0906%" height="15" fill="rgb(214,176,27)" fg:x="1814" fg:w="2"/><text x="82.4430%" y="767.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="82.1930%" y="741" width="0.0906%" height="15" fill="rgb(235,185,3)" fg:x="1814" fg:w="2"/><text x="82.4430%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="82.2836%" y="789" width="0.0453%" height="15" fill="rgb(227,24,12)" fg:x="1816" fg:w="1"/><text x="82.5336%" y="799.50"></text></g><g><title>__rdl_alloc (1 samples, 0.05%)</title><rect x="82.3743%" y="693" width="0.0453%" height="15" fill="rgb(252,169,48)" fg:x="1818" fg:w="1"/><text x="82.6243%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="82.7821%" y="645" width="0.0453%" height="15" fill="rgb(212,65,1)" fg:x="1827" fg:w="1"/><text x="83.0321%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="82.7821%" y="629" width="0.0453%" height="15" fill="rgb(242,39,24)" fg:x="1827" fg:w="1"/><text x="83.0321%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="82.7821%" y="613" width="0.0453%" height="15" fill="rgb(249,32,23)" fg:x="1827" fg:w="1"/><text x="83.0321%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="82.7821%" y="597" width="0.0453%" height="15" fill="rgb(251,195,23)" fg:x="1827" fg:w="1"/><text x="83.0321%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="82.7821%" y="581" width="0.0453%" height="15" fill="rgb(236,174,8)" fg:x="1827" fg:w="1"/><text x="83.0321%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="82.7821%" y="565" width="0.0453%" height="15" fill="rgb(220,197,8)" fg:x="1827" fg:w="1"/><text x="83.0321%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="82.7821%" y="549" width="0.0453%" height="15" fill="rgb(240,108,37)" fg:x="1827" fg:w="1"/><text x="83.0321%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="82.7821%" y="533" width="0.0453%" height="15" fill="rgb(232,176,24)" fg:x="1827" fg:w="1"/><text x="83.0321%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="82.7821%" y="517" width="0.0453%" height="15" fill="rgb(243,35,29)" fg:x="1827" fg:w="1"/><text x="83.0321%" y="527.50"></text></g><g><title>tokio::sync::oneshot::channel (18 samples, 0.82%)</title><rect x="82.2836%" y="805" width="0.8156%" height="15" fill="rgb(210,37,18)" fg:x="1816" fg:w="18"/><text x="82.5336%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (17 samples, 0.77%)</title><rect x="82.3290%" y="789" width="0.7703%" height="15" fill="rgb(224,184,40)" fg:x="1817" fg:w="17"/><text x="82.5790%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (16 samples, 0.72%)</title><rect x="82.3743%" y="773" width="0.7250%" height="15" fill="rgb(236,39,29)" fg:x="1818" fg:w="16"/><text x="82.6243%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.72%)</title><rect x="82.3743%" y="757" width="0.7250%" height="15" fill="rgb(232,48,39)" fg:x="1818" fg:w="16"/><text x="82.6243%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.72%)</title><rect x="82.3743%" y="741" width="0.7250%" height="15" fill="rgb(236,34,42)" fg:x="1818" fg:w="16"/><text x="82.6243%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.72%)</title><rect x="82.3743%" y="725" width="0.7250%" height="15" fill="rgb(243,106,37)" fg:x="1818" fg:w="16"/><text x="82.6243%" y="735.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.72%)</title><rect x="82.3743%" y="709" width="0.7250%" height="15" fill="rgb(218,96,6)" fg:x="1818" fg:w="16"/><text x="82.6243%" y="719.50"></text></g><g><title>malloc (15 samples, 0.68%)</title><rect x="82.4196%" y="693" width="0.6797%" height="15" fill="rgb(235,130,12)" fg:x="1819" fg:w="15"/><text x="82.6696%" y="703.50"></text></g><g><title>[libc.so.6] (10 samples, 0.45%)</title><rect x="82.6461%" y="677" width="0.4531%" height="15" fill="rgb(231,95,0)" fg:x="1824" fg:w="10"/><text x="82.8961%" y="687.50"></text></g><g><title>[libc.so.6] (7 samples, 0.32%)</title><rect x="82.7821%" y="661" width="0.3172%" height="15" fill="rgb(228,12,23)" fg:x="1827" fg:w="7"/><text x="83.0321%" y="671.50"></text></g><g><title>__mprotect (6 samples, 0.27%)</title><rect x="82.8274%" y="645" width="0.2719%" height="15" fill="rgb(216,12,1)" fg:x="1828" fg:w="6"/><text x="83.0774%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.27%)</title><rect x="82.8274%" y="629" width="0.2719%" height="15" fill="rgb(219,59,3)" fg:x="1828" fg:w="6"/><text x="83.0774%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.27%)</title><rect x="82.8274%" y="613" width="0.2719%" height="15" fill="rgb(215,208,46)" fg:x="1828" fg:w="6"/><text x="83.0774%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.27%)</title><rect x="82.8274%" y="597" width="0.2719%" height="15" fill="rgb(254,224,29)" fg:x="1828" fg:w="6"/><text x="83.0774%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.27%)</title><rect x="82.8274%" y="581" width="0.2719%" height="15" fill="rgb(232,14,29)" fg:x="1828" fg:w="6"/><text x="83.0774%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.23%)</title><rect x="82.8727%" y="565" width="0.2266%" height="15" fill="rgb(208,45,52)" fg:x="1829" fg:w="5"/><text x="83.1227%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.23%)</title><rect x="82.8727%" y="549" width="0.2266%" height="15" fill="rgb(234,191,28)" fg:x="1829" fg:w="5"/><text x="83.1227%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="82.9180%" y="533" width="0.1812%" height="15" fill="rgb(244,67,43)" fg:x="1830" fg:w="4"/><text x="83.1680%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="82.9633%" y="517" width="0.1359%" height="15" fill="rgb(236,189,24)" fg:x="1831" fg:w="3"/><text x="83.2133%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="83.0539%" y="501" width="0.0453%" height="15" fill="rgb(239,214,33)" fg:x="1833" fg:w="1"/><text x="83.3039%" y="511.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::current_span (1 samples, 0.05%)</title><rect x="83.0992%" y="757" width="0.0453%" height="15" fill="rgb(226,176,41)" fg:x="1834" fg:w="1"/><text x="83.3492%" y="767.50"></text></g><g><title>tracing_core::subscriber::Subscriber::current_span (1 samples, 0.05%)</title><rect x="83.0992%" y="741" width="0.0453%" height="15" fill="rgb(248,47,8)" fg:x="1834" fg:w="1"/><text x="83.3492%" y="751.50"></text></g><g><title>tarpc::client::Channel&lt;Req,Resp&gt;::call::_{{closure}}::_{{closure}} (172 samples, 7.79%)</title><rect x="75.4418%" y="821" width="7.7934%" height="15" fill="rgb(218,81,44)" fg:x="1665" fg:w="172"/><text x="75.6918%" y="831.50">tarpc::clie..</text></g><g><title>tracing::span::Span::current (3 samples, 0.14%)</title><rect x="83.0992%" y="805" width="0.1359%" height="15" fill="rgb(213,98,6)" fg:x="1834" fg:w="3"/><text x="83.3492%" y="815.50"></text></g><g><title>tracing_core::dispatcher::get_default (3 samples, 0.14%)</title><rect x="83.0992%" y="789" width="0.1359%" height="15" fill="rgb(222,85,22)" fg:x="1834" fg:w="3"/><text x="83.3492%" y="799.50"></text></g><g><title>tracing::span::Span::current::_{{closure}} (3 samples, 0.14%)</title><rect x="83.0992%" y="773" width="0.1359%" height="15" fill="rgb(239,46,39)" fg:x="1834" fg:w="3"/><text x="83.3492%" y="783.50"></text></g><g><title>tracing_core::span::Current::into_inner (2 samples, 0.09%)</title><rect x="83.1445%" y="757" width="0.0906%" height="15" fill="rgb(237,12,29)" fg:x="1835" fg:w="2"/><text x="83.3945%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="83.1899%" y="741" width="0.0453%" height="15" fill="rgb(214,77,8)" fg:x="1836" fg:w="1"/><text x="83.4399%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="83.1899%" y="725" width="0.0453%" height="15" fill="rgb(217,168,37)" fg:x="1836" fg:w="1"/><text x="83.4399%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="83.1899%" y="709" width="0.0453%" height="15" fill="rgb(221,217,23)" fg:x="1836" fg:w="1"/><text x="83.4399%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="83.1899%" y="693" width="0.0453%" height="15" fill="rgb(243,229,36)" fg:x="1836" fg:w="1"/><text x="83.4399%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="83.1899%" y="677" width="0.0453%" height="15" fill="rgb(251,163,40)" fg:x="1836" fg:w="1"/><text x="83.4399%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="83.1899%" y="661" width="0.0453%" height="15" fill="rgb(237,222,12)" fg:x="1836" fg:w="1"/><text x="83.4399%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="83.1899%" y="645" width="0.0453%" height="15" fill="rgb(248,132,6)" fg:x="1836" fg:w="1"/><text x="83.4399%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="83.1899%" y="629" width="0.0453%" height="15" fill="rgb(227,167,50)" fg:x="1836" fg:w="1"/><text x="83.4399%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="83.1899%" y="613" width="0.0453%" height="15" fill="rgb(242,84,37)" fg:x="1836" fg:w="1"/><text x="83.4399%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="83.1899%" y="597" width="0.0453%" height="15" fill="rgb(212,4,50)" fg:x="1836" fg:w="1"/><text x="83.4399%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="83.1899%" y="581" width="0.0453%" height="15" fill="rgb(230,228,32)" fg:x="1836" fg:w="1"/><text x="83.4399%" y="591.50"></text></g><g><title>&lt;tarpc::client::Channel&lt;Req,Resp&gt; as tarpc::client::stub::Stub&gt;::call::_{{closure}} (199 samples, 9.02%)</title><rect x="74.3543%" y="853" width="9.0168%" height="15" fill="rgb(248,217,23)" fg:x="1641" fg:w="199"/><text x="74.6043%" y="863.50">&lt;tarpc::clien..</text></g><g><title>tarpc::client::Channel&lt;Req,Resp&gt;::call::_{{closure}} (191 samples, 8.65%)</title><rect x="74.7168%" y="837" width="8.6543%" height="15" fill="rgb(238,197,32)" fg:x="1649" fg:w="191"/><text x="74.9668%" y="847.50">tarpc::clien..</text></g><g><title>tracing::span::Span::record_all (3 samples, 0.14%)</title><rect x="83.2352%" y="821" width="0.1359%" height="15" fill="rgb(236,106,1)" fg:x="1837" fg:w="3"/><text x="83.4852%" y="831.50"></text></g><g><title>tracing_core::span::Record::is_empty (1 samples, 0.05%)</title><rect x="83.3258%" y="805" width="0.0453%" height="15" fill="rgb(219,228,13)" fg:x="1839" fg:w="1"/><text x="83.5758%" y="815.50"></text></g><g><title>example_service::HelloWorldClient&lt;Stub&gt;::hello::_{{closure}} (211 samples, 9.56%)</title><rect x="74.2184%" y="869" width="9.5605%" height="15" fill="rgb(238,30,35)" fg:x="1638" fg:w="211"/><text x="74.4684%" y="879.50">example_servic..</text></g><g><title>[libc.so.6] (9 samples, 0.41%)</title><rect x="83.3711%" y="853" width="0.4078%" height="15" fill="rgb(236,70,23)" fg:x="1840" fg:w="9"/><text x="83.6211%" y="863.50"></text></g><g><title>example_service::HelloWorldClient&lt;Stub&gt;::hello (1 samples, 0.05%)</title><rect x="83.7789%" y="869" width="0.0453%" height="15" fill="rgb(249,104,48)" fg:x="1849" fg:w="1"/><text x="84.0289%" y="879.50"></text></g><g><title>&lt;tarpc::client::Channel&lt;Req,Resp&gt; as tarpc::client::stub::Stub&gt;::call (1 samples, 0.05%)</title><rect x="83.7789%" y="853" width="0.0453%" height="15" fill="rgb(254,117,50)" fg:x="1849" fg:w="1"/><text x="84.0289%" y="863.50"></text></g><g><title>&lt;tarpc::trace::Context as core::convert::TryFrom&lt;&amp;tracing::span::Span&gt;&gt;::try_from (3 samples, 0.14%)</title><rect x="83.9148%" y="837" width="0.1359%" height="15" fill="rgb(223,152,4)" fg:x="1852" fg:w="3"/><text x="84.1648%" y="847.50"></text></g><g><title>&lt;opentelemetry_api::context::Context as opentelemetry_api::trace::context::TraceContextExt&gt;::has_active_span (1 samples, 0.05%)</title><rect x="84.0054%" y="821" width="0.0453%" height="15" fill="rgb(245,6,2)" fg:x="1854" fg:w="1"/><text x="84.2554%" y="831.50"></text></g><g><title>opentelemetry_api::context::Context::get (1 samples, 0.05%)</title><rect x="84.0054%" y="805" width="0.0453%" height="15" fill="rgb(249,150,24)" fg:x="1854" fg:w="1"/><text x="84.2554%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.05%)</title><rect x="84.0054%" y="789" width="0.0453%" height="15" fill="rgb(228,185,42)" fg:x="1854" fg:w="1"/><text x="84.2554%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.05%)</title><rect x="84.0054%" y="773" width="0.0453%" height="15" fill="rgb(226,39,33)" fg:x="1854" fg:w="1"/><text x="84.2554%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.05%)</title><rect x="84.0054%" y="757" width="0.0453%" height="15" fill="rgb(221,166,19)" fg:x="1854" fg:w="1"/><text x="84.2554%" y="767.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (8 samples, 0.36%)</title><rect x="84.0507%" y="789" width="0.3625%" height="15" fill="rgb(209,109,2)" fg:x="1855" fg:w="8"/><text x="84.3007%" y="799.50"></text></g><g><title>clock_gettime (8 samples, 0.36%)</title><rect x="84.0507%" y="773" width="0.3625%" height="15" fill="rgb(252,216,26)" fg:x="1855" fg:w="8"/><text x="84.3007%" y="783.50"></text></g><g><title>__vdso_clock_gettime (7 samples, 0.32%)</title><rect x="84.0961%" y="757" width="0.3172%" height="15" fill="rgb(227,173,36)" fg:x="1856" fg:w="7"/><text x="84.3461%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_default (9 samples, 0.41%)</title><rect x="84.0507%" y="837" width="0.4078%" height="15" fill="rgb(209,90,7)" fg:x="1855" fg:w="9"/><text x="84.3007%" y="847.50"></text></g><g><title>&lt;tarpc::context::Deadline as core::default::Default&gt;::default (9 samples, 0.41%)</title><rect x="84.0507%" y="821" width="0.4078%" height="15" fill="rgb(250,194,11)" fg:x="1855" fg:w="9"/><text x="84.3007%" y="831.50"></text></g><g><title>tarpc::context::ten_seconds_from_now (9 samples, 0.41%)</title><rect x="84.0507%" y="805" width="0.4078%" height="15" fill="rgb(220,72,50)" fg:x="1855" fg:w="9"/><text x="84.3007%" y="815.50"></text></g><g><title>std::time::SystemTime::now (1 samples, 0.05%)</title><rect x="84.4132%" y="789" width="0.0453%" height="15" fill="rgb(222,106,48)" fg:x="1863" fg:w="1"/><text x="84.6632%" y="799.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (1 samples, 0.05%)</title><rect x="84.4132%" y="773" width="0.0453%" height="15" fill="rgb(216,220,45)" fg:x="1863" fg:w="1"/><text x="84.6632%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (2 samples, 0.09%)</title><rect x="84.4585%" y="837" width="0.0906%" height="15" fill="rgb(234,112,18)" fg:x="1864" fg:w="2"/><text x="84.7085%" y="847.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="84.5039%" y="821" width="0.0453%" height="15" fill="rgb(206,179,9)" fg:x="1865" fg:w="1"/><text x="84.7539%" y="831.50"></text></g><g><title>opentelemetry_api::context::Context::get (1 samples, 0.05%)</title><rect x="84.5492%" y="837" width="0.0453%" height="15" fill="rgb(215,115,40)" fg:x="1866" fg:w="1"/><text x="84.7992%" y="847.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.05%)</title><rect x="84.5492%" y="821" width="0.0453%" height="15" fill="rgb(222,69,34)" fg:x="1866" fg:w="1"/><text x="84.7992%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.05%)</title><rect x="84.5492%" y="805" width="0.0453%" height="15" fill="rgb(209,161,10)" fg:x="1866" fg:w="1"/><text x="84.7992%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.05%)</title><rect x="84.5492%" y="789" width="0.0453%" height="15" fill="rgb(217,6,38)" fg:x="1866" fg:w="1"/><text x="84.7992%" y="799.50"></text></g><g><title>client::main::_{{closure}}::_{{closure}}::_{{closure}} (245 samples, 11.10%)</title><rect x="73.5841%" y="885" width="11.1010%" height="15" fill="rgb(229,229,48)" fg:x="1624" fg:w="245"/><text x="73.8341%" y="895.50">client::main::_{..</text></g><g><title>tarpc::context::current (19 samples, 0.86%)</title><rect x="83.8242%" y="869" width="0.8609%" height="15" fill="rgb(225,21,28)" fg:x="1850" fg:w="19"/><text x="84.0742%" y="879.50"></text></g><g><title>tarpc::context::Context::current (17 samples, 0.77%)</title><rect x="83.9148%" y="853" width="0.7703%" height="15" fill="rgb(206,33,13)" fg:x="1852" fg:w="17"/><text x="84.1648%" y="863.50"></text></g><g><title>tracing::span::Span::current (2 samples, 0.09%)</title><rect x="84.5945%" y="837" width="0.0906%" height="15" fill="rgb(242,178,17)" fg:x="1867" fg:w="2"/><text x="84.8445%" y="847.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.05%)</title><rect x="84.6398%" y="821" width="0.0453%" height="15" fill="rgb(220,162,5)" fg:x="1868" fg:w="1"/><text x="84.8898%" y="831.50"></text></g><g><title>tracing::span::Span::current::_{{closure}} (1 samples, 0.05%)</title><rect x="84.6398%" y="805" width="0.0453%" height="15" fill="rgb(210,33,43)" fg:x="1868" fg:w="1"/><text x="84.8898%" y="815.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::current_span (1 samples, 0.05%)</title><rect x="84.6398%" y="789" width="0.0453%" height="15" fill="rgb(216,116,54)" fg:x="1868" fg:w="1"/><text x="84.8898%" y="799.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::subscriber (1 samples, 0.05%)</title><rect x="84.6398%" y="773" width="0.0453%" height="15" fill="rgb(249,92,24)" fg:x="1868" fg:w="1"/><text x="84.8898%" y="783.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (854 samples, 38.70%)</title><rect x="46.0807%" y="917" width="38.6951%" height="15" fill="rgb(231,189,14)" fg:x="1017" fg:w="854"/><text x="46.3307%" y="927.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (854 samples, 38.70%)</title><rect x="46.0807%" y="901" width="38.6951%" height="15" fill="rgb(230,8,41)" fg:x="1017" fg:w="854"/><text x="46.3307%" y="911.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (2 samples, 0.09%)</title><rect x="84.6851%" y="885" width="0.0906%" height="15" fill="rgb(249,7,27)" fg:x="1869" fg:w="2"/><text x="84.9351%" y="895.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (1 samples, 0.05%)</title><rect x="84.7304%" y="869" width="0.0453%" height="15" fill="rgb(232,86,5)" fg:x="1870" fg:w="1"/><text x="84.9804%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.05%)</title><rect x="84.7304%" y="853" width="0.0453%" height="15" fill="rgb(224,175,18)" fg:x="1870" fg:w="1"/><text x="84.9804%" y="863.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (1 samples, 0.05%)</title><rect x="84.7304%" y="837" width="0.0453%" height="15" fill="rgb(220,129,12)" fg:x="1870" fg:w="1"/><text x="84.9804%" y="847.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.05%)</title><rect x="84.7304%" y="821" width="0.0453%" height="15" fill="rgb(210,19,36)" fg:x="1870" fg:w="1"/><text x="84.9804%" y="831.50"></text></g><g><title>core::mem::replace (1 samples, 0.05%)</title><rect x="84.7304%" y="805" width="0.0453%" height="15" fill="rgb(219,96,14)" fg:x="1870" fg:w="1"/><text x="84.9804%" y="815.50"></text></g><g><title>core::ptr::read (1 samples, 0.05%)</title><rect x="84.7304%" y="789" width="0.0453%" height="15" fill="rgb(249,106,1)" fg:x="1870" fg:w="1"/><text x="84.9804%" y="799.50"></text></g><g><title>[libc.so.6] (9 samples, 0.41%)</title><rect x="84.8210%" y="885" width="0.4078%" height="15" fill="rgb(249,155,20)" fg:x="1872" fg:w="9"/><text x="85.0710%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (2 samples, 0.09%)</title><rect x="85.2288%" y="885" width="0.0906%" height="15" fill="rgb(244,168,9)" fg:x="1881" fg:w="2"/><text x="85.4788%" y="895.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="85.2288%" y="869" width="0.0906%" height="15" fill="rgb(216,23,50)" fg:x="1881" fg:w="2"/><text x="85.4788%" y="879.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (1 samples, 0.05%)</title><rect x="85.2741%" y="853" width="0.0453%" height="15" fill="rgb(224,219,20)" fg:x="1882" fg:w="1"/><text x="85.5241%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.05%)</title><rect x="85.2741%" y="837" width="0.0453%" height="15" fill="rgb(222,156,15)" fg:x="1882" fg:w="1"/><text x="85.5241%" y="847.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (1 samples, 0.05%)</title><rect x="85.2741%" y="821" width="0.0453%" height="15" fill="rgb(231,97,17)" fg:x="1882" fg:w="1"/><text x="85.5241%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.05%)</title><rect x="85.2741%" y="805" width="0.0453%" height="15" fill="rgb(218,70,48)" fg:x="1882" fg:w="1"/><text x="85.5241%" y="815.50"></text></g><g><title>core::mem::replace (1 samples, 0.05%)</title><rect x="85.2741%" y="789" width="0.0453%" height="15" fill="rgb(212,196,52)" fg:x="1882" fg:w="1"/><text x="85.5241%" y="799.50"></text></g><g><title>core::ptr::write (1 samples, 0.05%)</title><rect x="85.2741%" y="773" width="0.0453%" height="15" fill="rgb(243,203,18)" fg:x="1882" fg:w="1"/><text x="85.5241%" y="783.50"></text></g><g><title>[libc.so.6] (30 samples, 1.36%)</title><rect x="85.3647%" y="853" width="1.3593%" height="15" fill="rgb(252,125,41)" fg:x="1884" fg:w="30"/><text x="85.6147%" y="863.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (902 samples, 40.87%)</title><rect x="45.8994%" y="933" width="40.8700%" height="15" fill="rgb(223,180,33)" fg:x="1013" fg:w="902"/><text x="46.1494%" y="943.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (44 samples, 1.99%)</title><rect x="84.7757%" y="917" width="1.9937%" height="15" fill="rgb(254,159,46)" fg:x="1871" fg:w="44"/><text x="85.0257%" y="927.50">t..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (44 samples, 1.99%)</title><rect x="84.7757%" y="901" width="1.9937%" height="15" fill="rgb(254,38,10)" fg:x="1871" fg:w="44"/><text x="85.0257%" y="911.50">t..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (32 samples, 1.45%)</title><rect x="85.3194%" y="885" width="1.4499%" height="15" fill="rgb(208,217,32)" fg:x="1883" fg:w="32"/><text x="85.5694%" y="895.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::_{{closure}} (32 samples, 1.45%)</title><rect x="85.3194%" y="869" width="1.4499%" height="15" fill="rgb(221,120,13)" fg:x="1883" fg:w="32"/><text x="85.5694%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;client::main::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.05%)</title><rect x="86.7241%" y="853" width="0.0453%" height="15" fill="rgb(246,54,52)" fg:x="1914" fg:w="1"/><text x="86.9741%" y="863.50"></text></g><g><title>[libc.so.6] (5 samples, 0.23%)</title><rect x="86.7694%" y="901" width="0.2266%" height="15" fill="rgb(242,34,25)" fg:x="1915" fg:w="5"/><text x="87.0194%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (2 samples, 0.09%)</title><rect x="86.9959%" y="901" width="0.0906%" height="15" fill="rgb(247,209,9)" fg:x="1920" fg:w="2"/><text x="87.2459%" y="911.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="86.9959%" y="885" width="0.0906%" height="15" fill="rgb(228,71,26)" fg:x="1920" fg:w="2"/><text x="87.2459%" y="895.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (2 samples, 0.09%)</title><rect x="86.9959%" y="869" width="0.0906%" height="15" fill="rgb(222,145,49)" fg:x="1920" fg:w="2"/><text x="87.2459%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.09%)</title><rect x="86.9959%" y="853" width="0.0906%" height="15" fill="rgb(218,121,17)" fg:x="1920" fg:w="2"/><text x="87.2459%" y="863.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (2 samples, 0.09%)</title><rect x="86.9959%" y="837" width="0.0906%" height="15" fill="rgb(244,50,7)" fg:x="1920" fg:w="2"/><text x="87.2459%" y="847.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.09%)</title><rect x="86.9959%" y="821" width="0.0906%" height="15" fill="rgb(246,229,37)" fg:x="1920" fg:w="2"/><text x="87.2459%" y="831.50"></text></g><g><title>core::mem::replace (2 samples, 0.09%)</title><rect x="86.9959%" y="805" width="0.0906%" height="15" fill="rgb(225,18,5)" fg:x="1920" fg:w="2"/><text x="87.2459%" y="815.50"></text></g><g><title>core::ptr::write (2 samples, 0.09%)</title><rect x="86.9959%" y="789" width="0.0906%" height="15" fill="rgb(213,204,8)" fg:x="1920" fg:w="2"/><text x="87.2459%" y="799.50"></text></g><g><title>[libc.so.6] (10 samples, 0.45%)</title><rect x="87.0865%" y="869" width="0.4531%" height="15" fill="rgb(238,103,6)" fg:x="1922" fg:w="10"/><text x="87.3365%" y="879.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (12 samples, 0.54%)</title><rect x="87.0865%" y="901" width="0.5437%" height="15" fill="rgb(222,25,35)" fg:x="1922" fg:w="12"/><text x="87.3365%" y="911.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::_{{closure}} (12 samples, 0.54%)</title><rect x="87.0865%" y="885" width="0.5437%" height="15" fill="rgb(213,203,35)" fg:x="1922" fg:w="12"/><text x="87.3365%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;client::main::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (2 samples, 0.09%)</title><rect x="87.5396%" y="869" width="0.0906%" height="15" fill="rgb(221,79,53)" fg:x="1932" fg:w="2"/><text x="87.7896%" y="879.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (922 samples, 41.78%)</title><rect x="45.8994%" y="965" width="41.7762%" height="15" fill="rgb(243,200,35)" fg:x="1013" fg:w="922"/><text x="46.1494%" y="975.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::functio..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (922 samples, 41.78%)</title><rect x="45.8994%" y="949" width="41.7762%" height="15" fill="rgb(248,60,25)" fg:x="1013" fg:w="922"/><text x="46.1494%" y="959.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::store_output (20 samples, 0.91%)</title><rect x="86.7694%" y="933" width="0.9062%" height="15" fill="rgb(227,53,46)" fg:x="1915" fg:w="20"/><text x="87.0194%" y="943.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (20 samples, 0.91%)</title><rect x="86.7694%" y="917" width="0.9062%" height="15" fill="rgb(216,120,32)" fg:x="1915" fg:w="20"/><text x="87.0194%" y="927.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.05%)</title><rect x="87.6303%" y="901" width="0.0453%" height="15" fill="rgb(220,134,1)" fg:x="1934" fg:w="1"/><text x="87.8803%" y="911.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (938 samples, 42.50%)</title><rect x="45.3104%" y="1029" width="42.5011%" height="15" fill="rgb(237,168,5)" fg:x="1000" fg:w="938"/><text x="45.5604%" y="1039.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (928 samples, 42.05%)</title><rect x="45.7635%" y="1013" width="42.0480%" height="15" fill="rgb(231,100,33)" fg:x="1010" fg:w="928"/><text x="46.0135%" y="1023.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (928 samples, 42.05%)</title><rect x="45.7635%" y="997" width="42.0480%" height="15" fill="rgb(236,177,47)" fg:x="1010" fg:w="928"/><text x="46.0135%" y="1007.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (925 samples, 41.91%)</title><rect x="45.8994%" y="981" width="41.9121%" height="15" fill="rgb(235,7,49)" fg:x="1013" fg:w="925"/><text x="46.1494%" y="991.50">std::panicking::try::do_call</text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (3 samples, 0.14%)</title><rect x="87.6756%" y="965" width="0.1359%" height="15" fill="rgb(232,119,22)" fg:x="1935" fg:w="3"/><text x="87.9256%" y="975.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (1 samples, 0.05%)</title><rect x="87.8115%" y="1029" width="0.0453%" height="15" fill="rgb(254,73,53)" fg:x="1938" fg:w="1"/><text x="88.0615%" y="1039.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1 samples, 0.05%)</title><rect x="87.8115%" y="1013" width="0.0453%" height="15" fill="rgb(251,35,20)" fg:x="1938" fg:w="1"/><text x="88.0615%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="88.2646%" y="997" width="0.0453%" height="15" fill="rgb(241,119,20)" fg:x="1948" fg:w="1"/><text x="88.5146%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="88.2646%" y="981" width="0.0453%" height="15" fill="rgb(207,102,14)" fg:x="1948" fg:w="1"/><text x="88.5146%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="88.2646%" y="965" width="0.0453%" height="15" fill="rgb(248,201,50)" fg:x="1948" fg:w="1"/><text x="88.5146%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="88.2646%" y="949" width="0.0453%" height="15" fill="rgb(222,185,44)" fg:x="1948" fg:w="1"/><text x="88.5146%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="88.2646%" y="933" width="0.0453%" height="15" fill="rgb(218,107,18)" fg:x="1948" fg:w="1"/><text x="88.5146%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="88.2646%" y="917" width="0.0453%" height="15" fill="rgb(237,177,39)" fg:x="1948" fg:w="1"/><text x="88.5146%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="88.2646%" y="901" width="0.0453%" height="15" fill="rgb(246,69,6)" fg:x="1948" fg:w="1"/><text x="88.5146%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="88.2646%" y="885" width="0.0453%" height="15" fill="rgb(234,208,37)" fg:x="1948" fg:w="1"/><text x="88.5146%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="88.2646%" y="869" width="0.0453%" height="15" fill="rgb(225,4,6)" fg:x="1948" fg:w="1"/><text x="88.5146%" y="879.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,042 samples, 47.21%)</title><rect x="41.1418%" y="1061" width="47.2134%" height="15" fill="rgb(233,45,0)" fg:x="908" fg:w="1042"/><text x="41.3918%" y="1071.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (954 samples, 43.23%)</title><rect x="45.1291%" y="1045" width="43.2261%" height="15" fill="rgb(226,136,5)" fg:x="996" fg:w="954"/><text x="45.3791%" y="1055.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (11 samples, 0.50%)</title><rect x="87.8568%" y="1029" width="0.4984%" height="15" fill="rgb(211,91,47)" fg:x="1939" fg:w="11"/><text x="88.1068%" y="1039.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (8 samples, 0.36%)</title><rect x="87.9928%" y="1013" width="0.3625%" height="15" fill="rgb(242,88,51)" fg:x="1942" fg:w="8"/><text x="88.2428%" y="1023.50"></text></g><g><title>tokio::runtime::task::state::State::load (1 samples, 0.05%)</title><rect x="88.3099%" y="997" width="0.0453%" height="15" fill="rgb(230,91,28)" fg:x="1949" fg:w="1"/><text x="88.5599%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.05%)</title><rect x="88.3099%" y="981" width="0.0453%" height="15" fill="rgb(254,186,29)" fg:x="1949" fg:w="1"/><text x="88.5599%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.05%)</title><rect x="88.3099%" y="965" width="0.0453%" height="15" fill="rgb(238,6,4)" fg:x="1949" fg:w="1"/><text x="88.5599%" y="975.50"></text></g><g><title>tokio::runtime::coop::budget (1,066 samples, 48.30%)</title><rect x="40.1903%" y="1141" width="48.3009%" height="15" fill="rgb(221,151,16)" fg:x="887" fg:w="1066"/><text x="40.4403%" y="1151.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (1,066 samples, 48.30%)</title><rect x="40.1903%" y="1125" width="48.3009%" height="15" fill="rgb(251,143,52)" fg:x="887" fg:w="1066"/><text x="40.4403%" y="1135.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (1,065 samples, 48.26%)</title><rect x="40.2356%" y="1109" width="48.2556%" height="15" fill="rgb(206,90,15)" fg:x="888" fg:w="1065"/><text x="40.4856%" y="1119.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (1,059 samples, 47.98%)</title><rect x="40.5075%" y="1093" width="47.9837%" height="15" fill="rgb(218,35,8)" fg:x="894" fg:w="1059"/><text x="40.7575%" y="1103.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1,059 samples, 47.98%)</title><rect x="40.5075%" y="1077" width="47.9837%" height="15" fill="rgb(239,215,6)" fg:x="894" fg:w="1059"/><text x="40.7575%" y="1087.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (3 samples, 0.14%)</title><rect x="88.3552%" y="1061" width="0.1359%" height="15" fill="rgb(245,116,39)" fg:x="1950" fg:w="3"/><text x="88.6052%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_from_searching (5 samples, 0.23%)</title><rect x="88.5365%" y="1109" width="0.2266%" height="15" fill="rgb(242,65,28)" fg:x="1954" fg:w="5"/><text x="88.7865%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_searching (5 samples, 0.23%)</title><rect x="88.5365%" y="1093" width="0.2266%" height="15" fill="rgb(252,132,53)" fg:x="1954" fg:w="5"/><text x="88.7865%" y="1103.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (1 samples, 0.05%)</title><rect x="88.7630%" y="1093" width="0.0453%" height="15" fill="rgb(224,159,50)" fg:x="1959" fg:w="1"/><text x="89.0130%" y="1103.50"></text></g><g><title>std::sys::pal::unix::locks::futex_condvar::Condvar::notify_one (1 samples, 0.05%)</title><rect x="88.7630%" y="1077" width="0.0453%" height="15" fill="rgb(224,93,4)" fg:x="1959" fg:w="1"/><text x="89.0130%" y="1087.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wake (1 samples, 0.05%)</title><rect x="88.7630%" y="1061" width="0.0453%" height="15" fill="rgb(208,81,34)" fg:x="1959" fg:w="1"/><text x="89.0130%" y="1071.50"></text></g><g><title>syscall (73 samples, 3.31%)</title><rect x="88.8083%" y="1093" width="3.3077%" height="15" fill="rgb(233,92,54)" fg:x="1960" fg:w="73"/><text x="89.0583%" y="1103.50">sys..</text></g><g><title>[unknown] (66 samples, 2.99%)</title><rect x="89.1255%" y="1077" width="2.9905%" height="15" fill="rgb(237,21,14)" fg:x="1967" fg:w="66"/><text x="89.3755%" y="1087.50">[un..</text></g><g><title>[unknown] (61 samples, 2.76%)</title><rect x="89.3521%" y="1061" width="2.7639%" height="15" fill="rgb(249,128,51)" fg:x="1972" fg:w="61"/><text x="89.6021%" y="1071.50">[u..</text></g><g><title>[unknown] (57 samples, 2.58%)</title><rect x="89.5333%" y="1045" width="2.5827%" height="15" fill="rgb(223,129,24)" fg:x="1976" fg:w="57"/><text x="89.7833%" y="1055.50">[u..</text></g><g><title>[unknown] (54 samples, 2.45%)</title><rect x="89.6692%" y="1029" width="2.4468%" height="15" fill="rgb(231,168,25)" fg:x="1979" fg:w="54"/><text x="89.9192%" y="1039.50">[u..</text></g><g><title>[unknown] (44 samples, 1.99%)</title><rect x="90.1223%" y="1013" width="1.9937%" height="15" fill="rgb(224,39,20)" fg:x="1989" fg:w="44"/><text x="90.3723%" y="1023.50">[..</text></g><g><title>[unknown] (34 samples, 1.54%)</title><rect x="90.5754%" y="997" width="1.5406%" height="15" fill="rgb(225,152,53)" fg:x="1999" fg:w="34"/><text x="90.8254%" y="1007.50"></text></g><g><title>[unknown] (25 samples, 1.13%)</title><rect x="90.9832%" y="981" width="1.1328%" height="15" fill="rgb(252,17,24)" fg:x="2008" fg:w="25"/><text x="91.2332%" y="991.50"></text></g><g><title>[unknown] (9 samples, 0.41%)</title><rect x="91.7082%" y="965" width="0.4078%" height="15" fill="rgb(250,114,30)" fg:x="2024" fg:w="9"/><text x="91.9582%" y="975.50"></text></g><g><title>[unknown] (5 samples, 0.23%)</title><rect x="91.8894%" y="949" width="0.2266%" height="15" fill="rgb(229,5,4)" fg:x="2028" fg:w="5"/><text x="92.1394%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (2 samples, 0.09%)</title><rect x="92.1160%" y="1077" width="0.0906%" height="15" fill="rgb(225,176,49)" fg:x="2033" fg:w="2"/><text x="92.3660%" y="1087.50"></text></g><g><title>core::ptr::read (2 samples, 0.09%)</title><rect x="92.1160%" y="1061" width="0.0906%" height="15" fill="rgb(224,221,49)" fg:x="2033" fg:w="2"/><text x="92.3660%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (7 samples, 0.32%)</title><rect x="92.1160%" y="1093" width="0.3172%" height="15" fill="rgb(253,169,27)" fg:x="2033" fg:w="7"/><text x="92.3660%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (5 samples, 0.23%)</title><rect x="92.2066%" y="1077" width="0.2266%" height="15" fill="rgb(211,206,16)" fg:x="2035" fg:w="5"/><text x="92.4566%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.18%)</title><rect x="92.2519%" y="1061" width="0.1812%" height="15" fill="rgb(244,87,35)" fg:x="2036" fg:w="4"/><text x="92.5019%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.18%)</title><rect x="92.2519%" y="1045" width="0.1812%" height="15" fill="rgb(246,28,10)" fg:x="2036" fg:w="4"/><text x="92.5019%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.05%)</title><rect x="92.4332%" y="1077" width="0.0453%" height="15" fill="rgb(229,12,44)" fg:x="2040" fg:w="1"/><text x="92.6832%" y="1087.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.05%)</title><rect x="92.4332%" y="1061" width="0.0453%" height="15" fill="rgb(210,145,37)" fg:x="2040" fg:w="1"/><text x="92.6832%" y="1071.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.05%)</title><rect x="92.4332%" y="1045" width="0.0453%" height="15" fill="rgb(227,112,52)" fg:x="2040" fg:w="1"/><text x="92.6832%" y="1055.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="92.5691%" y="933" width="0.0453%" height="15" fill="rgb(238,155,34)" fg:x="2043" fg:w="1"/><text x="92.8191%" y="943.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (9 samples, 0.41%)</title><rect x="92.5691%" y="1061" width="0.4078%" height="15" fill="rgb(239,226,36)" fg:x="2043" fg:w="9"/><text x="92.8191%" y="1071.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (9 samples, 0.41%)</title><rect x="92.5691%" y="1045" width="0.4078%" height="15" fill="rgb(230,16,23)" fg:x="2043" fg:w="9"/><text x="92.8191%" y="1055.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (9 samples, 0.41%)</title><rect x="92.5691%" y="1029" width="0.4078%" height="15" fill="rgb(236,171,36)" fg:x="2043" fg:w="9"/><text x="92.8191%" y="1039.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (9 samples, 0.41%)</title><rect x="92.5691%" y="1013" width="0.4078%" height="15" fill="rgb(221,22,14)" fg:x="2043" fg:w="9"/><text x="92.8191%" y="1023.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (9 samples, 0.41%)</title><rect x="92.5691%" y="997" width="0.4078%" height="15" fill="rgb(242,43,11)" fg:x="2043" fg:w="9"/><text x="92.8191%" y="1007.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (9 samples, 0.41%)</title><rect x="92.5691%" y="981" width="0.4078%" height="15" fill="rgb(232,69,23)" fg:x="2043" fg:w="9"/><text x="92.8191%" y="991.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (9 samples, 0.41%)</title><rect x="92.5691%" y="965" width="0.4078%" height="15" fill="rgb(216,180,54)" fg:x="2043" fg:w="9"/><text x="92.8191%" y="975.50"></text></g><g><title>write (9 samples, 0.41%)</title><rect x="92.5691%" y="949" width="0.4078%" height="15" fill="rgb(216,5,24)" fg:x="2043" fg:w="9"/><text x="92.8191%" y="959.50"></text></g><g><title>[unknown] (8 samples, 0.36%)</title><rect x="92.6144%" y="933" width="0.3625%" height="15" fill="rgb(225,89,9)" fg:x="2044" fg:w="8"/><text x="92.8644%" y="943.50"></text></g><g><title>[unknown] (8 samples, 0.36%)</title><rect x="92.6144%" y="917" width="0.3625%" height="15" fill="rgb(243,75,33)" fg:x="2044" fg:w="8"/><text x="92.8644%" y="927.50"></text></g><g><title>[unknown] (7 samples, 0.32%)</title><rect x="92.6597%" y="901" width="0.3172%" height="15" fill="rgb(247,141,45)" fg:x="2045" fg:w="7"/><text x="92.9097%" y="911.50"></text></g><g><title>[unknown] (7 samples, 0.32%)</title><rect x="92.6597%" y="885" width="0.3172%" height="15" fill="rgb(232,177,36)" fg:x="2045" fg:w="7"/><text x="92.9097%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.23%)</title><rect x="92.7503%" y="869" width="0.2266%" height="15" fill="rgb(219,125,36)" fg:x="2047" fg:w="5"/><text x="93.0003%" y="879.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="92.7957%" y="853" width="0.1812%" height="15" fill="rgb(227,94,9)" fg:x="2048" fg:w="4"/><text x="93.0457%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="92.8410%" y="837" width="0.1359%" height="15" fill="rgb(240,34,52)" fg:x="2049" fg:w="3"/><text x="93.0910%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="92.8410%" y="821" width="0.1359%" height="15" fill="rgb(216,45,12)" fg:x="2049" fg:w="3"/><text x="93.0910%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="92.8863%" y="805" width="0.0906%" height="15" fill="rgb(246,21,19)" fg:x="2050" fg:w="2"/><text x="93.1363%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="92.8863%" y="789" width="0.0906%" height="15" fill="rgb(213,98,42)" fg:x="2050" fg:w="2"/><text x="93.1363%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="92.9316%" y="773" width="0.0453%" height="15" fill="rgb(250,136,47)" fg:x="2051" fg:w="1"/><text x="93.1816%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="92.9316%" y="757" width="0.0453%" height="15" fill="rgb(251,124,27)" fg:x="2051" fg:w="1"/><text x="93.1816%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="92.9316%" y="741" width="0.0453%" height="15" fill="rgb(229,180,14)" fg:x="2051" fg:w="1"/><text x="93.1816%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (1,171 samples, 53.06%)</title><rect x="40.0544%" y="1157" width="53.0585%" height="15" fill="rgb(245,216,25)" fg:x="884" fg:w="1171"/><text x="40.3044%" y="1167.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (102 samples, 4.62%)</title><rect x="88.4912%" y="1141" width="4.6217%" height="15" fill="rgb(251,43,5)" fg:x="1953" fg:w="102"/><text x="88.7412%" y="1151.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (101 samples, 4.58%)</title><rect x="88.5365%" y="1125" width="4.5763%" height="15" fill="rgb(250,128,24)" fg:x="1954" fg:w="101"/><text x="88.7865%" y="1135.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (96 samples, 4.35%)</title><rect x="88.7630%" y="1109" width="4.3498%" height="15" fill="rgb(217,117,27)" fg:x="1959" fg:w="96"/><text x="89.0130%" y="1119.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (15 samples, 0.68%)</title><rect x="92.4332%" y="1093" width="0.6797%" height="15" fill="rgb(245,147,4)" fg:x="2040" fg:w="15"/><text x="92.6832%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (14 samples, 0.63%)</title><rect x="92.4785%" y="1077" width="0.6343%" height="15" fill="rgb(242,201,35)" fg:x="2041" fg:w="14"/><text x="92.7285%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (3 samples, 0.14%)</title><rect x="92.9769%" y="1061" width="0.1359%" height="15" fill="rgb(218,181,1)" fg:x="2052" fg:w="3"/><text x="93.2269%" y="1071.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.14%)</title><rect x="92.9769%" y="1045" width="0.1359%" height="15" fill="rgb(222,6,29)" fg:x="2052" fg:w="3"/><text x="93.2269%" y="1055.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.14%)</title><rect x="92.9769%" y="1029" width="0.1359%" height="15" fill="rgb(208,186,3)" fg:x="2052" fg:w="3"/><text x="93.2269%" y="1039.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (3 samples, 0.14%)</title><rect x="92.9769%" y="1013" width="0.1359%" height="15" fill="rgb(216,36,26)" fg:x="2052" fg:w="3"/><text x="93.2269%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1 samples, 0.05%)</title><rect x="93.0675%" y="997" width="0.0453%" height="15" fill="rgb(248,201,23)" fg:x="2054" fg:w="1"/><text x="93.3175%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.05%)</title><rect x="93.0675%" y="981" width="0.0453%" height="15" fill="rgb(251,170,31)" fg:x="2054" fg:w="1"/><text x="93.3175%" y="991.50"></text></g><g><title>&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.23%)</title><rect x="93.4753%" y="1141" width="0.2266%" height="15" fill="rgb(207,110,25)" fg:x="2063" fg:w="5"/><text x="93.7253%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::inject::synced::Synced::pop (5 samples, 0.23%)</title><rect x="93.4753%" y="1125" width="0.2266%" height="15" fill="rgb(250,54,15)" fg:x="2063" fg:w="5"/><text x="93.7253%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="93.6565%" y="1109" width="0.0453%" height="15" fill="rgb(227,68,33)" fg:x="2067" fg:w="1"/><text x="93.9065%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="93.6565%" y="1093" width="0.0453%" height="15" fill="rgb(238,34,41)" fg:x="2067" fg:w="1"/><text x="93.9065%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="93.6565%" y="1077" width="0.0453%" height="15" fill="rgb(220,11,15)" fg:x="2067" fg:w="1"/><text x="93.9065%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="93.6565%" y="1061" width="0.0453%" height="15" fill="rgb(246,111,35)" fg:x="2067" fg:w="1"/><text x="93.9065%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="93.6565%" y="1045" width="0.0453%" height="15" fill="rgb(209,88,53)" fg:x="2067" fg:w="1"/><text x="93.9065%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="93.6565%" y="1029" width="0.0453%" height="15" fill="rgb(231,185,47)" fg:x="2067" fg:w="1"/><text x="93.9065%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="93.6565%" y="1013" width="0.0453%" height="15" fill="rgb(233,154,1)" fg:x="2067" fg:w="1"/><text x="93.9065%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="93.6565%" y="997" width="0.0453%" height="15" fill="rgb(225,15,46)" fg:x="2067" fg:w="1"/><text x="93.9065%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="93.6565%" y="981" width="0.0453%" height="15" fill="rgb(211,135,41)" fg:x="2067" fg:w="1"/><text x="93.9065%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="93.6565%" y="965" width="0.0453%" height="15" fill="rgb(208,54,0)" fg:x="2067" fg:w="1"/><text x="93.9065%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="93.6565%" y="949" width="0.0453%" height="15" fill="rgb(244,136,14)" fg:x="2067" fg:w="1"/><text x="93.9065%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (3 samples, 0.14%)</title><rect x="93.7019%" y="1141" width="0.1359%" height="15" fill="rgb(241,56,14)" fg:x="2068" fg:w="3"/><text x="93.9519%" y="1151.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.14%)</title><rect x="93.7019%" y="1125" width="0.1359%" height="15" fill="rgb(205,80,24)" fg:x="2068" fg:w="3"/><text x="93.9519%" y="1135.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::unlock (3 samples, 0.14%)</title><rect x="93.7019%" y="1109" width="0.1359%" height="15" fill="rgb(220,57,4)" fg:x="2068" fg:w="3"/><text x="93.9519%" y="1119.50"></text></g><g><title>syscall (3 samples, 0.14%)</title><rect x="93.7019%" y="1093" width="0.1359%" height="15" fill="rgb(226,193,50)" fg:x="2068" fg:w="3"/><text x="93.9519%" y="1103.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="93.7019%" y="1077" width="0.1359%" height="15" fill="rgb(231,168,22)" fg:x="2068" fg:w="3"/><text x="93.9519%" y="1087.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="93.7019%" y="1061" width="0.1359%" height="15" fill="rgb(254,215,14)" fg:x="2068" fg:w="3"/><text x="93.9519%" y="1071.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="93.7019%" y="1045" width="0.1359%" height="15" fill="rgb(211,115,16)" fg:x="2068" fg:w="3"/><text x="93.9519%" y="1055.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="93.7019%" y="1029" width="0.1359%" height="15" fill="rgb(236,210,16)" fg:x="2068" fg:w="3"/><text x="93.9519%" y="1039.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="93.7019%" y="1013" width="0.1359%" height="15" fill="rgb(221,94,12)" fg:x="2068" fg:w="3"/><text x="93.9519%" y="1023.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="93.7019%" y="997" width="0.1359%" height="15" fill="rgb(235,218,49)" fg:x="2068" fg:w="3"/><text x="93.9519%" y="1007.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="93.7019%" y="981" width="0.1359%" height="15" fill="rgb(217,114,14)" fg:x="2068" fg:w="3"/><text x="93.9519%" y="991.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="93.7019%" y="965" width="0.1359%" height="15" fill="rgb(216,145,22)" fg:x="2068" fg:w="3"/><text x="93.9519%" y="975.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.05%)</title><rect x="93.8378%" y="1109" width="0.0453%" height="15" fill="rgb(217,112,39)" fg:x="2071" fg:w="1"/><text x="94.0878%" y="1119.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.05%)</title><rect x="93.8378%" y="1093" width="0.0453%" height="15" fill="rgb(225,85,32)" fg:x="2071" fg:w="1"/><text x="94.0878%" y="1103.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (1 samples, 0.05%)</title><rect x="93.9737%" y="1077" width="0.0453%" height="15" fill="rgb(245,209,47)" fg:x="2074" fg:w="1"/><text x="94.2237%" y="1087.50"></text></g><g><title>syscall (1 samples, 0.05%)</title><rect x="93.9737%" y="1061" width="0.0453%" height="15" fill="rgb(218,220,15)" fg:x="2074" fg:w="1"/><text x="94.2237%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="93.9737%" y="1045" width="0.0453%" height="15" fill="rgb(222,202,31)" fg:x="2074" fg:w="1"/><text x="94.2237%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="93.9737%" y="1029" width="0.0453%" height="15" fill="rgb(243,203,4)" fg:x="2074" fg:w="1"/><text x="94.2237%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="93.9737%" y="1013" width="0.0453%" height="15" fill="rgb(237,92,17)" fg:x="2074" fg:w="1"/><text x="94.2237%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="93.9737%" y="997" width="0.0453%" height="15" fill="rgb(231,119,7)" fg:x="2074" fg:w="1"/><text x="94.2237%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="93.9737%" y="981" width="0.0453%" height="15" fill="rgb(237,82,41)" fg:x="2074" fg:w="1"/><text x="94.2237%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="93.9737%" y="965" width="0.0453%" height="15" fill="rgb(226,81,48)" fg:x="2074" fg:w="1"/><text x="94.2237%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="93.9737%" y="949" width="0.0453%" height="15" fill="rgb(234,70,51)" fg:x="2074" fg:w="1"/><text x="94.2237%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="93.9737%" y="933" width="0.0453%" height="15" fill="rgb(251,86,4)" fg:x="2074" fg:w="1"/><text x="94.2237%" y="943.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.32%)</title><rect x="93.8378%" y="1141" width="0.3172%" height="15" fill="rgb(244,144,28)" fg:x="2071" fg:w="7"/><text x="94.0878%" y="1151.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.32%)</title><rect x="93.8378%" y="1125" width="0.3172%" height="15" fill="rgb(232,161,39)" fg:x="2071" fg:w="7"/><text x="94.0878%" y="1135.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (6 samples, 0.27%)</title><rect x="93.8831%" y="1109" width="0.2719%" height="15" fill="rgb(247,34,51)" fg:x="2072" fg:w="6"/><text x="94.1331%" y="1119.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (5 samples, 0.23%)</title><rect x="93.9284%" y="1093" width="0.2266%" height="15" fill="rgb(225,132,2)" fg:x="2073" fg:w="5"/><text x="94.1784%" y="1103.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::spin (3 samples, 0.14%)</title><rect x="94.0190%" y="1077" width="0.1359%" height="15" fill="rgb(209,159,44)" fg:x="2075" fg:w="3"/><text x="94.2690%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back (2 samples, 0.09%)</title><rect x="94.1550%" y="1141" width="0.0906%" height="15" fill="rgb(251,214,1)" fg:x="2078" fg:w="2"/><text x="94.4050%" y="1151.50"></text></g><g><title>&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="94.1550%" y="1125" width="0.0906%" height="15" fill="rgb(247,84,47)" fg:x="2078" fg:w="2"/><text x="94.4050%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::inject::synced::Synced::pop (2 samples, 0.09%)</title><rect x="94.1550%" y="1109" width="0.0906%" height="15" fill="rgb(240,111,43)" fg:x="2078" fg:w="2"/><text x="94.4050%" y="1119.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.05%)</title><rect x="94.2003%" y="1093" width="0.0453%" height="15" fill="rgb(215,214,35)" fg:x="2079" fg:w="1"/><text x="94.4503%" y="1103.50"></text></g><g><title>tokio::loom::std::atomic_u32::AtomicU32::unsync_load (1 samples, 0.05%)</title><rect x="94.2909%" y="1077" width="0.0453%" height="15" fill="rgb(248,207,23)" fg:x="2081" fg:w="1"/><text x="94.5409%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.05%)</title><rect x="94.2909%" y="1061" width="0.0453%" height="15" fill="rgb(214,186,4)" fg:x="2081" fg:w="1"/><text x="94.5409%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.05%)</title><rect x="94.2909%" y="1045" width="0.0453%" height="15" fill="rgb(220,133,22)" fg:x="2081" fg:w="1"/><text x="94.5409%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (3 samples, 0.14%)</title><rect x="94.2456%" y="1141" width="0.1359%" height="15" fill="rgb(239,134,19)" fg:x="2080" fg:w="3"/><text x="94.4956%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (3 samples, 0.14%)</title><rect x="94.2456%" y="1125" width="0.1359%" height="15" fill="rgb(250,140,9)" fg:x="2080" fg:w="3"/><text x="94.4956%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (3 samples, 0.14%)</title><rect x="94.2456%" y="1109" width="0.1359%" height="15" fill="rgb(225,59,14)" fg:x="2080" fg:w="3"/><text x="94.4956%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (3 samples, 0.14%)</title><rect x="94.2456%" y="1093" width="0.1359%" height="15" fill="rgb(214,152,51)" fg:x="2080" fg:w="3"/><text x="94.4956%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (1 samples, 0.05%)</title><rect x="94.3362%" y="1077" width="0.0453%" height="15" fill="rgb(251,227,43)" fg:x="2082" fg:w="1"/><text x="94.5862%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (29 samples, 1.31%)</title><rect x="93.1128%" y="1157" width="1.3140%" height="15" fill="rgb(241,96,17)" fg:x="2055" fg:w="29"/><text x="93.3628%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Worker::inject (1 samples, 0.05%)</title><rect x="94.3815%" y="1141" width="0.0453%" height="15" fill="rgb(234,198,43)" fg:x="2083" fg:w="1"/><text x="94.6315%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.05%)</title><rect x="94.3815%" y="1125" width="0.0453%" height="15" fill="rgb(220,108,29)" fg:x="2083" fg:w="1"/><text x="94.6315%" y="1135.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.05%)</title><rect x="94.3815%" y="1109" width="0.0453%" height="15" fill="rgb(226,163,33)" fg:x="2083" fg:w="1"/><text x="94.6315%" y="1119.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.05%)</title><rect x="94.3815%" y="1093" width="0.0453%" height="15" fill="rgb(205,194,45)" fg:x="2083" fg:w="1"/><text x="94.6315%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (1 samples, 0.05%)</title><rect x="94.4268%" y="1109" width="0.0453%" height="15" fill="rgb(206,143,44)" fg:x="2084" fg:w="1"/><text x="94.6768%" y="1119.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="94.4268%" y="1093" width="0.0453%" height="15" fill="rgb(236,136,36)" fg:x="2084" fg:w="1"/><text x="94.6768%" y="1103.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::unlock (1 samples, 0.05%)</title><rect x="94.4268%" y="1077" width="0.0453%" height="15" fill="rgb(249,172,42)" fg:x="2084" fg:w="1"/><text x="94.6768%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::pre_shutdown (5 samples, 0.23%)</title><rect x="94.4268%" y="1157" width="0.2266%" height="15" fill="rgb(216,139,23)" fg:x="2084" fg:w="5"/><text x="94.6768%" y="1167.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::close_and_shutdown_all (5 samples, 0.23%)</title><rect x="94.4268%" y="1141" width="0.2266%" height="15" fill="rgb(207,166,20)" fg:x="2084" fg:w="5"/><text x="94.6768%" y="1151.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (5 samples, 0.23%)</title><rect x="94.4268%" y="1125" width="0.2266%" height="15" fill="rgb(210,209,22)" fg:x="2084" fg:w="5"/><text x="94.6768%" y="1135.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (4 samples, 0.18%)</title><rect x="94.4721%" y="1109" width="0.1812%" height="15" fill="rgb(232,118,20)" fg:x="2085" fg:w="4"/><text x="94.7221%" y="1119.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.18%)</title><rect x="94.4721%" y="1093" width="0.1812%" height="15" fill="rgb(238,113,42)" fg:x="2085" fg:w="4"/><text x="94.7221%" y="1103.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.18%)</title><rect x="94.4721%" y="1077" width="0.1812%" height="15" fill="rgb(231,42,5)" fg:x="2085" fg:w="4"/><text x="94.7221%" y="1087.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (4 samples, 0.18%)</title><rect x="94.4721%" y="1061" width="0.1812%" height="15" fill="rgb(243,166,24)" fg:x="2085" fg:w="4"/><text x="94.7221%" y="1071.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (1 samples, 0.05%)</title><rect x="94.6081%" y="1045" width="0.0453%" height="15" fill="rgb(237,226,12)" fg:x="2088" fg:w="1"/><text x="94.8581%" y="1055.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::spin (1 samples, 0.05%)</title><rect x="94.6081%" y="1029" width="0.0453%" height="15" fill="rgb(229,133,24)" fg:x="2088" fg:w="1"/><text x="94.8581%" y="1039.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.05%)</title><rect x="95.3330%" y="1141" width="0.0453%" height="15" fill="rgb(238,33,43)" fg:x="2104" fg:w="1"/><text x="95.5830%" y="1151.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.05%)</title><rect x="95.3330%" y="1125" width="0.0453%" height="15" fill="rgb(227,59,38)" fg:x="2104" fg:w="1"/><text x="95.5830%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.09%)</title><rect x="95.8314%" y="1125" width="0.0906%" height="15" fill="rgb(230,97,0)" fg:x="2115" fg:w="2"/><text x="96.0814%" y="1135.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2 samples, 0.09%)</title><rect x="95.8314%" y="1109" width="0.0906%" height="15" fill="rgb(250,173,50)" fg:x="2115" fg:w="2"/><text x="96.0814%" y="1119.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.09%)</title><rect x="95.8314%" y="1093" width="0.0906%" height="15" fill="rgb(240,15,50)" fg:x="2115" fg:w="2"/><text x="96.0814%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="95.9221%" y="1125" width="0.0453%" height="15" fill="rgb(221,93,22)" fg:x="2117" fg:w="1"/><text x="96.1721%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="95.9221%" y="1109" width="0.0453%" height="15" fill="rgb(245,180,53)" fg:x="2117" fg:w="1"/><text x="96.1721%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="95.9221%" y="1093" width="0.0453%" height="15" fill="rgb(231,88,51)" fg:x="2117" fg:w="1"/><text x="96.1721%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="95.9221%" y="1077" width="0.0453%" height="15" fill="rgb(240,58,21)" fg:x="2117" fg:w="1"/><text x="96.1721%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="95.9221%" y="1061" width="0.0453%" height="15" fill="rgb(237,21,10)" fg:x="2117" fg:w="1"/><text x="96.1721%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="95.9221%" y="1045" width="0.0453%" height="15" fill="rgb(218,43,11)" fg:x="2117" fg:w="1"/><text x="96.1721%" y="1055.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.05%)</title><rect x="95.9674%" y="1125" width="0.0453%" height="15" fill="rgb(218,221,29)" fg:x="2118" fg:w="1"/><text x="96.2174%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (1 samples, 0.05%)</title><rect x="96.0127%" y="1125" width="0.0453%" height="15" fill="rgb(214,118,42)" fg:x="2119" fg:w="1"/><text x="96.2627%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.05%)</title><rect x="96.0127%" y="1109" width="0.0453%" height="15" fill="rgb(251,200,26)" fg:x="2119" fg:w="1"/><text x="96.2627%" y="1119.50"></text></g><g><title>tokio::loom::std::atomic_u32::AtomicU32::unsync_load (1 samples, 0.05%)</title><rect x="96.0580%" y="1125" width="0.0453%" height="15" fill="rgb(237,101,39)" fg:x="2120" fg:w="1"/><text x="96.3080%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.05%)</title><rect x="96.0580%" y="1109" width="0.0453%" height="15" fill="rgb(251,117,11)" fg:x="2120" fg:w="1"/><text x="96.3080%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.05%)</title><rect x="96.0580%" y="1093" width="0.0453%" height="15" fill="rgb(216,223,23)" fg:x="2120" fg:w="1"/><text x="96.3080%" y="1103.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.05%)</title><rect x="97.1908%" y="1109" width="0.0453%" height="15" fill="rgb(251,54,12)" fg:x="2145" fg:w="1"/><text x="97.4408%" y="1119.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.05%)</title><rect x="97.1908%" y="1093" width="0.0453%" height="15" fill="rgb(254,176,54)" fg:x="2145" fg:w="1"/><text x="97.4408%" y="1103.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.05%)</title><rect x="97.2361%" y="1109" width="0.0453%" height="15" fill="rgb(210,32,8)" fg:x="2146" fg:w="1"/><text x="97.4861%" y="1119.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.05%)</title><rect x="97.2814%" y="1109" width="0.0453%" height="15" fill="rgb(235,52,38)" fg:x="2147" fg:w="1"/><text x="97.5314%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2::_{{closure}} (1 samples, 0.05%)</title><rect x="97.2814%" y="1093" width="0.0453%" height="15" fill="rgb(231,4,44)" fg:x="2147" fg:w="1"/><text x="97.5314%" y="1103.50"></text></g><g><title>core::ptr::write (1 samples, 0.05%)</title><rect x="97.2814%" y="1077" width="0.0453%" height="15" fill="rgb(249,2,32)" fg:x="2147" fg:w="1"/><text x="97.5314%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::pack (1 samples, 0.05%)</title><rect x="97.3267%" y="1109" width="0.0453%" height="15" fill="rgb(224,65,26)" fg:x="2148" fg:w="1"/><text x="97.5767%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (64 samples, 2.90%)</title><rect x="95.3783%" y="1141" width="2.8999%" height="15" fill="rgb(250,73,40)" fg:x="2105" fg:w="64"/><text x="95.6283%" y="1151.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (48 samples, 2.17%)</title><rect x="96.1033%" y="1125" width="2.1749%" height="15" fill="rgb(253,177,16)" fg:x="2121" fg:w="48"/><text x="96.3533%" y="1135.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (20 samples, 0.91%)</title><rect x="97.3720%" y="1109" width="0.9062%" height="15" fill="rgb(217,32,34)" fg:x="2149" fg:w="20"/><text x="97.6220%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (1 samples, 0.05%)</title><rect x="98.2782%" y="1141" width="0.0453%" height="15" fill="rgb(212,7,10)" fg:x="2169" fg:w="1"/><text x="98.5282%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::pop (1 samples, 0.05%)</title><rect x="98.2782%" y="1125" width="0.0453%" height="15" fill="rgb(245,89,8)" fg:x="2169" fg:w="1"/><text x="98.5282%" y="1135.50"></text></g><g><title>&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="98.2782%" y="1109" width="0.0453%" height="15" fill="rgb(237,16,53)" fg:x="2169" fg:w="1"/><text x="98.5282%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::inject::synced::Synced::pop (1 samples, 0.05%)</title><rect x="98.2782%" y="1093" width="0.0453%" height="15" fill="rgb(250,204,30)" fg:x="2169" fg:w="1"/><text x="98.5282%" y="1103.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.05%)</title><rect x="98.2782%" y="1077" width="0.0453%" height="15" fill="rgb(208,77,27)" fg:x="2169" fg:w="1"/><text x="98.5282%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_searching (8 samples, 0.36%)</title><rect x="98.3235%" y="1141" width="0.3625%" height="15" fill="rgb(250,204,28)" fg:x="2170" fg:w="8"/><text x="98.5735%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_searching (3 samples, 0.14%)</title><rect x="98.5501%" y="1125" width="0.1359%" height="15" fill="rgb(244,63,21)" fg:x="2175" fg:w="3"/><text x="98.8001%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="98.6407%" y="1109" width="0.0453%" height="15" fill="rgb(236,85,44)" fg:x="2177" fg:w="1"/><text x="98.8907%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="98.6407%" y="1093" width="0.0453%" height="15" fill="rgb(215,98,4)" fg:x="2177" fg:w="1"/><text x="98.8907%" y="1103.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1,596 samples, 72.32%)</title><rect x="26.5519%" y="1349" width="72.3154%" height="15" fill="rgb(235,38,11)" fg:x="586" fg:w="1596"/><text x="26.8019%" y="1359.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (1,596 samples, 72.32%)</title><rect x="26.5519%" y="1333" width="72.3154%" height="15" fill="rgb(254,186,25)" fg:x="586" fg:w="1596"/><text x="26.8019%" y="1343.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (1,596 samples, 72.32%)</title><rect x="26.5519%" y="1317" width="72.3154%" height="15" fill="rgb(225,55,31)" fg:x="586" fg:w="1596"/><text x="26.8019%" y="1327.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (1,596 samples, 72.32%)</title><rect x="26.5519%" y="1301" width="72.3154%" height="15" fill="rgb(211,15,21)" fg:x="586" fg:w="1596"/><text x="26.8019%" y="1311.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (1,592 samples, 72.13%)</title><rect x="26.7331%" y="1285" width="72.1341%" height="15" fill="rgb(215,187,41)" fg:x="590" fg:w="1592"/><text x="26.9831%" y="1295.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}</text></g><g><title>tokio::runtime::context::set_scheduler (1,592 samples, 72.13%)</title><rect x="26.7331%" y="1269" width="72.1341%" height="15" fill="rgb(248,69,32)" fg:x="590" fg:w="1592"/><text x="26.9831%" y="1279.50">tokio::runtime::context::set_scheduler</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,592 samples, 72.13%)</title><rect x="26.7331%" y="1253" width="72.1341%" height="15" fill="rgb(252,102,52)" fg:x="590" fg:w="1592"/><text x="26.9831%" y="1263.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,592 samples, 72.13%)</title><rect x="26.7331%" y="1237" width="72.1341%" height="15" fill="rgb(253,140,32)" fg:x="590" fg:w="1592"/><text x="26.9831%" y="1247.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (1,592 samples, 72.13%)</title><rect x="26.7331%" y="1221" width="72.1341%" height="15" fill="rgb(216,56,42)" fg:x="590" fg:w="1592"/><text x="26.9831%" y="1231.50">tokio::runtime::context::set_scheduler::_{{closure}}</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (1,592 samples, 72.13%)</title><rect x="26.7331%" y="1205" width="72.1341%" height="15" fill="rgb(216,184,14)" fg:x="590" fg:w="1592"/><text x="26.9831%" y="1215.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (1,591 samples, 72.09%)</title><rect x="26.7784%" y="1189" width="72.0888%" height="15" fill="rgb(237,187,27)" fg:x="591" fg:w="1591"/><text x="27.0284%" y="1199.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (1,591 samples, 72.09%)</title><rect x="26.7784%" y="1173" width="72.0888%" height="15" fill="rgb(219,65,3)" fg:x="591" fg:w="1591"/><text x="27.0284%" y="1183.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (93 samples, 4.21%)</title><rect x="94.6534%" y="1157" width="4.2139%" height="15" fill="rgb(245,83,25)" fg:x="2089" fg:w="93"/><text x="94.9034%" y="1167.50">tokio..</text></g><g><title>tokio::util::rand::FastRand::fastrand_n (4 samples, 0.18%)</title><rect x="98.6860%" y="1141" width="0.1812%" height="15" fill="rgb(214,205,45)" fg:x="2178" fg:w="4"/><text x="98.9360%" y="1151.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (4 samples, 0.18%)</title><rect x="98.6860%" y="1125" width="0.1812%" height="15" fill="rgb(241,20,18)" fg:x="2178" fg:w="4"/><text x="98.9360%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="98.8219%" y="1109" width="0.0453%" height="15" fill="rgb(232,163,23)" fg:x="2181" fg:w="1"/><text x="99.0719%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="98.8219%" y="1093" width="0.0453%" height="15" fill="rgb(214,5,46)" fg:x="2181" fg:w="1"/><text x="99.0719%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="98.8219%" y="1077" width="0.0453%" height="15" fill="rgb(229,78,17)" fg:x="2181" fg:w="1"/><text x="99.0719%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="98.8219%" y="1061" width="0.0453%" height="15" fill="rgb(248,89,10)" fg:x="2181" fg:w="1"/><text x="99.0719%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="98.8219%" y="1045" width="0.0453%" height="15" fill="rgb(248,54,15)" fg:x="2181" fg:w="1"/><text x="99.0719%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="98.8219%" y="1029" width="0.0453%" height="15" fill="rgb(223,116,6)" fg:x="2181" fg:w="1"/><text x="99.0719%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="98.8219%" y="1013" width="0.0453%" height="15" fill="rgb(205,125,38)" fg:x="2181" fg:w="1"/><text x="99.0719%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="98.8219%" y="997" width="0.0453%" height="15" fill="rgb(251,78,38)" fg:x="2181" fg:w="1"/><text x="99.0719%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="98.8219%" y="981" width="0.0453%" height="15" fill="rgb(253,78,28)" fg:x="2181" fg:w="1"/><text x="99.0719%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="98.8219%" y="965" width="0.0453%" height="15" fill="rgb(209,120,3)" fg:x="2181" fg:w="1"/><text x="99.0719%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="98.8219%" y="949" width="0.0453%" height="15" fill="rgb(238,229,9)" fg:x="2181" fg:w="1"/><text x="99.0719%" y="959.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1,622 samples, 73.49%)</title><rect x="25.4191%" y="1589" width="73.4934%" height="15" fill="rgb(253,159,18)" fg:x="561" fg:w="1622"/><text x="25.6691%" y="1599.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (1,598 samples, 72.41%)</title><rect x="26.5066%" y="1573" width="72.4060%" height="15" fill="rgb(244,42,34)" fg:x="585" fg:w="1598"/><text x="26.7566%" y="1583.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (1,598 samples, 72.41%)</title><rect x="26.5066%" y="1557" width="72.4060%" height="15" fill="rgb(224,8,7)" fg:x="585" fg:w="1598"/><text x="26.7566%" y="1567.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1,598 samples, 72.41%)</title><rect x="26.5066%" y="1541" width="72.4060%" height="15" fill="rgb(210,201,45)" fg:x="585" fg:w="1598"/><text x="26.7566%" y="1551.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,598 samples, 72.41%)</title><rect x="26.5066%" y="1525" width="72.4060%" height="15" fill="rgb(252,185,21)" fg:x="585" fg:w="1598"/><text x="26.7566%" y="1535.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1,598 samples, 72.41%)</title><rect x="26.5066%" y="1509" width="72.4060%" height="15" fill="rgb(223,131,1)" fg:x="585" fg:w="1598"/><text x="26.7566%" y="1519.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (1,598 samples, 72.41%)</title><rect x="26.5066%" y="1493" width="72.4060%" height="15" fill="rgb(245,141,16)" fg:x="585" fg:w="1598"/><text x="26.7566%" y="1503.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (1,598 samples, 72.41%)</title><rect x="26.5066%" y="1477" width="72.4060%" height="15" fill="rgb(229,55,45)" fg:x="585" fg:w="1598"/><text x="26.7566%" y="1487.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,598 samples, 72.41%)</title><rect x="26.5066%" y="1461" width="72.4060%" height="15" fill="rgb(208,92,15)" fg:x="585" fg:w="1598"/><text x="26.7566%" y="1471.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,597 samples, 72.36%)</title><rect x="26.5519%" y="1445" width="72.3607%" height="15" fill="rgb(234,185,47)" fg:x="586" fg:w="1597"/><text x="26.8019%" y="1455.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,597 samples, 72.36%)</title><rect x="26.5519%" y="1429" width="72.3607%" height="15" fill="rgb(253,104,50)" fg:x="586" fg:w="1597"/><text x="26.8019%" y="1439.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (1,597 samples, 72.36%)</title><rect x="26.5519%" y="1413" width="72.3607%" height="15" fill="rgb(205,70,7)" fg:x="586" fg:w="1597"/><text x="26.8019%" y="1423.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1,597 samples, 72.36%)</title><rect x="26.5519%" y="1397" width="72.3607%" height="15" fill="rgb(240,178,43)" fg:x="586" fg:w="1597"/><text x="26.8019%" y="1407.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,597 samples, 72.36%)</title><rect x="26.5519%" y="1381" width="72.3607%" height="15" fill="rgb(214,112,2)" fg:x="586" fg:w="1597"/><text x="26.8019%" y="1391.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (1,597 samples, 72.36%)</title><rect x="26.5519%" y="1365" width="72.3607%" height="15" fill="rgb(206,46,17)" fg:x="586" fg:w="1597"/><text x="26.8019%" y="1375.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (1 samples, 0.05%)</title><rect x="98.8672%" y="1349" width="0.0453%" height="15" fill="rgb(225,220,16)" fg:x="2182" fg:w="1"/><text x="99.1172%" y="1359.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="98.8672%" y="1333" width="0.0453%" height="15" fill="rgb(238,65,40)" fg:x="2182" fg:w="1"/><text x="99.1172%" y="1343.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (1 samples, 0.05%)</title><rect x="98.8672%" y="1317" width="0.0453%" height="15" fill="rgb(230,151,21)" fg:x="2182" fg:w="1"/><text x="99.1172%" y="1327.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.05%)</title><rect x="98.8672%" y="1301" width="0.0453%" height="15" fill="rgb(218,58,49)" fg:x="2182" fg:w="1"/><text x="99.1172%" y="1311.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.05%)</title><rect x="98.8672%" y="1285" width="0.0453%" height="15" fill="rgb(219,179,14)" fg:x="2182" fg:w="1"/><text x="99.1172%" y="1295.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.05%)</title><rect x="98.8672%" y="1269" width="0.0453%" height="15" fill="rgb(223,72,1)" fg:x="2182" fg:w="1"/><text x="99.1172%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (1,626 samples, 73.67%)</title><rect x="25.2832%" y="1701" width="73.6747%" height="15" fill="rgb(238,126,10)" fg:x="558" fg:w="1626"/><text x="25.5332%" y="1711.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,626 samples, 73.67%)</title><rect x="25.2832%" y="1685" width="73.6747%" height="15" fill="rgb(224,206,38)" fg:x="558" fg:w="1626"/><text x="25.5332%" y="1695.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,626 samples, 73.67%)</title><rect x="25.2832%" y="1669" width="73.6747%" height="15" fill="rgb(212,201,54)" fg:x="558" fg:w="1626"/><text x="25.5332%" y="1679.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,626 samples, 73.67%)</title><rect x="25.2832%" y="1653" width="73.6747%" height="15" fill="rgb(218,154,48)" fg:x="558" fg:w="1626"/><text x="25.5332%" y="1663.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (1,626 samples, 73.67%)</title><rect x="25.2832%" y="1637" width="73.6747%" height="15" fill="rgb(232,93,24)" fg:x="558" fg:w="1626"/><text x="25.5332%" y="1647.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,626 samples, 73.67%)</title><rect x="25.2832%" y="1621" width="73.6747%" height="15" fill="rgb(245,30,21)" fg:x="558" fg:w="1626"/><text x="25.5332%" y="1631.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (1,626 samples, 73.67%)</title><rect x="25.2832%" y="1605" width="73.6747%" height="15" fill="rgb(242,148,29)" fg:x="558" fg:w="1626"/><text x="25.5332%" y="1615.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}}</text></g><g><title>tokio::runtime::handle::Handle::enter (1 samples, 0.05%)</title><rect x="98.9126%" y="1589" width="0.0453%" height="15" fill="rgb(244,153,54)" fg:x="2183" fg:w="1"/><text x="99.1626%" y="1599.50"></text></g><g><title>tokio::runtime::context::current::try_set_current (1 samples, 0.05%)</title><rect x="98.9126%" y="1573" width="0.0453%" height="15" fill="rgb(252,87,22)" fg:x="2183" fg:w="1"/><text x="99.1626%" y="1583.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.05%)</title><rect x="98.9126%" y="1557" width="0.0453%" height="15" fill="rgb(210,51,29)" fg:x="2183" fg:w="1"/><text x="99.1626%" y="1567.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.05%)</title><rect x="98.9126%" y="1541" width="0.0453%" height="15" fill="rgb(242,136,47)" fg:x="2183" fg:w="1"/><text x="99.1626%" y="1551.50"></text></g><g><title>std::sys::pal::common::thread_local::fast_local::Key&lt;T&gt;::register_dtor (1 samples, 0.05%)</title><rect x="98.9126%" y="1525" width="0.0453%" height="15" fill="rgb(238,68,4)" fg:x="2183" fg:w="1"/><text x="99.1626%" y="1535.50"></text></g><g><title>__cxa_thread_atexit_impl (1 samples, 0.05%)</title><rect x="98.9126%" y="1509" width="0.0453%" height="15" fill="rgb(242,161,30)" fg:x="2183" fg:w="1"/><text x="99.1626%" y="1519.50"></text></g><g><title>__libc_calloc (1 samples, 0.05%)</title><rect x="98.9126%" y="1493" width="0.0453%" height="15" fill="rgb(218,58,44)" fg:x="2183" fg:w="1"/><text x="99.1626%" y="1503.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::set_name (3 samples, 0.14%)</title><rect x="98.9579%" y="1701" width="0.1359%" height="15" fill="rgb(252,125,32)" fg:x="2184" fg:w="3"/><text x="99.2079%" y="1711.50"></text></g><g><title>pthread_setname_np (3 samples, 0.14%)</title><rect x="98.9579%" y="1685" width="0.1359%" height="15" fill="rgb(219,178,0)" fg:x="2184" fg:w="3"/><text x="99.2079%" y="1695.50"></text></g><g><title>prctl (3 samples, 0.14%)</title><rect x="98.9579%" y="1669" width="0.1359%" height="15" fill="rgb(213,152,7)" fg:x="2184" fg:w="3"/><text x="99.2079%" y="1679.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="98.9579%" y="1653" width="0.1359%" height="15" fill="rgb(249,109,34)" fg:x="2184" fg:w="3"/><text x="99.2079%" y="1663.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="98.9579%" y="1637" width="0.1359%" height="15" fill="rgb(232,96,21)" fg:x="2184" fg:w="3"/><text x="99.2079%" y="1647.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="98.9579%" y="1621" width="0.1359%" height="15" fill="rgb(228,27,39)" fg:x="2184" fg:w="3"/><text x="99.2079%" y="1631.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="98.9579%" y="1605" width="0.1359%" height="15" fill="rgb(211,182,52)" fg:x="2184" fg:w="3"/><text x="99.2079%" y="1615.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="98.9579%" y="1589" width="0.1359%" height="15" fill="rgb(234,178,38)" fg:x="2184" fg:w="3"/><text x="99.2079%" y="1599.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="98.9579%" y="1573" width="0.1359%" height="15" fill="rgb(221,111,3)" fg:x="2184" fg:w="3"/><text x="99.2079%" y="1583.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="99.0032%" y="1557" width="0.0906%" height="15" fill="rgb(228,175,21)" fg:x="2185" fg:w="2"/><text x="99.2532%" y="1567.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0485%" y="1541" width="0.0453%" height="15" fill="rgb(228,174,43)" fg:x="2186" fg:w="1"/><text x="99.2985%" y="1551.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0485%" y="1525" width="0.0453%" height="15" fill="rgb(211,191,0)" fg:x="2186" fg:w="1"/><text x="99.2985%" y="1535.50"></text></g><g><title>malloc (1 samples, 0.05%)</title><rect x="99.0938%" y="1669" width="0.0453%" height="15" fill="rgb(253,117,3)" fg:x="2187" fg:w="1"/><text x="99.3438%" y="1679.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="99.0938%" y="1653" width="0.0453%" height="15" fill="rgb(241,127,19)" fg:x="2187" fg:w="1"/><text x="99.3438%" y="1663.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="99.0938%" y="1637" width="0.0453%" height="15" fill="rgb(218,103,12)" fg:x="2187" fg:w="1"/><text x="99.3438%" y="1647.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="99.0938%" y="1621" width="0.0453%" height="15" fill="rgb(236,214,43)" fg:x="2187" fg:w="1"/><text x="99.3438%" y="1631.50"></text></g><g><title>__mmap (1 samples, 0.05%)</title><rect x="99.0938%" y="1605" width="0.0453%" height="15" fill="rgb(244,144,19)" fg:x="2187" fg:w="1"/><text x="99.3438%" y="1615.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0938%" y="1589" width="0.0453%" height="15" fill="rgb(246,188,10)" fg:x="2187" fg:w="1"/><text x="99.3438%" y="1599.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0938%" y="1573" width="0.0453%" height="15" fill="rgb(212,193,33)" fg:x="2187" fg:w="1"/><text x="99.3438%" y="1583.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0938%" y="1557" width="0.0453%" height="15" fill="rgb(241,51,29)" fg:x="2187" fg:w="1"/><text x="99.3438%" y="1567.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0938%" y="1541" width="0.0453%" height="15" fill="rgb(211,58,19)" fg:x="2187" fg:w="1"/><text x="99.3438%" y="1551.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0938%" y="1525" width="0.0453%" height="15" fill="rgb(229,111,26)" fg:x="2187" fg:w="1"/><text x="99.3438%" y="1535.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0938%" y="1509" width="0.0453%" height="15" fill="rgb(213,115,40)" fg:x="2187" fg:w="1"/><text x="99.3438%" y="1519.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0938%" y="1493" width="0.0453%" height="15" fill="rgb(209,56,44)" fg:x="2187" fg:w="1"/><text x="99.3438%" y="1503.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0938%" y="1477" width="0.0453%" height="15" fill="rgb(230,108,32)" fg:x="2187" fg:w="1"/><text x="99.3438%" y="1487.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0938%" y="1461" width="0.0453%" height="15" fill="rgb(216,165,31)" fg:x="2187" fg:w="1"/><text x="99.3438%" y="1471.50"></text></g><g><title>std::sys::pal::unix::thread::guard::current (4 samples, 0.18%)</title><rect x="99.0938%" y="1701" width="0.1812%" height="15" fill="rgb(218,122,21)" fg:x="2187" fg:w="4"/><text x="99.3438%" y="1711.50"></text></g><g><title>pthread_getattr_np (4 samples, 0.18%)</title><rect x="99.0938%" y="1685" width="0.1812%" height="15" fill="rgb(223,224,47)" fg:x="2187" fg:w="4"/><text x="99.3438%" y="1695.50"></text></g><g><title>pthread_getaffinity_np (3 samples, 0.14%)</title><rect x="99.1391%" y="1669" width="0.1359%" height="15" fill="rgb(238,102,44)" fg:x="2188" fg:w="3"/><text x="99.3891%" y="1679.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="99.1391%" y="1653" width="0.1359%" height="15" fill="rgb(236,46,40)" fg:x="2188" fg:w="3"/><text x="99.3891%" y="1663.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="99.1391%" y="1637" width="0.1359%" height="15" fill="rgb(247,202,50)" fg:x="2188" fg:w="3"/><text x="99.3891%" y="1647.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="99.1844%" y="1621" width="0.0906%" height="15" fill="rgb(209,99,20)" fg:x="2189" fg:w="2"/><text x="99.4344%" y="1631.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="99.1844%" y="1605" width="0.0906%" height="15" fill="rgb(252,27,34)" fg:x="2189" fg:w="2"/><text x="99.4344%" y="1615.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="99.1844%" y="1589" width="0.0906%" height="15" fill="rgb(215,206,23)" fg:x="2189" fg:w="2"/><text x="99.4344%" y="1599.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.2297%" y="1573" width="0.0453%" height="15" fill="rgb(212,135,36)" fg:x="2190" fg:w="1"/><text x="99.4797%" y="1583.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,636 samples, 74.13%)</title><rect x="25.2832%" y="1765" width="74.1278%" height="15" fill="rgb(240,189,1)" fg:x="558" fg:w="1636"/><text x="25.5332%" y="1775.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,636 samples, 74.13%)</title><rect x="25.2832%" y="1749" width="74.1278%" height="15" fill="rgb(242,56,20)" fg:x="558" fg:w="1636"/><text x="25.5332%" y="1759.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,636 samples, 74.13%)</title><rect x="25.2832%" y="1733" width="74.1278%" height="15" fill="rgb(247,132,33)" fg:x="558" fg:w="1636"/><text x="25.5332%" y="1743.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (1,636 samples, 74.13%)</title><rect x="25.2832%" y="1717" width="74.1278%" height="15" fill="rgb(208,149,11)" fg:x="558" fg:w="1636"/><text x="25.5332%" y="1727.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>std::sys_common::thread_info::set (3 samples, 0.14%)</title><rect x="99.2750%" y="1701" width="0.1359%" height="15" fill="rgb(211,33,11)" fg:x="2191" fg:w="3"/><text x="99.5250%" y="1711.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.14%)</title><rect x="99.2750%" y="1685" width="0.1359%" height="15" fill="rgb(221,29,38)" fg:x="2191" fg:w="3"/><text x="99.5250%" y="1695.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.14%)</title><rect x="99.2750%" y="1669" width="0.1359%" height="15" fill="rgb(206,182,49)" fg:x="2191" fg:w="3"/><text x="99.5250%" y="1679.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (3 samples, 0.14%)</title><rect x="99.2750%" y="1653" width="0.1359%" height="15" fill="rgb(216,140,1)" fg:x="2191" fg:w="3"/><text x="99.5250%" y="1663.50"></text></g><g><title>std::sys::pal::common::thread_local::fast_local::Key&lt;T&gt;::register_dtor (3 samples, 0.14%)</title><rect x="99.2750%" y="1637" width="0.1359%" height="15" fill="rgb(232,57,40)" fg:x="2191" fg:w="3"/><text x="99.5250%" y="1647.50"></text></g><g><title>__cxa_thread_atexit_impl (3 samples, 0.14%)</title><rect x="99.2750%" y="1621" width="0.1359%" height="15" fill="rgb(224,186,18)" fg:x="2191" fg:w="3"/><text x="99.5250%" y="1631.50"></text></g><g><title>[libc.so.6] (1 samples, 0.05%)</title><rect x="99.3657%" y="1605" width="0.0453%" height="15" fill="rgb(215,121,11)" fg:x="2193" fg:w="1"/><text x="99.6157%" y="1615.50"></text></g><g><title>__munmap (1 samples, 0.05%)</title><rect x="99.4110%" y="1717" width="0.0453%" height="15" fill="rgb(245,147,10)" fg:x="2194" fg:w="1"/><text x="99.6610%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.4110%" y="1701" width="0.0453%" height="15" fill="rgb(238,153,13)" fg:x="2194" fg:w="1"/><text x="99.6610%" y="1711.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.4110%" y="1685" width="0.0453%" height="15" fill="rgb(233,108,0)" fg:x="2194" fg:w="1"/><text x="99.6610%" y="1695.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.4110%" y="1669" width="0.0453%" height="15" fill="rgb(212,157,17)" fg:x="2194" fg:w="1"/><text x="99.6610%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.4110%" y="1653" width="0.0453%" height="15" fill="rgb(225,213,38)" fg:x="2194" fg:w="1"/><text x="99.6610%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.4110%" y="1637" width="0.0453%" height="15" fill="rgb(248,16,11)" fg:x="2194" fg:w="1"/><text x="99.6610%" y="1647.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.4110%" y="1621" width="0.0453%" height="15" fill="rgb(241,33,4)" fg:x="2194" fg:w="1"/><text x="99.6610%" y="1631.50"></text></g><g><title>[libc.so.6] (1,647 samples, 74.63%)</title><rect x="24.8754%" y="1813" width="74.6262%" height="15" fill="rgb(222,26,43)" fg:x="549" fg:w="1647"/><text x="25.1254%" y="1823.50">[libc.so.6]</text></g><g><title>[libc.so.6] (1,647 samples, 74.63%)</title><rect x="24.8754%" y="1797" width="74.6262%" height="15" fill="rgb(243,29,36)" fg:x="549" fg:w="1647"/><text x="25.1254%" y="1807.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (1,638 samples, 74.22%)</title><rect x="25.2832%" y="1781" width="74.2184%" height="15" fill="rgb(241,9,27)" fg:x="558" fg:w="1638"/><text x="25.5332%" y="1791.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::stack_overflow::Handler&gt; (2 samples, 0.09%)</title><rect x="99.4110%" y="1765" width="0.0906%" height="15" fill="rgb(205,117,26)" fg:x="2194" fg:w="2"/><text x="99.6610%" y="1775.50"></text></g><g><title>&lt;std::sys::pal::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="99.4110%" y="1749" width="0.0906%" height="15" fill="rgb(209,80,39)" fg:x="2194" fg:w="2"/><text x="99.6610%" y="1759.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::drop_handler (2 samples, 0.09%)</title><rect x="99.4110%" y="1733" width="0.0906%" height="15" fill="rgb(239,155,6)" fg:x="2194" fg:w="2"/><text x="99.6610%" y="1743.50"></text></g><g><title>sigaltstack (1 samples, 0.05%)</title><rect x="99.4563%" y="1717" width="0.0453%" height="15" fill="rgb(212,104,12)" fg:x="2195" fg:w="1"/><text x="99.7063%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.4563%" y="1701" width="0.0453%" height="15" fill="rgb(234,204,3)" fg:x="2195" fg:w="1"/><text x="99.7063%" y="1711.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.4563%" y="1685" width="0.0453%" height="15" fill="rgb(251,218,7)" fg:x="2195" fg:w="1"/><text x="99.7063%" y="1695.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.4563%" y="1669" width="0.0453%" height="15" fill="rgb(221,81,32)" fg:x="2195" fg:w="1"/><text x="99.7063%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.4563%" y="1653" width="0.0453%" height="15" fill="rgb(214,152,26)" fg:x="2195" fg:w="1"/><text x="99.7063%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.4563%" y="1637" width="0.0453%" height="15" fill="rgb(223,22,3)" fg:x="2195" fg:w="1"/><text x="99.7063%" y="1647.50"></text></g><g><title>[unknown] (10 samples, 0.45%)</title><rect x="99.5016%" y="1813" width="0.4531%" height="15" fill="rgb(207,174,7)" fg:x="2196" fg:w="10"/><text x="99.7516%" y="1823.50"></text></g><g><title>[unknown] (8 samples, 0.36%)</title><rect x="99.5922%" y="1797" width="0.3625%" height="15" fill="rgb(224,19,52)" fg:x="2198" fg:w="8"/><text x="99.8422%" y="1807.50"></text></g><g><title>[unknown] (8 samples, 0.36%)</title><rect x="99.5922%" y="1781" width="0.3625%" height="15" fill="rgb(228,24,14)" fg:x="2198" fg:w="8"/><text x="99.8422%" y="1791.50"></text></g><g><title>[unknown] (8 samples, 0.36%)</title><rect x="99.5922%" y="1765" width="0.3625%" height="15" fill="rgb(230,153,43)" fg:x="2198" fg:w="8"/><text x="99.8422%" y="1775.50"></text></g><g><title>[unknown] (6 samples, 0.27%)</title><rect x="99.6828%" y="1749" width="0.2719%" height="15" fill="rgb(231,106,12)" fg:x="2200" fg:w="6"/><text x="99.9328%" y="1759.50"></text></g><g><title>[unknown] (5 samples, 0.23%)</title><rect x="99.7281%" y="1733" width="0.2266%" height="15" fill="rgb(215,92,2)" fg:x="2201" fg:w="5"/><text x="99.9781%" y="1743.50"></text></g><g><title>[unknown] (5 samples, 0.23%)</title><rect x="99.7281%" y="1717" width="0.2266%" height="15" fill="rgb(249,143,25)" fg:x="2201" fg:w="5"/><text x="99.9781%" y="1727.50"></text></g><g><title>[unknown] (5 samples, 0.23%)</title><rect x="99.7281%" y="1701" width="0.2266%" height="15" fill="rgb(252,7,35)" fg:x="2201" fg:w="5"/><text x="99.9781%" y="1711.50"></text></g><g><title>[unknown] (5 samples, 0.23%)</title><rect x="99.7281%" y="1685" width="0.2266%" height="15" fill="rgb(216,69,40)" fg:x="2201" fg:w="5"/><text x="99.9781%" y="1695.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="99.8188%" y="1669" width="0.1359%" height="15" fill="rgb(240,36,33)" fg:x="2203" fg:w="3"/><text x="100.0688%" y="1679.50"></text></g><g><title>[unknown] (3 samples, 0.14%)</title><rect x="99.8188%" y="1653" width="0.1359%" height="15" fill="rgb(231,128,14)" fg:x="2203" fg:w="3"/><text x="100.0688%" y="1663.50"></text></g><g><title>all (2,207 samples, 100%)</title><rect x="0.0000%" y="1845" width="100.0000%" height="15" fill="rgb(245,143,14)" fg:x="0" fg:w="2207"/><text x="0.2500%" y="1855.50"></text></g><g><title>tokio-runtime-w (1,665 samples, 75.44%)</title><rect x="24.5582%" y="1829" width="75.4418%" height="15" fill="rgb(222,130,28)" fg:x="542" fg:w="1665"/><text x="24.8082%" y="1839.50">tokio-runtime-w</text></g><g><title>__vdso_clock_gettime (1 samples, 0.05%)</title><rect x="99.9547%" y="1813" width="0.0453%" height="15" fill="rgb(212,10,48)" fg:x="2206" fg:w="1"/><text x="100.2047%" y="1823.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.9547%" y="1797" width="0.0453%" height="15" fill="rgb(254,118,45)" fg:x="2206" fg:w="1"/><text x="100.2047%" y="1807.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.9547%" y="1781" width="0.0453%" height="15" fill="rgb(228,6,45)" fg:x="2206" fg:w="1"/><text x="100.2047%" y="1791.50"></text></g></svg></svg>